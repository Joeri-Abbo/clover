/** @wordpress */
import {__} from '@wordpress/i18n'
import {ColorPalette, InspectorControls} from '@wordpress/block-editor'
import {PanelBody, RangeControl} from '@wordpress/components'

/** Modules */
import chroma from 'chroma-js'
import PropTypes from 'prop-types'

/**
 * Inspector Panel: Color Overlay
 *
 * @prop {string}   color
 * @prop {number}   opacity
 * @prop {function} setAttributes
 */
const PanelColorOverlay = ({color, opacity, setAttributes}) => {
  /**
   * Set color attribute
   * @param {string} color
   */
  const setColor = color => setAttributes({color})

  /**
   * Set opacity attribute
   * @param {number} opacity
   */
  const setOpacity = opacity => setAttributes({opacity})

  /**
   * Render panel
   */
  return (
    <InspectorControls>
      <PanelBody title={__('Overlay', '{{namespace}}')}>
        <ColorPalette
          value={color}
          onChange={setColor}
        />

        {color && (
          <RangeControl
            label={__('Opacity', '{{namespace}}')}
            value={opacity || 1}
            onChange={setOpacity}
            min={0}
            max={100}
          />
        )}
      </PanelBody>
    </InspectorControls>
  )
}

PanelColorOverlay.propTypes = {
  color: PropTypes.string.isRequired,
  opacity: PropTypes.number.isRequired,
  setAttributes: PropTypes.func.isRequired,
}

/**
 * Applies opacity value to color value
 *
 * @param {string}  color
 * @param {opacity} color
 */
const mixColor = (color, opacity) =>
  chroma(color).alpha(opacity * 0.01).hex('rgba')

export {mixColor}
export default PanelColorOverlay
