{"version":3,"sources":["../src/bud/store.js","../src/bud/containers/Runner/tasks/addDependencies.js","../src/bud/containers/Runner/tasks/install.js","../src/bud/containers/Runner/helpers.js","../src/bud/containers/Runner/Process.js","../src/bud/containers/Runner/Prettify.js","../src/bud/containers/Runner/Write.js","../src/bud/containers/Runner/tasks/json.js","../src/bud/containers/Runner/tasks/scaffold.js","../src/bud/containers/Runner/Read.js","../src/bud/containers/Runner/tasks/template.js","../src/bud/containers/Runner/tasks/index.js","../src/bud/containers/Runner/index.js","../src/bud/containers/Prompt.js","../src/bud/index.js","../src/bud/components/Banner.js","../src/bud/containers/Search.js","generate/index.js"],"names":["store","writeDir","projectConfig","label","prompts","data","status","error","complete","ready","budfile","sprout","search","core","results","plugins","project","Provider","StateProvider","children","state","dispatch","action","type","key","value","execaOptions","cwd","process","addDependencies","task","repo","pkgs","dev","observer","installation","next","execa","command","join","stdout","on","then","install","options","helpers","helper","fn","Array","prototype","slice","call","arguments","object","component","indexOf","inverse","components","hasInstance","forEach","Process","string","handlebars","registerHelper","registerHelpers","compile","Prettify","extension","parsers","js","jsx","graphql","css","md","html","htm","ts","tsx","yml","yaml","less","parser","config","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","prettified","Write","target","CWD","json","file","merge","require","output","prettyString","err","scaffold","paths","pipe","path","Observable","pathTmp","dirPath","subscribe","Read","template","templateDir","prettier","split","length","tasks","Runner","setStatus","setError","setComplete","actions","JSON","stringify","Prompt","Bud","propTypes","PropTypes","defaultProps","colors","success","Banner","width","spinner","setSpinner","statusColor","setStatusColor","white","Search","glob","setResults","array","isRequired","globs","Generate","request","setBudfile","setSprout","description","GenerateCLI","props","positionalArgs"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import React, {createContext, useReducer} from 'react'\n\n/**\n * Bud application context\n */\nexport const store = createContext({\n  writeDir: null,\n  projectConfig: null,\n  label: null,\n  prompts: null,\n  data: null,\n  status: null,\n  error: null,\n  complete: false,\n  ready: false,\n  budfile: null,\n  sprout: null,\n  search: {\n    core: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n    plugins: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n    project: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n  },\n})\n\nconst {Provider} = store\n\n/**\n * State provider\n */\nexport const StateProvider = ({children}) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'SET': {\n        const {key, value} = action\n        return {\n          ...state,\n          [key]: value,\n        }\n      }\n    }\n    switch (action.type) {\n      case 'SET_LABEL': {\n        const {label} = action\n        return {\n          ...state,\n          label,\n        }\n      }\n      case 'SET_PROMPTS': {\n        const {prompts} = action\n        return {\n          ...state,\n          prompts,\n        }\n      }\n      case 'SET_DATA': {\n        const {data} = action\n        return {\n          ...state,\n          data: {\n            ...state.data,\n            ...data,\n          },\n        }\n      }\n      case 'SET_READY': {\n        const {ready} = action\n        return {\n          ...state,\n          ready,\n        }\n      }\n      case 'SET_STATUS': {\n        const {status} = action\n        return {\n          ...state,\n          status,\n        }\n      }\n      case 'SET_ERROR': {\n        const {error} = action\n        return {\n          ...state,\n          error,\n        }\n      }\n      case 'SET_COMPLETE': {\n        const {complete} = action\n        return {\n          ...state,\n          complete,\n        }\n      }\n      case 'SEARCH_RESULTS': {\n        const {results, status, complete} = action\n        return {\n          ...state,\n          search: {\n            ...state.search,\n            [`${action.label}`]: {\n              results,\n              status,\n              complete,\n            },\n          },\n        }\n      }\n    }\n  }, store)\n\n  return <Provider value={{state, dispatch}}>{children}</Provider>\n}\n","import execa from 'execa'\n\nconst execaOptions = {cwd: process.cwd()}\n\n/**\n * Add dependencies\n */\nconst addDependencies = async function ({task: {repo, pkgs, dev}, observer}) {\n  let installation\n\n  observer.next({status: `Installing packages from ${repo}...`})\n\n  if (repo !== 'npm' && repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (repo == 'npm') {\n    installation = execa.command(`yarn add ${dev ? `-D` : ``} ${pkgs.join(' ')}`, execaOptions)\n  }\n\n  if (repo == 'packagist') {\n    installation = execa.command(\n      `composer require ${pkgs.join(' ')} ${dev ? `--development` : ``}`,\n      execaOptions,\n    )\n  }\n\n  installation.stdout.on('data', status => {\n    observer.next({status})\n  })\n\n  installation.then(() => observer.complete())\n}\n\nexport default addDependencies\n","import execa from 'execa'\n\nconst install = async ({task: {repo}, writeDir, observer}) => {\n  const options = {cwd: writeDir}\n\n  observer.next({status: `Installing packages from ${repo}...`})\n\n  if (repo !== 'npm' && repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (repo == 'npm') {\n    const {stdout} = execa(`yarn`, [`install`], options)\n    stdout.then(() => {\n      observer.complete()\n    })\n  }\n\n  if (repo == 'packagist') {\n    const {stdout} = execa(`composer`, [`install`], options)\n    stdout.then(() => {\n      observer.complete()\n    })\n  }\n}\n\nexport default install\n","/**\n * Handlebars helpers\n */\nconst helpers = data => [\n  {\n    helper: 'array',\n    fn: function () {\n      return Array.prototype.slice.call(arguments, 0, -1)\n    },\n  },\n  {\n    helper: 'has',\n    fn: function (object, component, options) {\n      if (data[object].indexOf(component) > -1) {\n        return options.fn(this)\n      }\n\n      return options.inverse(this)\n    },\n  },\n  {\n    helper: 'hasAny',\n    fn: function (object, components, options) {\n      let hasInstance = false\n\n      if (components) {\n        components.forEach(component => {\n          if (data[object].indexOf(component) > -1) {\n            hasInstance = true\n          }\n        })\n      }\n\n      return hasInstance ? options.fn(this) : options.inverse(this)\n    },\n  },\n  {\n    helper: 'raw',\n    fn: function (options) {\n      return options.fn()\n    },\n  },\n]\n\nexport default helpers\n","/**\n * Handlebars\n */\nimport handlebars from 'handlebars'\nimport handlebarsHelpers from 'handlebars-helpers'\nimport helpers from './helpers'\n\n/**\n * Process Handlebars template\n *\n * @param {string} string\n * @param {object} sprout\n */\nconst Process = async ({observer, string, sprout, data}) => {\n  handlebarsHelpers({handlebars})\n  helpers(data).forEach(({helper, fn}) => {\n    handlebars.registerHelper(helper, fn)\n  })\n\n  sprout?.registerHelpers?.forEach(({helper, fn}) => {\n    handlebars.registerHelper(helper, fn)\n  })\n\n  observer.next({status: `Compiling template`})\n  return await handlebars.compile(string)(data)\n}\n\nexport default Process\n","import {format} from 'prettier'\n\n/**\n * Prettier\n *\n * @param {Observable} observer\n * @param {string} extension\n * @param {string} string\n */\nconst Prettify = async ({observer, string, extension}) => {\n  const parsers = {\n    js: 'babel',\n    jsx: 'babel',\n    graphql: 'graphql',\n    css: 'css',\n    md: 'markdown',\n    html: 'html',\n    htm: 'html',\n    ts: 'typescript',\n    tsx: 'typescript',\n    yml: 'yaml',\n    yaml: 'yaml',\n    less: 'less',\n  }\n\n  const parser = parsers[`${extension}`]\n\n  const config = {\n    arrowParens: 'avoid',\n    bracketSpacing: false,\n    tabWidth: 2,\n    printWidth: 100,\n    singleQuote: true,\n    jsxBracketSameLine: true,\n    useTabs: false,\n    trailingComma: 'all',\n    semi: false,\n    parser,\n  }\n\n  /**\n   * Make prettier.\n   */\n  observer.next(\n    parser ? `Skipping prettier. No support for this extension.` : `Prettifying file output`,\n  )\n\n  const prettified = parser ? format(string, config) : string\n\n  return prettified\n}\n\nexport default Prettify\n","import {outputFile} from 'fs-extra'\n\n/**\n * Write\n *\n * @param {Observer} observer\n * @param {string}   target\n * @param {string}   string\n */\nconst Write = ({observer, target, string}) => {\n  !(observer && target && string)\n    ? observer.next({status: `Waiting for file contents..`})\n    : (() => {\n        observer.next({status: `Writing ${target}`})\n        outputFile(target, string).then(() => {\n          observer.complete()\n        })\n      })()\n}\n\nexport default Write\n","import {join} from 'path'\n\nimport Process from './../Process'\nimport Prettify from './../Prettify'\nimport Write from './../Write'\n\nconst CWD = process.cwd()\n\n/**\n * JSON\n */\nconst json = async ({task: {file, merge}, sprout, data, observer}) => {\n  const json = require(join(CWD, file))\n\n  observer.next({status: `Writing JSON to ${file}`})\n  const output = merge(json)\n\n  try {\n    const string = await Process({\n      observer,\n      string: output,\n      sprout,\n      data,\n    })\n\n    const prettyString = await Prettify({\n      observer,\n      string,\n      extension: 'json',\n    })\n\n    await Write({\n      observer,\n      target: join(CWD, file),\n      string: prettyString,\n    })\n\n    observer.complete()\n  } catch (err) {\n    observer.error(`There was a problem writing to ${file}`)\n  }\n}\n\nexport default json\n","/* eslint-disable react/display-name */\n/* eslint-disable react/jsx-no-undef */\nimport {join} from 'path'\nimport {ensureDir} from 'fs-extra'\nimport {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\nimport Process from './../Process'\n\n/**\n * Task: scaffold dir\n *\n * @prop {object}   task\n * @prop {string}   writeDir\n * @prop {object}   sprout\n * @prop {object}   data\n * @prop {Observer} observer\n */\nconst scaffold = async ({task: {paths}, writeDir, sprout, data, observer}) => {\n  observer.next({status: `Creating directories`})\n  from(paths)\n    .pipe(\n      concatMap(path => {\n        return new Observable(async observer => {\n          try {\n            const pathTmp = await Process({sprout, data, observer, string: path})\n            const dirPath = join(writeDir, pathTmp)\n\n            try {\n              await ensureDir(dirPath).then(() => {\n                observer.complete()\n              })\n            } catch {\n              observer.error(`Scaffolding action throw: ${paths}, ${dirPath}`)\n            }\n          } catch {\n            observer.error(`Action error: scaffold, pathTemplate`)\n          }\n        })\n      }),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default scaffold\n","import {readFile} from 'fs-extra'\n\n/**\n * Read file\n *\n * @param {string} templateDir\n * @param {string} template\n */\nconst Read = async ({observer, file}) => {\n  try {\n    observer.next({status: `Reading: ${file}`})\n\n    return await readFile(file, 'utf8')\n  } catch (error) {\n    observer.error(error)\n  }\n}\n\nexport default Read\n","import {join} from 'path'\n\nimport Read from './../Read'\nimport Process from './../Process'\nimport Prettify from './../Prettify'\nimport Write from './../Write'\n\n/**\n * Template\n */\nconst template = async ({task, sprout, data, writeDir, templateDir, observer}) => {\n  let string\n\n  observer.next({status: `Processing templates`})\n\n  string = await Read({\n    observer,\n    file: `${templateDir}/${task.template}`,\n  })\n\n  string = await Process({\n    observer,\n    string,\n    sprout,\n    data,\n  })\n\n  if (! task.prettier == false) string = await Prettify({\n    observer,\n    string: template,\n    extension: task.path.split('.')[task.path.split('.').length - 1],\n  })\n\n  string = await Write({\n    observer,\n    string,\n    target: join(writeDir, task.path),\n  })\n\n  observer.next({status: string})\n}\n\nexport default template\n","/** tasks */\nimport addDependencies from './addDependencies'\nimport install from './install'\nimport json from './json'\nimport scaffold from './scaffold'\nimport template from './template'\n\nconst tasks = {\n  addDependencies,\n  install,\n  json,\n  scaffold,\n  template,\n}\n\nexport default tasks\n","/* eslint-disable react/display-name */\n/* eslint-disable react/jsx-no-undef */\nimport {join, dirname} from 'path'\nimport React, {useState, useContext, useEffect} from 'react'\nimport {Box, Color, Text} from 'ink'\nimport {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/** application */\nimport {store} from './../../store'\nimport tasks from './tasks'\n\n/**\n * Runner\n *\n * @param {object}   data\n * @param {object}   sprout\n * @param {string}   templateDir\n * @param {string}   writeDir\n */\nconst Runner = ({sprout, data, budfile, writeDir, ready}) => {\n  const {state, dispatch} = useContext(store)\n  const [status, setStatus] = useState(null)\n  const [error, setError] = useState(null)\n  const [complete, setComplete] = useState(false)\n  useEffect(() => {\n    ready && new Observable(observer =>\n      from(sprout.actions)\n        .pipe(\n          concatMap(task => {\n            return new Observable(async observer => {\n              return tasks[task.action]({\n                task,\n                sprout,\n                data,\n                budfile,\n                observer,\n                templateDir: join(dirname(budfile), 'templates'),\n                writeDir,\n              })\n            })\n          }),\n        )\n        .subscribe({\n          next: next => observer.next(next),\n          error: error => observer.error(error),\n          complete: () => observer.complete(),\n        })\n      ).subscribe({\n        next: next => setStatus(next.status),\n        error: error => setError(error),\n        complete: () => setComplete(true),\n      })\n  }, [state, sprout])\n\n  useEffect(() => {\n    complete && (() => {\n      dispatch({\n        type: 'SET',\n        key: 'status',\n        value: 'complete',\n      })\n    })()\n  }, [complete])\n\n  return ! complete ? (\n    <Box flexDirection=\"column\">\n      {status && (\n        <Box flexDirection=\"column\">\n          <Text>\n            <Color green>{status}</Color>\n          </Text>\n        </Box>\n      )}\n\n      {error && (\n        <Box flexDirection=\"column\">\n          <Text>\n            <Color red>{\n              typeof error !== 'string'\n                ? JSON.stringify(error)\n                : error\n            }</Color>\n          </Text>\n        </Box>\n      )}\n    </Box>\n  ) : []\n}\n\nexport default Runner\n","import {useEffect, useContext} from 'react'\nimport {prompt} from 'enquirer'\n\n/** application */\nimport {store} from '../store'\n\n/**\n * Prompts\n */\nconst Prompt = ({prompts}) => {\n  const {state, dispatch} = useContext(store)\n\n  /**\n   * If there are prompts to run then do so\n   * and dispatch the results to the global store.\n   */\n  useEffect(() => {\n    if (prompts && !state.ready) {\n      dispatch({\n        type: 'SET',\n        key: 'status',\n        value: 'questions',\n      })\n      prompt(prompts).then(data => {\n          /**\n           * Dispatch resultant data to the global store,\n           * to be merged with whatever is already there.\n           */\n          dispatch({\n            type: 'SET_DATA',\n            data,\n          })\n\n          dispatch({\n            type: 'SET',\n            key: 'ready',\n            value: true,\n          })\n        })\n    }\n  }, [prompts])\n\n  return null\n}\n\nexport default Prompt\n","import React, {useState, useEffect, useContext} from 'react'\nimport PropTypes from 'prop-types'\nimport {Box} from 'ink'\nimport Spinner from 'ink-spinner'\n\n/** application */\nimport Runner from './containers/Runner'\nimport Prompt from './containers/Prompt'\n\n/**\n * Bud Application\n *\n * This container represents the main Bud application.\n *\n * It does not handle the initial command invocation or\n * routing. Rather, the  moduleReady and module props are supplied\n * by a command component, which are housed in the commands dir.\n *\n * @see ink (react cli framework)\n * @see pastel (ink project framework)\n *\n * @prop {bool}   moduleReady\n * @prop {string} module\n * @prop {string} writeDir\n */\nconst Bud = ({writeDir, sprout, budfile, data, ready}) => {\n  /**\n   * Render the main app flow.\n   */\n  return sprout ? (\n    <Box flexDirection=\"column\">\n      <Prompt prompts={sprout.prompts} />\n      <Runner\n        ready={ready}\n        budfile={budfile}\n        writeDir={writeDir}\n        sprout={sprout}\n        data={data}\n      />\n    </Box>\n  ) : <Box><Spinner /> Loading...</Box>\n}\n\nBud.propTypes = {\n  writeDir: PropTypes.string,\n}\n\nBud.defaultProps = {\n  writeDir: null,\n  ready: false,\n}\n\nexport default Bud\n","import React, {useContext, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {Box, Text, Color} from 'ink'\nimport Link from 'ink-link'\nimport Spinner from 'ink-spinner'\nimport {store} from './../store'\nimport useStdoutDimensions from 'ink-use-stdout-dimensions'\n\nconst colors = {\n  success: '#96EF85',\n  error: '#BE425E',\n}\n\n/**\n * Banner\n *\n * @prop {string} label\n */\nconst Banner = ({label}) => {\n  const {state} = useContext(store)\n  const [width] = useStdoutDimensions()\n  const [spinner, setSpinner] = useState(true)\n  const [status, setStatus] = useState(false)\n  const [statusColor, setStatusColor] = useState('#ffffff')\n  useEffect(() => {\n    if (state?.status && state.status == 'complete') {\n      setStatus('🎉')\n      setStatusColor(colors.success)\n      setSpinner(false)\n    }\n    if (state?.status && state.status == 'building') {\n      setStatus('👩‍💻')\n      setStatusColor(colors.white)\n      setSpinner(true)\n    }\n    if (state?.status && state.status == 'questions') {\n      setStatus('❔')\n      setStatusColor(colors.white)\n      setSpinner(false)\n    }\n    if (state?.status && state.status == 'error') {\n      setStatus('💢')\n      setStatusColor(colors.error)\n      setSpinner(false)\n    }\n  }, [state])\n\n  return state ? (\n    <Box\n      flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      marginTop={1}\n      width={width - width / 20}>\n      <Box flexDirection=\"row\" justifyContent=\"space-between\">\n        <Box width={1} marginRight={2}>\n          {spinner ? <Spinner /> : <Text>{status}</Text>}\n        </Box>\n\n        <Box>\n          <Text>\n            <Color hex={statusColor}>{label}</Color>\n          </Text>\n        </Box>\n      </Box>\n\n      <Box flexDirection=\"row\">\n        <Text>{`🌱`}</Text>\n        <Box>\n          <Text bold>\n            <Link url=\"https://roots.io/bud\">\n              <Color green>{'Bud'}</Color>\n            </Link>\n          </Text>\n        </Box>\n      </Box>\n    </Box>\n  ) : (\n    <Box>\n      <Spinner /> Loading\n    </Box>\n  )\n}\n\nBanner.propTypes = {\n  label: PropTypes.string,\n}\n\nexport default Banner\n","import {useContext, useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport globby from 'globby'\nimport {Observable} from 'rxjs'\n\n/** application */\nimport {store} from '../store'\n\n/**\n * Search\n *\n * @prop {array}  glob\n * @prop {string} label\n */\nconst Search = ({glob, label}) => {\n  const {dispatch} = useContext(store)\n\n  /**\n   * Return an observable emitting\n   * budfile matches.\n   */\n  const [search] = useState(\n    new Observable(async observer => {\n      observer.next({status: 'Searching'})\n\n      const results = await globby(glob)\n\n      observer.next({\n        results,\n      })\n\n      observer.complete()\n    }),\n  )\n\n  /**\n   * Once there is an observer available to subscribe to,\n   * use what it emits to set various component states.\n   */\n  const [status, setStatus] = useState(null)\n  const [complete, setComplete] = useState(null)\n  const [results, setResults] = useState(null)\n  useEffect(() => {\n    search && search.subscribe({\n      next: next => {\n        next.status && setStatus(next.status)\n        next.results && setResults(next.results)\n      },\n      complete: () => setComplete(true),\n      error: () => setComplete(true),\n    })\n  }, [search])\n\n  /**\n   * Mirror any changes to component state\n   * in the global store.\n   */\n  useEffect(() => {\n    dispatch({\n      type: 'SEARCH_RESULTS',\n      label,\n      results,\n      complete,\n      status,\n    })\n  }, [results, status, complete])\n\n  /**\n   * Render\n   */\n  return null\n}\n\nSearch.propTypes = {\n  glob: PropTypes.array.isRequired,\n  label: PropTypes.string,\n}\n\nSearch.defaultProps = {\n  label: 'Search',\n}\n\nexport default Search\n","import React, {useContext, useState, useEffect} from 'react'\nimport {Box} from 'ink'\nimport PropTypes from 'prop-types'\n\n/** application */\nimport {store, StateProvider} from '../../src/bud/store'\nimport Bud from '../../src/bud'\nimport Banner from '../../src/bud/components/Banner'\nimport Search from '../../src/bud/containers/Search'\n\nconst cwd = process.cwd()\n\n/**\n * Scaffold candidate locations\n */\nconst globs = {\n  project: search => `${cwd}/.bud/budfiles/${search}/*.bud.js`,\n  plugins: search => `${cwd}/node_modules/**/bud-plugin-*/${search}/*.bud.js`,\n  core: search => `${cwd}/node_modules/@roots/bud/src/budfiles/**/${search}.bud.js`,\n}\n\n/**\n * Generate\n *\n * @prop {string} request\n */\nconst Generate = ({request}) => {\n  const {dispatch, state} = useContext(store)\n  const [budfile, setBudfile] = useState(null)\n  useEffect(() => {\n    state && setBudfile(\n      state?.search?.project?.complete && state.search.project.results.length > 0 ? state.search.project.results[0] :\n      state?.search?.plugins?.complete && state.search.plugins.results.length > 0 ? state.search.plugins.results[0] :\n      state?.search?.core?.complete    && state.search.core.results.length > 0 ? state.search.core.results[0] :\n      null\n    )\n  }, [state])\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_DATA',\n      data: require(`${cwd}/.bud/bud.config.json`).project,\n    })\n\n    budfile && dispatch({\n      type: 'SET',\n      key: 'budfile',\n      value: budfile,\n    })\n  }, [budfile])\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET',\n      key: 'writeDir',\n      value: cwd,\n    })\n  }, [cwd])\n\n\n  const [sprout, setSprout] = useState(null)\n  useEffect(() => {\n    budfile && setSprout(require(budfile))\n  }, [budfile])\n\n  useEffect(() => {\n    sprout && dispatch({\n      type: 'SET',\n      key: 'sprout',\n      value: sprout,\n    })\n\n    sprout?.description && dispatch({\n      type: 'SET',\n      key: 'label',\n      value: sprout.description,\n    })\n\n    sprout && !sprout.prompts && dispatch({\n      type: 'SET',\n      key: 'ready',\n      value: true,\n    })\n  }, [sprout])\n\n  return (\n    <Box flexDirection={'column'}>\n      <Banner label={`bud generate ${request}`} />\n      <Search label=\"project\" glob={[globs.project(request)]} />\n      <Search label=\"plugins\" glob={[globs.plugins(request)]} />\n      <Search label=\"core\" glob={[globs.core(request)]} />\n      <Bud {...state} />\n    </Box>\n  )\n}\n\n/** Command: bud generate */\n/// Generate project functionality\nconst GenerateCLI = props => (\n  <StateProvider>\n    <Box>\n      <Generate {...props} />\n    </Box>\n  </StateProvider>\n)\n\nGenerateCLI.propTypes = {\n  // Requested generator\n  request: PropTypes.string,\n}\n\nGenerateCLI.positionalArgs = ['request']\n\nexport default GenerateCLI\n"]}