{"version":3,"sources":["../src/bud/compiler/helpers/index.js","../src/bud/compiler/index.js","../src/bud/config/index.js","../src/bud/data/index.js","../src/bud/util/command.js","../src/bud/util/index.js","../src/bud/pipes/actions.js","../src/bud/pipes/index.js","../src/bud/actions/addDependencies.js","../src/bud/actions/compile.js","../src/bud/actions/copy.js","../src/bud/actions/ensureDir.js","../src/bud/actions/ensureDirs.js","../src/bud/actions/git.js","../src/bud/actions/install.js","../src/bud/actions/json.js","../src/bud/actions/touch.js","../src/bud/actions/index.js","../src/bud/prettier/inferParser.js","../prettier.config.js","../src/bud/prettier/format.js","../src/bud/prettier/index.js","../src/bud/logger/index.js","../src/bud/index.js","../src/components/Banner.js","../src/components/Tasks.js","../src/components/Error.js","../src/components/App.js","generate/index.js"],"names":["helpers","data","helper","fn","Array","prototype","slice","call","arguments","object","component","options","indexOf","inverse","components","hasInstance","forEach","makeCompiler","sprout","handlebars","registerHelpers","push","registerHelper","compiler","make","path","compile","makeConfig","projectDir","templateDir","config","execa","cwd","makeData","setData","key","value","project","command","cmd","makeUtil","actions","observer","props","tasks","pipe","task","Observable","subscribe","next","error","complete","pipes","addDependencies","logger","util","installation","repo","info","emitter","dev","pkgs","join","stdout","on","status","then","prettier","src","dest","template","parser","format","copy","ensureDir","fs","ensureDirs","dirs","clone","git","action","install","json","require","file","output","merge","err","console","log","touch","JSON","stringify","register","handle","callback","parsers","js","jsx","graphql","css","md","html","htm","ts","tsx","yml","yaml","less","inferParser","ext","split","length","module","exports","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","overrides","files","content","pino","prettifier","makeLogger","prettyPrint","levelFirst","destination","bud","registerActions","job","emitted","Banner","label","Tasks","noClear","write","Error","message","process","App","outDir","configFile","prompts","setPrompts","setStatus","setError","setComplete","subscription","setSubscription","exit","unsubscribe","propTypes","PropTypes","string","bool","defaultProps","coreResults","name","pluginResults","projectResults","Generate","budName","budfile","setBudfile","checked","setChecked","modules","roots","buds","setSprout","setTemplateDir","description","positionalArgs"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["/**\n * Templating helpers\n */\nconst helpers = data => [\n  {\n    helper: 'array',\n    fn: function () {\n      return Array.prototype.slice.call(arguments, 0, -1)\n    },\n  },\n  {\n    helper: 'has',\n    fn: function (object, component, options) {\n      if (data[object].indexOf(component) > -1) {\n        return options.fn(this)\n      }\n\n      return options.inverse(this)\n    },\n  },\n  {\n    helper: 'hasAny',\n    fn: function (object, components, options) {\n      let hasInstance = false\n\n      if (components) {\n        components.forEach(component => {\n          if (data[object].indexOf(component) > -1) {\n            hasInstance = true\n          }\n        })\n      }\n\n      return hasInstance ? options.fn(this) : options.inverse(this)\n    },\n  },\n  {\n    helper: 'raw',\n    fn: function (options) {\n      return options.fn()\n    },\n  },\n]\n\nexport default helpers\n","import handlebars from 'handlebars'\nimport helpers from './helpers'\nimport handlebarsHelpers from 'handlebars-helpers'\n\n/**\n * Compiler.\n *\n * @param {handlebars} handlebars\n */\nconst makeCompiler = ({sprout, data}) => {\n  handlebarsHelpers({handlebars})\n\n  sprout.registerHelpers &&\n    sprout.registerHelpers.forEach(helper => {\n      helpers.push(helper)\n    })\n\n  helpers(data).forEach(({helper, fn}) => {\n    handlebars.registerHelper(helper, fn)\n  })\n\n  return {\n    compiler: handlebars,\n\n    /**\n     * Make template.\n     *\n     * @param {string} path\n     */\n    make: function (path) {\n      return this.compiler.compile(path)\n    },\n  }\n}\n\nexport default makeCompiler\n","/**\n * Config\n *\n * @param {string} projectDir\n */\nconst makeConfig = ({projectDir, templateDir, config}) => ({\n  projectDir,\n  templateDir,\n  ...config,\n  execa: {\n    cwd: projectDir,\n  },\n})\n\nexport default makeConfig\n","/**\n * Make data\n *\n * @type   {func}\n * @prop   {object} data\n * @return {object}\n */\nconst makeData = ({config, data}) => {\n  const setData = ({key, value}) => {\n    data[`${key}`] = value\n  }\n\n  return {\n    ...(config ? config.project : []),\n    ...data,\n    setData,\n  }\n}\n\nexport default makeData\n","import execa from 'execa'\n\n/**\n * Task runner\n *\n * @param  {object} config\n *\n * @return {func}\n */\nconst command = config => {\n  return cmd => execa.command(cmd, config.execa)\n}\n\nexport default command\n","import command from './command'\n\n/**\n * Make util\n *\n * @prop   {object} config\n * @return {object}\n */\nconst makeUtil = ({config}) => ({\n  command: command(config),\n})\n\nexport default makeUtil\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Curried actions\n *\n * @prop {Observer} observer\n * @prop {object}   sprout\n * @prop {object}   task\n * @prop {object}   actionProps\n */\nconst actions = ({observer, sprout, actions, ...props}) => {\n  from(sprout.tasks)\n    .pipe(\n      concatMap(\n        task =>\n          new Observable(async observer => {\n            actions[task.task]({task, actions, observer, ...props})\n          }),\n      ),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default actions\n","import actions from './actions'\n\n/**\n * Make Pipes\n *\n * @return {object}\n */\nconst pipes = [actions]\n\nexport default pipes\n","/**\n * Action: Add dependencies\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   util\n *\n * @return {void}\n */\nconst addDependencies = async ({task, logger, observer, util}) => {\n  let installation\n\n  observer.next(`Installing packages`)\n\n  if (task.repo !== 'npm' && task.repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (task.repo == 'npm') {\n    logger.info({emitter: 'addDependencies', task})\n    installation = util.command(\n      `yarn add ${task.dev ? `-D` : ``} ${task.pkgs.join(' ')}`,\n    )\n  }\n\n  if (task.repo == 'packagist') {\n    logger.info({emitter: 'addDependencies', task})\n    installation = util.command(\n      `composer require ${task.pkgs.join(' ')} ${\n        task.dev ? `--development` : ``\n      }`,\n    )\n  }\n\n  installation.stdout.on('data', status => {\n    observer.next(status)\n  })\n\n  installation.then(() => observer.complete())\n}\n\nexport default addDependencies\n","import {join} from 'path'\nimport {outputFile, readFile} from 'fs-extra'\n\n/**\n * Action: template\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   data\n * @param  {object}   config\n * @param  {object}   util\n * @param  {object}   prettier\n * @param  {object}   compiler\n * @return {void}\n */\nconst compile = async ({\n  task,\n  observer,\n  logger,\n  data,\n  config,\n  prettier,\n  compiler,\n}) => {\n  const src = await readFile(join(config.templateDir, task.src), 'utf8')\n  const dest = compiler.make(task.dest)(data)\n  const template = compiler.make(src)(data)\n\n  logger.info({emitter: 'compile', task, template: task.src, dest})\n  observer.next(`Writing file ${dest}`)\n\n  await outputFile(\n    ...[\n      join(config.projectDir, dest),\n      task.parser ? prettier.format(template, task.parser) : template,\n    ],\n  )\n\n  observer.complete()\n}\n\nexport default compile\n","import {join} from 'path'\nimport {copy as fsCopy} from 'fs-extra'\n\n/**\n * Action: copy\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n *\n * @return {void}\n */\nconst copy = async ({task, observer, logger, config}) => {\n  const src = join(config.templateDir, task.src)\n  const dest = join(config.projectDir, task.dest)\n\n  logger.info({emitter: 'copy', task})\n  observer.next(`Copying file`)\n  await fsCopy(src, dest)\n\n  observer.complete()\n}\n\nexport default copy\n","import {join} from 'path'\nimport fs from 'fs-extra'\n\n/**\n * Make directory\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n * @param  {object}   data\n * @param  {object}   compiler\n *\n * @return {void}\n */\nconst ensureDir = async ({task, observer, logger, config, data, compiler}) => {\n  const path = join(config.projectDir, compiler.make(task.path)(data))\n\n  logger.info({emitter: 'ensureDir', task, path})\n  observer.next(`Writing directory ${path}`)\n  await fs.ensureDir(path)\n\n  observer.complete()\n}\n\nexport default ensureDir\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Scaffold directories\n *\n * @prop   {task array} dirs\n * @return {Observable}\n */\nconst ensureDirs = ({\n  task,\n  observer,\n  logger,\n  actions,\n  config,\n  data,\n  compiler,\n}) => {\n  logger.info({emitter: 'ensureDirs', task})\n\n  from(task.dirs)\n    .pipe(\n      concatMap(\n        path =>\n          new Observable(observer => {\n            actions.ensureDir({\n              task: {path},\n              config,\n              data,\n              compiler,\n              observer,\n              logger,\n            })\n          }),\n      ),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default ensureDirs\n","/**\n * Action: git clone\n *\n * @prop {object}   task\n * @prop {Observer} observer\n * @prop {object}   util\n */\nconst clone = async ({observer, logger, task, util}) => {\n  logger.next({emitter: 'clone', task})\n  observer.next(`Cloning ${task.repo} to ${task.dest}`)\n\n  const clone = util.command(\n    `git clone git@github.com:${task.repo} ${task.dest}`,\n  )\n\n  clone.stdout.on('data', () =>\n    observer.next(observer.next(`Cloning ${task.repo} to ${task.dest}}`)),\n  )\n\n  clone.then(() => observer.complete())\n}\n\n/**\n * Action: Github\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n */\nconst git = async ({task, observer, logger, ...props}) => {\n  logger.info({emitter: 'gite', task})\n\n  if (task.action == 'clone') {\n    clone({task, observer, ...props})\n  }\n}\n\nexport default git\n","/**\n * Action: Install from package files\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n *\n * @return {Observable}\n */\nconst install = async ({task, observer, util}) => {\n  let installation\n\n  observer.next(`Installing packages from ${task.repo}...`)\n\n  if (task.repo !== 'npm' && task.repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (task.repo == 'npm') {\n    installation = util.command(`yarn`)\n    installation.stdout.on('data', status => {\n      observer.next(status)\n    })\n    installation.then(() => observer.complete())\n  }\n\n  if (task.repo == 'packagist') {\n    installation = util.command(`composer install`)\n    installation.then(() => observer.complete())\n  }\n}\n\nexport default install\n","import {outputFile} from 'fs-extra'\n\n/**\n * Action: Manipulate project JSON\n *\n * @prop {object}   task\n * @prop {Observer} observer\n * @prop {Prettier} prettier\n */\nconst json = async function ({task, observer, prettier, config}) {\n  const json = require(`${config.projectDir}/${task.file}`)\n  observer.next(`Writing JSON to ${task.file}`)\n\n  try {\n    const output = task.merge(json)\n    await outputFile(\n      `${config.projectDir}/${task.file}`,\n      prettier.format(output, 'json'),\n    )\n\n    observer.complete()\n  } catch (err) {\n    console.log(`There was a problem writing to ${task.file}`)\n  }\n}\n\nexport default json\n","import {ensureFile} from 'fs-extra'\nimport {join} from 'path'\n\n/**\n * Action: Touch\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n */\nconst touch = async ({task, config, compiler, data, observer}) => {\n  const path = join(config.projectDir, compiler.make(task.path)(data))\n\n  try {\n    await ensureFile(path).then(() => {\n      observer.next()\n    })\n\n    observer.complete()\n  } catch (error) {\n    observer.error(\n      `${JSON.stringify({\n        task,\n        config,\n        data,\n      })}`,\n    )\n  }\n}\n\nexport default touch\n","import addDependencies from './addDependencies'\nimport compile from './compile'\nimport copy from './copy'\nimport ensureDir from './ensureDir'\nimport ensureDirs from './ensureDirs'\nimport git from './git'\nimport install from './install'\nimport json from './json'\nimport touch from './touch'\n\n/**\n * Actions\n *\n * @type {object}\n */\nconst actions = {\n  addDependencies,\n  compile,\n  copy,\n  ensureDir,\n  ensureDirs,\n  git,\n  install,\n  json,\n  touch,\n  register: function ({action}) {\n    this[`${action.handle}`] = action.callback\n  },\n}\n\nexport default actions\n","/**\n * Prettier parsers.\n * @type {object}\n */\nconst parsers = {\n  js: 'babel',\n  jsx: 'babel',\n  graphql: 'graphql',\n  css: 'css',\n  json: 'json',\n  md: 'markdown',\n  html: 'html',\n  htm: 'html',\n  ts: 'typescript',\n  tsx: 'typescript',\n  yml: 'yaml',\n  yaml: 'yaml',\n  less: 'less',\n}\n\n/**\n * Infer parser.\n *\n * @type  {async func}\n * @param {string} file\n */\nconst inferParser = async function (file) {\n  const ext = file.split('.')[file.split('.').length - 1]\n\n  return parsers[`${ext}`] ?? null\n}\n\nexport default inferParser\n","module.exports = {\n  arrowParens: 'avoid',\n  bracketSpacing: false,\n  tabWidth: 2,\n  printWidth: 80,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: false,\n  trailingComma: 'all',\n  semi: false,\n  overrides: [\n    {\n      files: ['*.md'],\n      options: {\n        parser: 'markdown',\n      },\n    },\n    {\n      files: ['*.json'],\n      options: {\n        parser: 'json',\n      },\n    },\n  ],\n}\n","import prettier from 'prettier'\nconst config = require('../../../prettier.config.js')\n\n/**\n * Format\n *\n * @type   {func}\n * @param  {object|string} content\n * @param  {parser} string\n * @return {string}\n */\nconst format = (content, parser) => {\n  content = typeof content !== 'string' ? JSON.stringify(content) : content\n\n  return prettier.format(content, {\n    ...config,\n    parser: parser || 'babel',\n  })\n}\n\nexport default format\n","import inferParser from './inferParser'\nimport format from './format'\n\n/**\n * Prettier\n */\nconst prettier = {\n  format,\n  inferParser,\n}\n\nexport default prettier\n","const pino = require('pino')\nconst prettifier = require('pino-pretty')\n\n/**\n * Make logger\n *\n * @return {<Pino>()=>logger}\n */\nconst makeLogger = ({projectDir}) => {\n  return pino(\n    {\n      prettyPrint: {\n        levelFirst: true,\n      },\n      prettifier,\n    },\n    pino.destination(`${projectDir}/.bud/bud.log`),\n  )\n}\n\nexport default makeLogger\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\nimport makeCompiler from './compiler'\nimport makeConfig from './config'\nimport makeData from './data'\nimport makeUtil from './util'\nimport pipes from './pipes'\nimport actions from './actions'\nimport prettier from './prettier'\nimport makeLogger from './logger'\n\n/**\n * 🌱 bud starter\n *\n * @prop {string} projectDir\n * @prop {object} projectConfig\n * @prop {object} data\n * @prop {object} sprout\n * @prop {string} templateDir\n *\n * @return {Observable}\n */\nconst bud = props => {\n  const {sprout} = props\n  const logger = makeLogger({...props})\n  const config = makeConfig({...props})\n  const data = makeData({...props})\n  const util = makeUtil({config})\n  const compiler = makeCompiler({sprout, data})\n\n  sprout.registerActions &&\n    sprout.registerActions.forEach(action => {\n      actions.register({action})\n    })\n\n  return new Observable(observer => {\n    const props = {\n      config,\n      data,\n      actions,\n      compiler,\n      prettier,\n      util,\n      sprout,\n      logger,\n    }\n\n    from(pipes)\n      .pipe(\n        concatMap(\n          job =>\n            new Observable(async observer => {\n              await job({observer, ...props})\n            }),\n        ),\n      )\n      .subscribe({\n        next: next => {\n          next && logger.info({emitter: 'bud', emitted: 'next'})\n          observer.next(next)\n        },\n        error: error => {\n          error && logger.error({emitter: 'bud', emitted: 'error'})\n          observer.error(error)\n        },\n        complete: () => observer.complete(),\n      })\n  })\n}\n\nexport default bud\n","import React from 'react'\nimport {Box, Color, Text} from 'ink'\nimport Link from 'ink-link'\n\n/**\n * Banner component.\n *\n * @prop {string} label\n */\nconst Banner = ({label}) => (\n  <Box marginBottom={1} flexDirection=\"row\" justifyContent=\"space-between\">\n    {label && <Text>{label}</Text>}\n    <Box flexDirection=\"row\">\n      <Text>{`🌱`}</Text>\n      <Text bold>\n        <Link url=\"https://roots.io/bud\">\n          <Color green>{'  Bud'}</Color>\n        </Link>\n      </Text>\n    </Box>\n  </Box>\n)\n\nexport default Banner\n","import React, {useEffect} from 'react'\nimport {Box, Color, Text, useStdout} from 'ink'\nimport Spinner from 'ink-spinner'\n\n/**\n * Tasks\n *\n * @prop {object} data\n * @prop {object} status\n * @prop {bool}   complete\n * @prop {bool}   noClear\n */\nconst Tasks = ({data, status, complete, noClear}) => {\n  const {stdout} = useStdout()\n  useEffect(() => {\n    data && !noClear && stdout.write('\\x1B[2J\\x1B[0f')\n  }, [data])\n\n  return status ? (\n    <Box>\n      {complete ? (\n        <Color green>⚡️ All set.</Color>\n      ) : (\n        <Text>\n          <Color green>\n            <Spinner type=\"dots\" />\n          </Color>\n          {` ${status}`}\n        </Text>\n      )}\n    </Box>\n  ) : null\n}\n\nexport default Tasks\n","import React from 'react'\nimport {Box, Color} from 'ink'\n\n/**\n * Error\n */\nconst Error = ({message}) => (\n  <Box>\n    <Color red>💥 {JSON.stringify(message)}</Color>\n  </Box>\n)\n\nexport default Error\n","import {join} from 'path'\nimport {existsSync} from 'fs'\nimport React, {useState, useEffect} from 'react'\nimport {Box, useApp} from 'ink'\nimport PropTypes from 'prop-types'\nimport {prompt} from 'enquirer'\nimport bud from '../bud'\n\nimport Banner from './Banner'\nimport Tasks from './Tasks'\nimport Error from './Error'\n\nconst cwd = process.cwd()\n\n/**\n * App\n *\n * @prop {string} label\n * @prop {string} templateDir\n * @prop {object} sprout\n * @prop {string} outDir\n * @prop {object} values\n * @prop {object} children\n * @prop {bool}   noClear\n */\nconst App = ({label, templateDir, sprout, outDir, noClear}) => {\n  /**\n   * source bud.config.json\n   */\n  const configFile = join(cwd, '.bud/bud.config.json')\n  const [config] = useState(existsSync(configFile) ? require(configFile) : null)\n\n  /**\n   * Assemble data from prompts\n   */\n  const [data, setData] = useState(null)\n  const [prompts, setPrompts] = useState(sprout.prompts ? sprout.prompts : null)\n  useEffect(() => {\n    if (prompts) {\n      prompt(prompts).then(data => {\n        setPrompts(null)\n        setData(data)\n      })\n    } else {\n      setPrompts(null)\n      setData({})\n    }\n  }, [])\n\n  /**\n   * Observer subscribe\n   */\n  const [status, setStatus] = useState(null)\n  const [error, setError] = useState(null)\n  const [complete, setComplete] = useState(false)\n  const [subscription, setSubscription] = useState(false)\n  useEffect(() => {\n    data &&\n      !subscription &&\n      setSubscription(\n        bud({\n          sprout,\n          data,\n          config,\n          templateDir,\n          projectDir: join(cwd, outDir),\n        }).subscribe({\n          next: next => setStatus(next),\n          error: error => setError(error),\n          complete: () => setComplete(true),\n        }),\n      )\n  }, [config, data, status])\n\n  /**\n   * Observer unsubscribe.\n   */\n  const {exit} = useApp()\n  useEffect(() => {\n    const unsubscribe = async () => {\n      await subscription.unsubscribe()\n      exit()\n    }\n\n    complete && unsubscribe()\n  }, [complete, subscription])\n\n  /**\n   * Render observable updates and errors\n   */\n  return (\n    <Box flexDirection=\"column\" justifyContent=\"flex-start\" padding={1}>\n      <Banner label={label} />\n      <Tasks\n        data={data}\n        status={status}\n        complete={complete}\n        noClear={noClear}\n      />\n      {error && <Error message={error} />}\n    </Box>\n  )\n}\n\nApp.propTypes = {\n  label: PropTypes.string,\n  sprout: PropTypes.object,\n  noClear: PropTypes.bool,\n}\n\nApp.defaultProps = {\n  sprout: {\n    actions: [],\n    label: 'Bud',\n    prompts: [],\n  },\n  noClear: false,\n}\n\nexport default App\n","import {dirname} from 'path'\nimport React, {useState, useEffect} from 'react'\nimport {Text, Color} from 'ink'\nimport PropTypes from 'prop-types'\nimport globby from 'globby'\nimport App from '../../src/components/App'\n\n/**\n * Search helpers\n */\nconst cwd = process.cwd()\nconst coreResults = name =>\n  `${cwd}/node_modules/@roots/bud/src/budfiles/**/${name}.bud.js`\nconst pluginResults = name =>\n  `${cwd}/node_modules/**/bud-plugin-*/${name}.bud.js`\nconst projectResults = name => `${cwd}/.bud/budfiles/**/${name}.bud.js`\n\n/** Command: bud generate */\n/// Generate code from a budfile\nconst Generate = props => {\n  const [budName] = useState(props.budName)\n\n  /**\n   * Budfile state.\n   */\n  const [budfile, setBudfile] = useState(false)\n  const [checked, setChecked] = useState({\n    project: false,\n    modules: false,\n    roots: false,\n  })\n\n  /**\n   * Local budfiles.\n   */\n  useEffect(() => {\n    budName &&\n      !checked.project &&\n      (async () => {\n        const buds = await globby([projectResults(budName)])\n        buds && buds.length > 0 && setBudfile(buds[0])\n\n        setChecked({...checked, project: true})\n      })()\n  }, [budName, checked.project])\n\n  /**\n   * Module budfiles.\n   */\n  useEffect(() => {\n    !budfile &&\n      checked.project &&\n      (async () => {\n        const buds = await globby([pluginResults(budName)])\n        buds && buds.length > 0 && setBudfile(buds[0])\n\n        setChecked({...checked, modules: true})\n      })()\n  }, [budfile, checked.project])\n\n  /**\n   * Core budfiles.\n   */\n  useEffect(() => {\n    !budfile &&\n      checked.modules &&\n      (async () => {\n        const buds = await globby([coreResults(budName)])\n        buds && buds.length > 0 && setBudfile(buds[0])\n\n        setChecked({...checked, roots: true})\n      })()\n  }, [budfile, checked.modules])\n\n  /**\n   * Sprout state.\n   */\n  const [sprout, setSprout] = useState(false)\n  const [templateDir, setTemplateDir] = useState(false)\n  useEffect(() => {\n    budfile && setSprout(require(budfile))\n    budfile && setTemplateDir(`${dirname(budfile)}/templates`)\n  }, [budfile])\n\n  /**\n   * Render.\n   */\n  return sprout && templateDir ? (\n    <App\n      sprout={sprout}\n      label={sprout.description ?? 'Bud'}\n      outDir={''}\n      noClear={true}\n      templateDir={templateDir ?? ''}\n    />\n  ) : (\n    <Text>\n      <Color green>Searching...</Color>\n    </Text>\n  )\n}\n\nGenerate.propTypes = {\n  // Generator name ([name].bud.js)\n  budName: PropTypes.string,\n}\n\nGenerate.positionalArgs = ['budName']\n\nexport default Generate\n"]}