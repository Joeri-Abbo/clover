{"version":3,"sources":["../src/bud/compiler/helpers/index.js","../src/bud/compiler/index.js","../src/bud/actions/addDependencies.js","../src/bud/actions/compile.js","../src/bud/actions/copy.js","../src/bud/actions/install.js","../src/bud/actions/json.js","../src/bud/actions/mkDir.js","../src/bud/actions/scaffold.js","../src/bud/actions/index.js","../src/bud/prettier/inferParser.js","../prettier.config.js","../src/bud/prettier/format.js","../src/bud/prettier/index.js","../src/bud/util/command.js","../src/bud/util/index.js","../src/bud/index.js","../src/components/Banner.js","../src/components/Error.js","../src/components/BudCLI.js","list/index.js"],"names":["helpers","data","helper","fn","Array","prototype","slice","call","arguments","object","component","options","indexOf","inverse","components","hasInstance","forEach","makeCompiler","sprout","handlebars","registerHelpers","push","registerHelper","compiler","make","path","compile","addDependencies","task","observer","util","installation","next","repo","error","command","dev","pkgs","join","stdout","on","status","then","complete","config","prettier","src","templateDir","dest","template","projectDir","parser","format","copy","install","json","require","file","output","merge","err","mkDir","JSON","stringify","scaffold","actions","paths","pipe","Observable","subscribe","register","action","handle","callback","parsers","js","jsx","graphql","css","md","html","htm","ts","tsx","yml","yaml","less","inferParser","ext","split","length","module","exports","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","overrides","files","content","cmd","execa","bud","configData","cwd","registerActions","tasks","Banner","label","Error","message","process","DEFAULT_BUDFILE","prompts","BudCLI","outDir","inert","children","noClear","setPrompts","exit","setData","setStatus","setError","setComplete","budSubscription","setBudSubscription","project","unsubscribe","Tasks","write","List","rootsBudsGlob","moduleBudsGlob","projectBudsGlob","projectBuds","setProjectBuds","buds","map","name","source","description","filter","moduleBuds","setModuleBuds","rootsBuds","setRootsBuds","id"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["/**\n * Templating helpers\n */\nconst helpers = data => [\n  {\n    helper: 'array',\n    fn: function () {\n      return Array.prototype.slice.call(arguments, 0, -1)\n    },\n  },\n  {\n    helper: 'has',\n    fn: function (object, component, options) {\n      if (data[object].indexOf(component) > -1) {\n        return options.fn(this)\n      }\n\n      return options.inverse(this)\n    },\n  },\n  {\n    helper: 'hasAny',\n    fn: function (object, components, options) {\n      let hasInstance = false\n\n      if (components) {\n        components.forEach(component => {\n          if (data[object].indexOf(component) > -1) {\n            hasInstance = true\n          }\n        })\n      }\n\n      return hasInstance ? options.fn(this) : options.inverse(this)\n    },\n  },\n  {\n    helper: 'raw',\n    fn: function (options) {\n      return options.fn()\n    },\n  },\n]\n\nexport default helpers\n\n","import handlebars from 'handlebars'\nimport helpers from './helpers'\nimport handlebarsHelpers from 'handlebars-helpers'\n\n/**\n * Compiler.\n *\n * @param {handlebars} handlebars\n */\nconst makeCompiler = ({sprout, data}) => {\n  handlebarsHelpers({handlebars})\n\n  sprout.registerHelpers\n    && sprout.registerHelpers.forEach(helper => {\n      helpers.push(helper)\n    })\n\n  helpers(data).forEach(({helper, fn}) => {\n    handlebars.registerHelper(helper, fn)\n  })\n\n  return {\n    compiler: handlebars,\n\n    /**\n     * Make template.\n     *\n     * @param {string} path\n     */\n    make: function(path) {\n      return this.compiler.compile(path)\n    },\n  }\n}\n\nexport default makeCompiler\n","/**\n * Action: Add dependencies\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   util\n *\n * @return {void}\n */\nconst addDependencies = async ({task, observer, util}) => {\n  let installation\n\n  observer.next(`Installing packages from ${task.repo}...`)\n\n  if (task.repo !== 'npm' && task.repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (task.repo == 'npm') {\n    installation = util.command(\n      `yarn add ${task.dev ? `-D` : ``} ${task.pkgs.join(' ')}`,\n    )\n  }\n\n  if (task.repo == 'packagist') {\n    installation = util.command(\n      `composer require ${task.pkgs.join(' ')} ${task.dev ? `--development` : ``}`,\n    )\n  }\n\n  installation.stdout.on('data', status => {\n    observer.next(status)\n  })\n\n  installation.then(() => observer.complete())\n}\n\nexport default addDependencies\n","import {join} from 'path'\nimport {outputFile, readFile} from 'fs-extra'\n\n/**\n * Action: template\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   data\n * @param  {object}   config\n * @param  {object}   util\n * @param  {object}   prettier\n * @param  {object}   compiler\n * @return {void}\n */\nconst compile = async ({task, observer, data, config, prettier, compiler}) => {\n  const src = await readFile(join(config.templateDir, task.src), 'utf8')\n  const dest = compiler.make(task.dest)(data)\n\n  const template = compiler.make(src)(data)\n\n  await outputFile(...[\n    join(config.projectDir, dest),\n    task.parser\n      ? prettier.format(template, task.parser)\n      : template,\n  ])\n\n  observer.complete()\n}\n\nexport default compile\n","import {join} from 'path'\nimport {copy as fsCopy} from 'fs-extra'\n\n/**\n * Action: copy\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n *\n * @return {void}\n */\nconst copy = async ({task, observer, config}) => {\n  const src = join(config.templateDir, task.src)\n  const dest = join(config.projectDir, task.dest)\n\n  await fsCopy(src, dest)\n\n  observer.complete()\n}\n\nexport default copy\n","/**\n * Action: Install from package files\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n *\n * @return {Observable}\n */\nconst install = async ({task, observer, util}) => {\n  let installation\n\n  observer.next(`Installing packages from ${task.repo}...`)\n\n  if (task.repo !== 'npm' && task.repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (task.repo == 'npm') {\n    installation = util.command(`yarn`)\n  }\n\n  if (task.repo == 'packagist') {\n    installation = util.command(`composer install`)\n  }\n\n  installation.stdout.on('data', status => {\n    observer.next(status)\n  })\n\n  installation.then(() => observer.complete())\n}\n\nexport default install\n","import {outputFile} from 'fs-extra'\n\n/**\n * Action: Manipulate project JSON\n *\n * @prop {object}   task\n * @prop {Observer} observer\n * @prop {Prettier} prettier\n */\nconst json = async function ({task, observer, prettier, config}) {\n  const json = require(`${config.projectDir}/${task.file}`)\n  observer.next(`Writing JSON to ${task.file}`)\n\n  try {\n    const output = task.merge(json)\n\n    await outputFile(\n      `${config.projectDir}/${task.file}`,\n      prettier.format(output, 'json')\n    )\n\n    observer.complete()\n  } catch (err) {\n    observer.error(`There was a problem writing to ${task.file}`)\n  }\n}\n\nexport default json\n","import {join} from 'path'\nimport {ensureDir} from 'fs-extra'\n\n/**\n * Make directory\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n * @param  {object}   data\n * @param  {object}   compiler\n *\n * @return {void}\n */\nconst mkDir = async ({task, observer, config, data, compiler}) => {\n  const path = join(\n    config.projectDir,\n    compiler.make(task.path)(data)\n  )\n\n  try {\n    await ensureDir(path).then(() => {\n      observer.next()\n    })\n  } catch (error) {\n    observer.error(`actions.mkDir: ${JSON.stringify(error)}`)\n  }\n}\n\nexport default mkDir\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Scaffold directories\n *\n * @param  {array} paths\n * @return {Observable}\n */\nconst scaffold = ({task, observer, config, data, compiler, actions}) => {\n  observer.next(`Creating directories`)\n\n  return from(task.paths)\n    .pipe(\n      concatMap(path => {\n        return new Observable(async observer => {\n          try {\n            await actions.mkDir({\n              task: {path},\n              config,\n              data,\n              compiler,\n              observer,\n            })\n\n            observer.complete()\n          } catch (error) {\n            observer.error(`error: thrown in actions.scaffold`)\n          }\n        })\n      }),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default scaffold\n","import addDependencies from './addDependencies'\nimport compile from './compile'\nimport copy from './copy'\nimport install from './install'\nimport json from './json'\nimport mkDir from './mkDir'\nimport scaffold from './scaffold'\n\n/**\n * Actions\n */\nconst actions = {\n  addDependencies,\n  compile,\n  copy,\n  install,\n  json,\n  mkDir,\n  scaffold,\n  register: function (action) {\n    this[`${action.handle}`] = action.callback\n  },\n}\n\nexport default actions\n","/**\n * Prettier parsers.\n */\nconst parsers = {\n  js: 'babel',\n  jsx: 'babel',\n  graphql: 'graphql',\n  css: 'css',\n  json: 'json',\n  md: 'markdown',\n  html: 'html',\n  htm: 'html',\n  ts: 'typescript',\n  tsx: 'typescript',\n  yml: 'yaml',\n  yaml: 'yaml',\n  less: 'less',\n}\n\n/**\n * Infer parser.\n *\n * @param {string} file\n */\nconst inferParser = async function (file) {\n  const ext = file.split('.')[file.split('.').length - 1]\n\n  return parsers[`${ext}`] ?? null\n}\n\nexport default inferParser\n","module.exports = {\n  arrowParens: 'avoid',\n  bracketSpacing: false,\n  tabWidth: 2,\n  printWidth: 90,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: false,\n  trailingComma: 'all',\n  semi: false,\n  overrides: [\n    {\n      files: ['*.md'],\n      options: {\n        parser: 'markdown',\n      },\n    },\n    {\n      files: ['*.json'],\n      options: {\n        parser: 'json',\n      },\n    },\n  ],\n}\n","import prettier from 'prettier'\nconst config = require('../../../prettier.config.js')\n\n/**\n * Format\n *\n * @param  {object|string} content\n * @param  {parser} string\n * @return {string}\n */\nconst format = (content, parser) => {\n  content = typeof content !== 'string'\n    ? JSON.stringify(content)\n    : content\n\n  return prettier.format(content, {\n    ...config,\n    parser: parser || 'babel',\n  })\n}\n\nexport default format\n","import inferParser from './inferParser'\nimport format from './format'\n\n/**\n * Prettier\n */\nconst prettier = {\n  format,\n  inferParser,\n}\n\nexport default prettier\n","import execa from 'execa'\n\n/**\n * Task runner\n *\n * @param  {object} config\n *\n * @return {func}\n */\nconst command = config => {\n  return cmd => execa.command(cmd, config.execa)\n}\n\nexport default command\n","import command from './command'\n\n/**\n * Util.\n */\nconst util = config => ({\n  command: command(config),\n})\n\nexport default util\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Bud componentry\n */\nimport makeCompiler from './compiler'\nimport actions from './actions'\nimport prettier from './prettier'\nimport sproutUtil from './util'\n\n/**\n * Bud core\n *\n * @param {string} outDir\n * @param {object} configData\n * @param {object} data\n * @param {object} sprout\n * @param {string} templateDir\n * @param {bool}   skipInstall\n */\nconst bud = ({projectDir, configData, data, sprout, templateDir}) => {\n  const config = {\n    projectDir,\n    templateDir,\n    ...configData,\n    execa: {\n      cwd: projectDir,\n    },\n  }\n  const util = sproutUtil(config)\n  const compiler = makeCompiler({sprout, data})\n\n  sprout.registerActions &&\n  sprout.registerActions.forEach(action => {\n    actions.register(action)\n  })\n\n  return new Observable(observer => {\n    from(sprout.tasks)\n      .pipe(\n        concatMap(function (task) {\n          return new Observable(async observer => {\n            observer.next(task.action)\n\n            actions[task.action]({\n              task,\n              observer,\n              config,\n              actions,\n              compiler,\n              prettier,\n              util,\n              data,\n            })\n          })\n        }),\n      )\n      .subscribe({\n        next: next => observer.next(next),\n        error: error => observer.error(error),\n        complete: complete => observer.complete(complete),\n      })\n  })\n}\n\nexport default bud\n","import React from 'react'\nimport {Box, Color, Text} from 'ink'\nimport Link from 'ink-link'\n\n/**\n * Banner component.\n *\n * @prop {string} label\n */\nconst Banner = ({label}) => (\n  <Box marginBottom={1} flexDirection=\"row\" justifyContent=\"space-between\">\n    {label && <Text>{label}</Text>}\n    <Box flexDirection=\"row\">\n      <Text>{`🌱`}</Text>\n      <Text bold>\n        <Link url=\"https://roots.io/bud\">\n          <Color green>{'  Bud'}</Color>\n        </Link>\n      </Text>\n    </Box>\n  </Box>\n)\n\nexport default Banner\n","import React from 'react'\nimport {Box, Color} from 'ink'\n\n/**\n * Error\n */\nconst Error = ({message}) => (\n  <Box>\n    <Color red>💥 {JSON.stringify(message)}</Color>\n  </Box>\n)\n\nexport default Error","import {join} from 'path'\nimport {existsSync} from 'fs'\nimport React, {useState, useEffect} from 'react'\nimport {Box, Color, Text, useApp, useStdout} from 'ink'\nimport Spinner from 'ink-spinner'\nimport {prompt} from 'enquirer'\nimport bud from './../bud'\n\nimport Banner from './Banner'\nimport Error from './Error'\n\nconst cwd = process.cwd()\n\nconst DEFAULT_BUDFILE = {\n  actions: [],\n  label: 'Budfile',\n  prompts: [],\n}\n\n/**\n * Bud CLI\n *\n * @prop {string} label\n * @prop {string} budFile\n * @prop {string} outDir\n * @prop {object} values\n * @prop {object} children\n * @prop {bool}   noClear\n */\nconst BudCLI = ({\n  label,\n  templateDir,\n  sprout = DEFAULT_BUDFILE,\n  outDir,\n  inert = false,\n  children,\n  noClear = false,\n}) => {\n  /**\n   * Parse values from .bud/bud.config.json\n   */\n  const config = join(process.cwd(), '.bud/bud.config.json')\n  const [configData] = useState(existsSync(config) ? require(config) : null)\n\n  /**\n   * Parse values from prompt\n   */\n  const [prompts, setPrompts] = useState(sprout.prompts ? sprout.prompts : null)\n\n  const {exit} = useApp()\n  const [data, setData] = useState(null)\n  const [status, setStatus] = useState(null)\n  const [error, setError] = useState(null)\n  const [complete, setComplete] = useState(false)\n  const [budSubscription, setBudSubscription] = useState(false)\n\n  /**\n   * Assemble data from config files, prompt & cli args/flags.\n   */\n  useEffect(() => {\n    prompts\n      ? prompt(prompts).then(data => {\n          setPrompts(null)\n          setData({\n            ...(configData && configData.project ? configData.project : []),\n            ...(configData && configData.dev ? configData.dev : []),\n            ...data,\n          })\n        })\n      : (() => {\n          setPrompts(null)\n          setData({\n            ...(configData && configData.project ? configData.project : []),\n            ...(configData && configData.dev ? configData.dev : []),\n          })\n        })()\n  }, [])\n\n  /**\n   * Run the budfile actions\n   */\n  useEffect(() => {\n    data &&\n      !inert &&\n      !budSubscription &&\n      setBudSubscription(\n        bud({\n          configData,\n          data: data ?? {},\n          templateDir,\n          sprout,\n          projectDir: join(cwd, outDir),\n        })\n      .subscribe({\n        next: next => setStatus(next),\n        error: error => setError(error),\n        complete: () => setComplete(true),\n        }),\n      )\n  }, [data, status])\n\n  useEffect(() => {\n    complete &&\n      (async () => {\n        await budSubscription.unsubscribe()\n        exit()\n      })()\n  }, [complete, budSubscription])\n\n  /**\n   * Render TTY\n   */\n  return (\n    <Box flexDirection=\"column\" justifyContent=\"flex-start\" padding={1}>\n      <Banner label={label} />\n      {!error ? (\n        <Tasks data={data} status={status} complete={complete} noClear={noClear} />\n      ) : (\n        <Error message={error} />\n      )}\n    </Box>\n  )\n}\n\n/**\n * Tasks\n */\nconst Tasks = ({data, status, complete, noClear}) => {\n  const {stdout} = useStdout()\n  useEffect(() => {\n    data && !noClear && stdout.write('\\x1B[2J\\x1B[0f')\n  }, [data])\n\n  return status ? (\n    <Box>\n      {complete ? (\n        <Color green>⚡️ All set.</Color>\n      ) : (\n        <Text>\n          <Color green>\n            <Spinner type=\"dots\" />\n          </Color>\n          {` ${status}`}\n        </Text>\n      )}\n    </Box>\n  ) : (\n    []\n  )\n}\n\nexport default BudCLI\n","import React, {useState, useEffect} from 'react'\nimport {Box} from 'ink'\nimport BudCLI from '../../src/components/BudCLI'\nimport globby from 'globby'\nimport Divider from 'ink-divider'\n\nconst cwd = process.cwd()\n\n/** Command: generate list */\n/// List available budfiles\nconst List = () => {\n  /**\n   * Budfile glob paths\n   */\n  const rootsBudsGlob = `${cwd}/node_modules/@roots/bud/src/budfiles/**/*.bud.js`\n  const moduleBudsGlob = `${cwd}/node_modules/**/bud-plugin-*/*.bud.js`\n  const projectBudsGlob = `${cwd}/.bud/**/*.bud.js`\n\n  /**\n   * Project buds\n   */\n  const [projectBuds, setProjectBuds] = useState([])\n  useEffect(() => {\n    projectBuds.length == 0 &&\n      (async () => {\n        const buds = await globby(projectBudsGlob)\n\n        buds &&\n          setProjectBuds(\n            buds\n              .map(bud => {\n                const src = require(bud)\n                return {\n                  command: `yarn generate ${src.name}`,\n                  source: 'project',\n                  name: src.name,\n                  description: src.description,\n                }\n              })\n              .filter(bud => bud.name),\n          )\n      })()\n  }, [])\n\n  /**\n   * Module buds\n   */\n  const [moduleBuds, setModuleBuds] = useState([])\n  useEffect(() => {\n    ;(async () => {\n      const buds = await globby(moduleBudsGlob)\n\n      buds &&\n        setModuleBuds(\n          buds\n            .map(bud => {\n              const src = require(bud)\n\n              return {\n                command: `yarn generate ${src.name}`,\n                source: src.source ? src.source : null,\n                name: src.name,\n                description: src.description,\n              }\n            })\n            .filter(bud => bud.name),\n        )\n    })()\n  }, [])\n\n  /**\n   * Module buds\n   */\n  const [rootsBuds, setRootsBuds] = useState([])\n  useEffect(() => {\n    rootsBuds.length == 0 &&\n      (async () => {\n        const buds = await globby(rootsBudsGlob)\n\n        buds &&\n          setRootsBuds(\n            buds\n              .map(bud => {\n                const src = require(bud)\n                return src.name !== 'bud' && src.name !== 'init'\n                  ? {\n                      command: `yarn generate ${src.name}`,\n                      source: '@roots/bud',\n                      name: src.name,\n                      description: src.description,\n                    }\n                  : {}\n              })\n              .filter(bud => bud.name),\n          )\n      })()\n  }, [])\n\n  const buds = [\n    ...projectBuds,\n    ...rootsBuds,\n    ...moduleBuds,\n  ]\n\n  /**\n   * Render\n   */\n  return (\n        <Box flexDirection=\"column\" marginTop={1} marginBottom={1}>\n          <Box flexDirection=\"row\" flexGrow={1} justifyContent=\"flex-start\">\n            <Box width={40}>Command</Box>\n            <Box width={40} marginLeft={1}>Source</Box>\n            <Box width={20} marginLeft={1}>Name</Box>\n          </Box>\n          <Divider padding={0} width={100} />\n          {buds.map((bud, id) =>\n            <Box key={id} flexDirection=\"row\" flexGrow={1} justifyContent=\"flex-start\">\n              <Box width={40}>{bud.command}</Box>\n              <Box width={40} marginLeft={1}>{bud.source}</Box>\n              <Box width={20} marginLeft={1}>{bud.name}</Box>\n            </Box>\n          )}\n        </Box>\n  )\n}\n\nexport default List\n"]}