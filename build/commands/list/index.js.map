{"version":3,"sources":["../prettier.config.js","../src/bud/helpers.js","../src/bud/index.js","../src/components/components/Banner.js","../src/components/components/Error.js","../src/components/components/Tasks.js","../src/components/BudCLI.js","list/index.js"],"names":["module","exports","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","overrides","files","options","parser","data","helper","fn","Array","prototype","slice","call","arguments","object","component","indexOf","inverse","components","hasInstance","forEach","join","resolve","require","fs","fetch","execa","handlebars","prettier","globby","Observable","from","concatMap","basePrettierConfig","handlebarsHelpers","helpers","bud","init","outDir","sprout","templateDir","projectDir","execaOptions","cwd","registerActions","registerHelpers","getConfig","path","process","getData","setData","action","handle","callback","length","push","registerHelper","format","content","JSON","stringify","actions","observer","pipe","task","next","subscribe","error","complete","scaffold","paths","mkDir","e","pathTemplate","compile","dirPath","ensureDir","then","getTemplate","template","contents","readFile","inferParser","file","ext","split","parserMap","js","jsx","graphql","css","json","md","html","htm","ts","tsx","yml","yaml","less","dest","replace","compiled","outputContents","outputFile","templateGlob","glob","templates","addDependencies","repo","pkgs","dev","installation","command","stdout","on","status","install","merge","output","err","Banner","label","propTypes","string","Error","message","PropTypes","Tasks","bool","defaultProps","BudCLI","values","inert","children","noClear","config","configData","prompts","setPrompts","exit","write","setStatus","setError","setComplete","budSubscription","setBudSubscription","project","BudCore","unsubscribe","DEFAULT_SPROUT","shape","array","isRequired","rootsBudsGlob","moduleBudsGlob","projectBudsGlob","List","projectBuds","setProjectBuds","buds","map","src","name","source","description","filter","moduleBuds","setModuleBuds","rootsBuds","setRootsBuds"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["module.exports = {\n  arrowParens: 'avoid',\n  bracketSpacing: false,\n  tabWidth: 2,\n  printWidth: 100,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: false,\n  trailingComma: 'all',\n  semi: false,\n  overrides: [\n    {\n      files: ['*.md'],\n      options: {\n        parser: 'markdown',\n      },\n    },\n    {\n      files: ['*.json'],\n      options: {\n        parser: 'json',\n      },\n    },\n  ],\n}\n","/**\n * Handlebars helpers\n */\nmodule.exports = data => {\n  return [\n    {\n      helper: 'array',\n      fn: function () {\n        return Array.prototype.slice.call(arguments, 0, -1)\n      },\n    },\n    {\n      helper: 'has',\n      fn: function (object, component, options) {\n        if (data[object].indexOf(component) > -1) {\n          return options.fn(this)\n        }\n\n        return options.inverse(this)\n      },\n    },\n    {\n      helper: 'hasAny',\n      fn: function (object, components, options) {\n        let hasInstance = false\n\n        if (components) {\n          components.forEach(component => {\n            if (data[object].indexOf(component) > -1) {\n              hasInstance = true\n            }\n          })\n        }\n\n        return hasInstance ? options.fn(this) : options.inverse(this)\n      },\n    },\n    {\n      helper: 'raw',\n      fn: function (options) {\n        return options.fn()\n      },\n    },\n  ]\n}\n","const {join, resolve} = require('path')\nconst fs = require('fs-extra')\nconst fetch = require('node-fetch')\nconst execa = require('execa')\nconst handlebars = require('handlebars')\nconst prettier = require('prettier')\nconst globby = require('globby')\nconst {Observable, from} = require('rxjs')\nconst {concatMap} = require('rxjs/operators')\n\nconst basePrettierConfig = require('./../../prettier.config.js')\nconst handlebarsHelpers = require('handlebars-helpers')\nconst helpers = require('./helpers')\n\n/**\n * Bud Core\n */\nexport const bud = {\n  fs,\n  fetch,\n  execa,\n  prettier,\n  handlebars,\n\n  /**\n   * Initialize\n   *\n   * @param {string} outDir\n   * @param {object} data\n   * @param {object} sprout\n   * @param {string} templateDir\n   * @param {bool}   skipInstall\n   */\n  init: function ({outDir = './', data = {}, sprout, templateDir}) {\n    this.data = data\n    this.sprout = sprout\n    this.projectDir = outDir\n    this.execaOptions = {cwd: this.projectDir}\n    this.templateDir = templateDir\n\n    this.registerActions()\n    this.registerHelpers()\n\n    return this\n  },\n\n  /**\n   * Get config.\n   *\n   * @return {object}\n   */\n  getConfig: function () {\n    return {\n      path: `${process.cwd()}/${this.projectDir}/.bud/bud.config.json`,\n      data: require(`${process.cwd()}/${this.projectDir}/.bud/bud.config.json`),\n    }\n  },\n\n  /**\n   * Get data.\n   *\n   * @return {object}\n   */\n  getData: function () {\n    return this.data\n  },\n\n  /**\n   * Set data.\n   *\n   * @param  {object} data\n   * @return {void}\n   */\n  setData: function (data) {\n    this.data = data\n  },\n\n  /**\n   * Register actions\n   */\n  registerActions: function () {\n    this.sprout.registerActions &&\n      this.sprout.registerActions.forEach(action => {\n        this[`${action.handle}`] = action.callback\n      })\n  },\n\n  /**\n   * Register helpers\n   */\n  registerHelpers: function () {\n    // lib helpers\n    handlebarsHelpers({handlebars: this.handlebars})\n\n    // plugin registered helpers\n    this.sprout.registerHelpers &&\n      this.sprout.registerHelpers.length > 0 &&\n      this.sprout.registerHelpers.forEach(helper => {\n        helpers.push(helper)\n      })\n\n    // roots/bud helpers\n    helpers(this.getData()).forEach(({helper, fn}) => {\n      this.handlebars.registerHelper(helper, fn)\n    })\n  },\n\n  /**\n   * Format\n   *\n   * @param  {object|string} content\n   * @param  {parser} string\n   * @return {string}\n   */\n  format: function (content, parser) {\n    return this.prettier.format(typeof content !== 'string' ? JSON.stringify(content) : content, {\n      ...basePrettierConfig,\n      parser: parser || 'babel',\n    })\n  },\n\n  /**\n   * Actions\n   *\n   * @return {Observable}\n   */\n  actions: function () {\n    const bud = {...this}\n\n    return new Observable(function (observer) {\n      from(bud.sprout.actions)\n        .pipe(\n          concatMap(function (task) {\n            return new Observable(async function (observer) {\n              observer.next(task.action)\n\n              return bud[task.action](task, observer, bud)\n            })\n          }),\n        )\n        .subscribe({\n          next: next => observer.next(next),\n          error: error => observer.error(error),\n          complete: complete => observer.complete(complete),\n        })\n    })\n  },\n\n  /**\n   * Scaffold directories\n   *\n   * @param  {array} paths\n   * @return {Observable}\n   */\n  scaffold: function ({paths}, observer) {\n    observer.next(`Creating directories`)\n\n    from(paths)\n      .pipe(\n        concatMap(path => {\n          return new Observable(async observer => {\n            try {\n              await this.mkDir({path}, observer)\n            } catch (e) {\n              observer.error(e)\n            }\n          })\n        }),\n      )\n      .subscribe({\n        next: next => observer.next(next),\n        error: error => observer.error(error),\n        complete: () => observer.complete(),\n      })\n  },\n\n  /**\n   * Make directory\n   *\n   * @param  {string}     path\n   * @param  {Observable} observer\n   * @return {Observable}\n   */\n  mkDir: async function ({path}, observer) {\n    const pathTemplate = this.handlebars.compile(path)\n    const dirPath = join(this.projectDir, pathTemplate(this.getData()))\n\n    try {\n      await fs.ensureDir(dirPath).then(() => {\n        observer.complete()\n      })\n    } catch (e) {\n      observer.error(e)\n    }\n  },\n\n  /**\n   * Get template contents.\n   *\n   * @param  {string} template\n   * @return {array}\n   */\n  getTemplate: async function (template) {\n    const path = join(this.templateDir, template)\n    const contents = await fs.readFile(path, 'utf8')\n\n    return {path, contents}\n  },\n\n  /**\n   * Infer parser\n   *\n   * @param  {string} file\n   * @return {string}\n   */\n  inferParser: async function (file) {\n    const ext = file.split('.')[file.split('.').length - 1]\n    const parserMap = {\n      js: 'babel',\n      jsx: 'babel',\n      graphql: 'graphql',\n      css: 'css',\n      json: 'json',\n      md: 'markdown',\n      html: 'html',\n      htm: 'html',\n      ts: 'typescript',\n      tsx: 'typescript',\n      yml: 'yaml',\n      yaml: 'yaml',\n      less: 'less',\n    }\n\n    return parserMap[`${ext}`] ?? null\n  },\n\n  /**\n   * Action: template\n   *\n   * @param  {string} parser\n   * @param  {string} path\n   * @param  {string} template\n   * @return {Observable}\n   */\n  template: async function ({parser, path, template}, observer) {\n    try {\n      const {contents} = await this.getTemplate(template)\n      const dest = join(\n        this.projectDir,\n        this.handlebars.compile(path)(this.getData()).replace('.hbs', ''),\n      )\n\n      observer.next(`Writing ${dest.split('/')[dest.split('/').length - 1]}`)\n\n      const compiled = this.handlebars.compile(contents)(this.getData())\n      const outputContents = parser ? this.format(compiled, parser) : compiled\n\n      fs.outputFile(dest, outputContents).then(() => observer.complete())\n    } catch (error) {\n      observer.error(error)\n    }\n  },\n\n  /**\n   * Action: template dir\n   *\n   * @param  {string} parser\n   * @param  {string} path\n   * @param  {string} templateDir\n   * @return {Observable}\n   */\n  templateGlob: async function ({glob}, observer) {\n    try {\n      const templates = await globby([resolve(this.templateDir, glob)])\n\n      from(templates)\n        .pipe(\n          concatMap(template => {\n            return new Observable(async observer => {\n              try {\n                const parser = await this.inferParser(template.replace('.hbs', ''))\n\n                await this.template(\n                  {\n                    parser,\n                    template: template.replace(this.templateDir, ''),\n                    path: template.replace(this.templateDir, '').replace('.hbs', ''),\n                  },\n                  observer,\n                )\n              } catch (error) {\n                observer.error(error)\n              }\n            })\n          }),\n        )\n        .subscribe({\n          next: next => observer.next(next),\n          error: error => observer.error(error),\n          complete: () => observer.complete(),\n        })\n    } catch (error) {\n      observer.error(error)\n    }\n  },\n\n  /**\n   * Action: Modules\n   *\n   * @param  {array} pkgs\n   * @param  {bool}  dev\n   * @return {Observable}\n   */\n  addDependencies: async function ({repo, pkgs, dev}, observer) {\n    let installation\n\n    observer.next(`Installing packages from ${repo}...`)\n\n    if (repo !== 'npm' && repo !== 'packagist') {\n      observer.error(`Incorrect package repo specified.`)\n    }\n\n    if (repo == 'npm') {\n      installation = this.execa.command(\n        `yarn add ${dev ? `-D` : ``} ${pkgs.join(' ')}`,\n        this.execaOptions,\n      )\n    }\n\n    if (repo == 'packagist') {\n      installation = this.execa.command(\n        `composer require ${pkgs.join(' ')} ${dev ? `--development` : ``}`,\n        this.execaOptions,\n      )\n    }\n\n    installation.stdout.on('data', status => {\n      observer.next(status)\n    })\n\n    installation.then(() => observer.complete())\n  },\n\n  /**\n   * Action: Install from package files\n   *\n   * @param  {string} repo\n   * @return {Observable}\n   */\n  install: async function ({repo}, observer) {\n    let installation\n\n    observer.next(`Installing packages from ${repo}...`)\n\n    if (repo !== 'npm' && repo !== 'packagist') {\n      observer.error(`Incorrect package repo specified.`)\n    }\n\n    if (repo == 'npm') {\n      installation = this.execa.command(`yarn`, this.execaOptions)\n    }\n\n    if (repo == 'packagist') {\n      installation = this.execa.command(`composer install`, this.execaOptions)\n    }\n\n    installation.stdout.on('data', status => {\n      observer.next(status)\n    })\n\n    installation.then(() => observer.complete())\n  },\n\n  /**\n   * Expose project JSON\n   */\n  json: async function ({file, merge}, observer) {\n    const json = require(`${this.projectDir}/${file}`)\n    observer.next(`Writing JSON to ${file}`)\n\n    try {\n      const output = merge(json)\n\n      await fs.outputFile(`${this.projectDir}/${file}`, this.format(output, 'json'))\n\n      observer.complete()\n    } catch (err) {\n      observer.error(`There was a problem writing to ${file}`)\n    }\n  },\n}\n","import React from 'react'\nimport propTypes from 'prop-types'\nimport {Box, Text, Color} from 'ink'\nimport Link from 'ink-link'\n\n/**\n * Banner\n *\n * @prop {string} label\n */\nconst Banner = ({label}) => (\n  <Box\n    marginBottom={1}\n    flexDirection=\"row\"\n    justifyContent=\"space-between\">\n    <Box flexDirection=\"column\">\n      <Text>{label}</Text>\n    </Box>\n\n    <Box flexDirection=\"row\">\n      <Text>{`🌱`}</Text>\n      <Text bold>\n        <Link url=\"https://roots.io/bud\">\n          <Color green>{'  Bud'}</Color>\n        </Link>\n      </Text>\n    </Box>\n  </Box>\n)\n\nBanner.propTypes = {\n  label: propTypes.string,\n}\n\nexport default Banner","import React from 'react'\nimport {Box, Color} from 'ink'\nimport PropTypes from 'prop-types'\n\n/**\n * Error\n */\nconst Error = ({message}) => (\n  <Box>\n    <Color red>💥 {JSON.stringify(message)}</Color>\n  </Box>\n)\n\nError.propTypes = {\n  message: PropTypes.string,\n}\n\nexport default Error\n","import React from 'react'\nimport propTypes from 'prop-types'\nimport {Box, Text, Color} from 'ink'\nimport Spinner from 'ink-spinner'\n\n/**\n * Tasks\n */\nconst Tasks = ({status, complete}) => status ? (\n  <Box>\n    {complete\n      ? <Color green>⚡️ All set.</Color>\n      : (\n        <Text>\n          <Color green>\n            <Spinner type=\"dots\" />\n          </Color>\n\n          {` ${status}`}\n        </Text>\n      )\n    }\n  </Box>\n) : []\n\nTasks.propTypes = {\n  status: propTypes.string,\n  complete: propTypes.bool,\n}\n\nTasks.defaultProps = {\n  status: '',\n  complete: false,\n}\n\nexport default Tasks","import {join} from 'path'\nimport {existsSync} from 'fs'\nimport React, {useState, useEffect} from 'react'\nimport propTypes from 'prop-types'\nimport {Box, useApp, useStdout} from 'ink'\nimport {prompt} from 'enquirer'\nimport {bud as BudCore} from './../bud'\n\n/** Components */\nimport Banner from './components/Banner'\nimport Error from './components/Error'\nimport Tasks from './components/Tasks'\n\n/**\n * Bud CLI\n *\n * @prop {string} label\n * @prop {string} budFile\n * @prop {string} outDir\n * @prop {object} values\n * @prop {object} children\n * @prop {bool}   noClear\n */\nconst BudCLI = ({\n  label,\n  templateDir,\n  sprout,\n  outDir,\n  values,\n  inert,\n  children,\n  noClear,\n}) => {\n  const {stdout} = useStdout()\n\n  /**\n   * Parse values from .bud/bud.config.json\n   */\n  const config = join(process.cwd(), '.bud/bud.config.json')\n  const [configData] = useState(existsSync(config) ? require(config) : null)\n\n  /**\n   * Parse values from prompt\n   */\n  const [prompts, setPrompts] = useState(!values && sprout.prompts ? sprout.prompts : null)\n\n  const {exit} = useApp()\n  const [data, setData] = useState(null)\n  useEffect(() => {\n    data && !noClear && stdout.write('\\x1B[2J\\x1B[0f')\n  }, [data])\n\n  const [status, setStatus] = useState(null)\n  const [error, setError] = useState(null)\n  const [complete, setComplete] = useState(false)\n  const [budSubscription, setBudSubscription] = useState(false)\n\n  /**\n   * Assemble data from config files, prompt & cli args/flags.\n   */\n  useEffect(() => {\n    prompts\n      ? prompt(prompts).then(data => {\n          setPrompts(null)\n          setData({\n            ...(configData && configData.project ? configData.project : []),\n            ...(configData && configData.dev ? configData.dev : []),\n            ...data,\n            ...(values ? values : []),\n          })\n        })\n      : (() => {\n          setPrompts(null)\n          setData({\n            ...(configData && configData.project ? configData.project : []),\n            ...(configData && configData.dev ? configData.dev : []),\n            ...(values ? values : []),\n          })\n        })()\n  }, [])\n\n  /**\n   * Run the budfile actions\n   */\n  useEffect(() => {\n    data &&\n      !inert &&\n      !budSubscription &&\n      setBudSubscription(\n        BudCore.init({\n          data,\n          templateDir,\n          sprout,\n          outDir,\n        })\n          .actions()\n          .subscribe({\n            next: next => setStatus(next),\n            error: error => setError(error),\n            complete: () => setComplete(true),\n          }),\n      )\n  }, [data, status])\n\n  /**\n   * Exit if a completion or error is emitted.\n   */\n  useEffect(() => {\n    (complete || error) &&\n      (async () => {\n        await budSubscription.unsubscribe()\n\n        exit()\n      })()\n  }, [error, complete, budSubscription])\n\n  /**\n   * Render TTY\n   */\n  return (\n    <Box\n      flexDirection=\"column\"\n      justifyContent=\"flex-start\"\n      padding={1}>\n      <Banner label={label} />\n\n      {! error && <Tasks status={status} complete={complete} />}\n      {error && <Error message={error} />}\n      {children && children}\n    </Box>\n  )\n}\n\n/**\n * Sprout fallback\n */\nconst DEFAULT_SPROUT = {\n  actions: [],\n  label: 'Budfile',\n  prompts: [],\n}\n\nBudCLI.propTypes = {\n  label: propTypes.string,\n  templateDir: propTypes.string,\n  sprout: propTypes.shape({\n    actions: propTypes.array,\n    label: propTypes.string,\n    prompts: propTypes.array,\n  }).isRequired,\n  outDir: propTypes.string,\n  values: propTypes.object,\n  inert: propTypes.bool,\n  children: propTypes.object,\n  noClear: propTypes.bool,\n}\n\nBudCLI.defaultProps = {\n  label: '',\n  sprout: DEFAULT_SPROUT,\n  values: {},\n  inert: false,\n  noClear: false,\n}\n\nexport default BudCLI\n","import React, {useState, useEffect} from 'react'\nimport {Text, Box} from 'ink'\nimport Spinner from 'ink-spinner'\nimport Table from 'ink-table'\nimport BudCLI from '../../src/components/BudCLI'\nimport globby from 'globby'\n\n/**\n * Budfile glob paths\n */\nconst rootsBudsGlob = `${process.cwd()}/node_modules/@roots/bud/src/budfiles/**/*.bud.js`\nconst moduleBudsGlob = `${process.cwd()}/node_modules/**/bud-plugin-*/*.bud.js`\nconst projectBudsGlob = `${process.cwd()}/.bud/**/*.bud.js`\n\n/** Command: generate list */\n/// List available budfiles\nconst List = () => {\n  /**\n   * Project buds\n   */\n  const [projectBuds, setProjectBuds] = useState([])\n  useEffect(() => {\n    projectBuds.length == 0 &&\n      (async () => {\n        const buds = await globby(projectBudsGlob)\n\n        buds &&\n          setProjectBuds(\n            buds\n              .map(bud => {\n                const src = require(bud)\n                return {\n                  command: `yarn generate ${src.name}`,\n                  source: 'project',\n                  name: src.name,\n                  description: src.description,\n                }\n              })\n              .filter(bud => bud.name),\n          )\n      })()\n  }, [])\n\n  /**\n   * Module buds\n   */\n  const [moduleBuds, setModuleBuds] = useState([])\n  useEffect(() => {\n    ;(async () => {\n      const buds = await globby(moduleBudsGlob)\n\n      buds &&\n        setModuleBuds(\n          buds\n            .map(bud => {\n              const src = require(bud)\n\n              return {\n                command: `yarn generate ${src.name}`,\n                source: src.source ? src.source : null,\n                name: src.name,\n                description: src.description,\n              }\n            })\n            .filter(bud => bud.name),\n        )\n    })()\n  }, [])\n\n  /**\n   * Module buds\n   */\n  const [rootsBuds, setRootsBuds] = useState([])\n  useEffect(() => {\n    rootsBuds.length == 0 &&\n      (async () => {\n        const buds = await globby(rootsBudsGlob)\n\n        buds &&\n          setRootsBuds(\n            buds\n              .map(bud => {\n                const src = require(bud)\n                return src.name !== 'bud' && src.name !== 'init'\n                  ? {\n                      command: `yarn generate ${src.name}`,\n                      source: '@roots/bud',\n                      name: src.name,\n                      description: src.description,\n                    }\n                  : {}\n              })\n              .filter(bud => bud.name),\n          )\n      })()\n  }, [])\n\n  const buds = [...projectBuds, ...rootsBuds, ...moduleBuds]\n\n  /**\n   * Render\n   */\n  return (\n    <>\n      <BudCLI label={'Available commands'} inert={true}>\n        <Box flexDirection=\"column\" marginTop={1} marginBottom={1}>\n          {!moduleBuds.length > 0 && (\n            <Box flexDirection=\"row\" marginBottom={1} alignItems=\"center\">\n              <Spinner type=\"monkey\" /> <Text>Looking for modules</Text>\n            </Box>\n          )}\n          <Box width={200} flexDirection=\"column\" flexGrow={1} justifyContent=\"space-between\">\n            {buds.length > 0 && <Table width={200} data={buds} />}\n          </Box>\n        </Box>\n      </BudCLI>\n    </>\n  )\n}\n\nexport default List\n"]}