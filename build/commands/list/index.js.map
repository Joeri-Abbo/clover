{"version":3,"sources":["../prettier.config.js","../src/bud/helpers.js","../src/bud/index.js","../src/components/BudCLI.js","list/index.js"],"names":["module","exports","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","overrides","files","options","parser","data","helper","fn","Array","prototype","slice","call","arguments","object","component","indexOf","inverse","components","hasInstance","forEach","join","resolve","require","fs","fetch","execa","handlebars","prettier","globby","Observable","from","concatMap","basePrettierConfig","handlebarsHelpers","helpers","bud","init","outDir","sprout","templateDir","projectDir","execaOptions","cwd","registerActions","registerHelpers","getConfig","path","process","getData","setData","action","handle","callback","length","push","registerHelper","format","content","JSON","stringify","actions","observer","pipe","task","next","subscribe","error","complete","scaffold","paths","mkDir","pathTemplate","compile","dirPath","ensureDir","then","getTemplate","template","contents","readFile","inferParser","file","ext","split","parserMap","js","jsx","graphql","css","json","md","html","htm","ts","tsx","yml","yaml","less","dest","replace","compiled","outputContents","outputFile","templateGlob","glob","templates","addDependencies","repo","pkgs","dev","installation","command","stdout","on","status","install","merge","output","err","DEFAULT_BUDFILE","label","prompts","BudCLI","values","inert","children","noClear","config","configData","setPrompts","exit","setStatus","setComplete","budSubscription","setBudSubscription","project","BudCore","unsubscribe","Tasks","write","rootsBudsGlob","moduleBudsGlob","projectBudsGlob","List","projectBuds","setProjectBuds","buds","map","src","name","source","description","filter","moduleBuds","setModuleBuds","rootsBuds","setRootsBuds"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["module.exports = {\n  arrowParens: 'avoid',\n  bracketSpacing: false,\n  tabWidth: 2,\n  printWidth: 100,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: false,\n  trailingComma: 'all',\n  semi: false,\n  overrides: [\n    {\n      files: ['*.md'],\n      options: {\n        parser: 'markdown',\n      },\n    },\n    {\n      files: ['*.json'],\n      options: {\n        parser: 'json',\n      },\n    },\n  ],\n}\n","/**\n * Handlebars helpers\n */\nmodule.exports = data => {\n  return [\n    {\n      helper: 'array',\n      fn: function () {\n        return Array.prototype.slice.call(arguments, 0, -1)\n      },\n    },\n    {\n      helper: 'has',\n      fn: function (object, component, options) {\n        if (data[object].indexOf(component) > -1) {\n          return options.fn(this)\n        }\n\n        return options.inverse(this)\n      },\n    },\n    {\n      helper: 'hasAny',\n      fn: function (object, components, options) {\n        let hasInstance = false\n\n        if (components) {\n          components.forEach(component => {\n            if (data[object].indexOf(component) > -1) {\n              hasInstance = true\n            }\n          })\n        }\n\n        return hasInstance ? options.fn(this) : options.inverse(this)\n      },\n    },\n    {\n      helper: 'raw',\n      fn: function (options) {\n        return options.fn()\n      },\n    },\n  ]\n}\n","const {join, resolve} = require('path')\nconst fs = require('fs-extra')\nconst fetch = require('node-fetch')\nconst execa = require('execa')\nconst handlebars = require('handlebars')\nconst prettier = require('prettier')\nconst globby = require('globby')\nconst {Observable, from} = require('rxjs')\nconst {concatMap} = require('rxjs/operators')\n\nconst basePrettierConfig = require('./../../prettier.config.js')\nconst handlebarsHelpers = require('handlebars-helpers')\nconst helpers = require('./helpers')\n\n/**\n * Bud Core\n */\nexport const bud = {\n  fs,\n  fetch,\n  execa,\n  prettier,\n  handlebars,\n\n  /**\n   * Initialize\n   *\n   * @param {string} outDir\n   * @param {object} data\n   * @param {object} sprout\n   * @param {string} templateDir\n   * @param {bool}   skipInstall\n   */\n  init: function ({outDir = './', data = {}, sprout, templateDir}) {\n    this.data = data\n    this.sprout = sprout\n    this.projectDir = outDir\n    this.execaOptions = {cwd: this.projectDir}\n    this.templateDir = templateDir\n\n    this.registerActions()\n    this.registerHelpers()\n\n    return this\n  },\n\n  /**\n   * Get config.\n   *\n   * @return {object}\n   */\n  getConfig: function () {\n    return {\n      path: `${process.cwd()}/${this.projectDir}/.bud/bud.config.json`,\n      data: require(`${process.cwd()}/${this.projectDir}/.bud/bud.config.json`),\n    }\n  },\n\n  /**\n   * Get data.\n   *\n   * @return {object}\n   */\n  getData: function () {\n    return this.data\n  },\n\n  /**\n   * Set data.\n   *\n   * @param  {object} data\n   * @return {void}\n   */\n  setData: function (data) {\n    this.data = data\n  },\n\n  /**\n   * Register actions\n   */\n  registerActions: function () {\n    this.sprout.registerActions &&\n      this.sprout.registerActions.forEach(action => {\n        this[`${action.handle}`] = action.callback\n      })\n  },\n\n  /**\n   * Register helpers\n   */\n  registerHelpers: function () {\n    // lib helpers\n    handlebarsHelpers({handlebars: this.handlebars})\n\n    // plugin registered helpers\n    this.sprout.registerHelpers &&\n      this.sprout.registerHelpers.length > 0 &&\n      this.sprout.registerHelpers.forEach(helper => {\n        helpers.push(helper)\n      })\n\n    // roots/bud helpers\n    helpers(this.getData()).forEach(({helper, fn}) => {\n      this.handlebars.registerHelper(helper, fn)\n    })\n  },\n\n  /**\n   * Format\n   *\n   * @param  {object|string} content\n   * @param  {parser} string\n   * @return {string}\n   */\n  format: function (content, parser) {\n    return this.prettier.format(\n      typeof content !== 'string' ? JSON.stringify(content) : content,\n      {\n        ...basePrettierConfig,\n        parser: parser || 'babel',\n      },\n    )\n  },\n\n  /**\n   * Actions\n   *\n   * @return {Observable}\n   */\n  actions: function () {\n    const bud = {...this}\n\n    return new Observable(function (observer) {\n      from(bud.sprout.actions)\n        .pipe(\n          concatMap(function (task) {\n            return new Observable(async function (observer) {\n              observer.next(task.action)\n\n              return bud[task.action](task, observer, bud)\n            })\n          }),\n        )\n        .subscribe({\n          next: next => observer.next(next),\n          error: error => observer.error(error),\n          complete: complete => observer.complete(complete),\n        })\n    })\n  },\n\n  /**\n   * Scaffold directories\n   *\n   * @param  {array} paths\n   * @return {Observable}\n   */\n  scaffold: function ({paths}, observer) {\n    observer.next(`Creating directories`)\n\n    from(paths)\n      .pipe(\n        concatMap(path => {\n          return new Observable(async observer => {\n            await this.mkDir({path}, observer)\n          })\n        }),\n      )\n      .subscribe({\n        next: next => observer.next(next),\n        complete: () => observer.complete(),\n      })\n  },\n\n  /**\n   * Make directory\n   *\n   * @param  {string}     path\n   * @param  {Observable} observer\n   * @return {Observable}\n   */\n  mkDir: async function ({path}, observer) {\n    const pathTemplate = this.handlebars.compile(path)\n    const dirPath = join(this.projectDir, pathTemplate(this.getData()))\n\n    await fs.ensureDir(dirPath).then(() => {\n      observer.complete()\n    })\n  },\n\n  /**\n   * Get template contents.\n   *\n   * @param  {string} template\n   * @return {array}\n   */\n  getTemplate: async function (template) {\n    const path = join(this.templateDir, template)\n    const contents = await fs.readFile(path, 'utf8')\n\n    return {path, contents}\n  },\n\n  /**\n   * Infer parser\n   *\n   * @param  {string} file\n   * @return {string}\n   */\n  inferParser: async function (file) {\n    const ext = file.split('.')[file.split('.').length - 1]\n    const parserMap = {\n      js: 'babel',\n      jsx: 'babel',\n      graphql: 'graphql',\n      css: 'css',\n      json: 'json',\n      md: 'markdown',\n      html: 'html',\n      htm: 'html',\n      ts: 'typescript',\n      tsx: 'typescript',\n      yml: 'yaml',\n      yaml: 'yaml',\n      less: 'less',\n    }\n\n    return parserMap[`${ext}`] ?? null\n  },\n\n  /**\n   * Action: template\n   *\n   * @param  {string} parser\n   * @param  {string} path\n   * @param  {string} template\n   * @return {Observable}\n   */\n  template: async function ({parser, path, template}, observer) {\n    const {contents} = await this.getTemplate(template)\n    const dest = join(\n      this.projectDir,\n      this.handlebars\n        .compile(path)(this.getData())\n        .replace('.hbs', '')\n    )\n\n    observer.next(`Writing ${dest.split('/')[dest.split('/').length - 1]}`)\n\n    const compiled = this.handlebars.compile(contents)(this.getData())\n    const outputContents = parser ? this.format(compiled, parser) : compiled\n\n    fs.outputFile(dest, outputContents).then(() => observer.complete())\n  },\n\n  /**\n   * Action: template dir\n   *\n   * @param  {string} parser\n   * @param  {string} path\n   * @param  {string} templateDir\n   * @return {Observable}\n   */\n  templateGlob: async function ({glob}, observer) {\n    observer.next(glob)\n\n    const templates = await globby([resolve(this.templateDir, glob)])\n\n    from(templates)\n      .pipe(\n        concatMap(template => {\n          return new Observable(async observer => {\n            const parser = await this.inferParser(\n              template.replace('.hbs', ''),\n            )\n\n            await this.template(\n              {\n                parser,\n                template: template.replace(this.templateDir, ''),\n                path: template\n                  .replace(this.templateDir, '')\n                  .replace('.hbs', ''),\n              },\n              observer,\n            )\n          })\n        }),\n      )\n      .subscribe({\n        next: next => observer.next(next),\n        complete: () => observer.complete(),\n      })\n  },\n\n  /**\n   * Action: Modules\n   *\n   * @param  {array} pkgs\n   * @param  {bool}  dev\n   * @return {Observable}\n   */\n  addDependencies: async function ({repo, pkgs, dev}, observer) {\n    let installation\n\n    observer.next(`Installing packages from ${repo}...`)\n\n    if (repo !== 'npm' && repo !== 'packagist') {\n      observer.error(`Incorrect package repo specified.`)\n    }\n\n    if (repo == 'npm') {\n      installation = this.execa.command(\n        `yarn add ${dev ? `-D` : ``} ${pkgs.join(' ')}`,\n        this.execaOptions,\n      )\n    }\n\n    if (repo == 'packagist') {\n      installation = this.execa.command(\n        `composer require ${pkgs.join(' ')} ${dev ? `--development` : ``}`,\n        this.execaOptions,\n      )\n    }\n\n    installation.stdout.on('data', status => {\n      observer.next(status)\n    })\n\n    installation.then(() => observer.complete())\n  },\n\n  /**\n   * Action: Install from package files\n   *\n   * @param  {string} repo\n   * @return {Observable}\n   */\n  install: async function ({repo}, observer) {\n    let installation\n\n    observer.next(`Installing packages from ${repo}...`)\n\n    if (repo !== 'npm' && repo !== 'packagist') {\n      observer.error(`Incorrect package repo specified.`)\n    }\n\n    if (repo == 'npm') {\n      installation = this.execa.command(`yarn`, this.execaOptions)\n    }\n\n    if (repo == 'packagist') {\n      installation = this.execa.command(`composer install`, this.execaOptions)\n    }\n\n    installation.stdout.on('data', status => {\n      observer.next(status)\n    })\n\n    installation.then(() => observer.complete())\n  },\n\n  /**\n   * Expose project JSON\n   */\n  json: async function ({file, merge}, observer) {\n    const json = require(`${this.projectDir}/${file}`)\n    observer.next(`Writing JSON to ${file}`)\n\n    try {\n      const output = merge(json)\n\n      await fs.outputFile(\n        `${this.projectDir}/${file}`,\n        this.format(output, 'json'),\n      )\n\n      observer.complete()\n    } catch (err) {\n      observer.error(`There was a problem writing to ${file}`)\n    }\n  },\n}\n","import {join} from 'path'\nimport {existsSync} from 'fs'\nimport React, {useState, useEffect} from 'react'\nimport {Box, Color, Text, useApp, useStdout} from 'ink'\nimport Link from 'ink-link'\nimport Spinner from 'ink-spinner'\nimport {prompt} from 'enquirer'\nimport {bud as BudCore} from './../bud'\n\nconst DEFAULT_BUDFILE = {\n  actions: [],\n  label: 'Budfile',\n  prompts: [],\n}\n\n/**\n * Bud CLI\n *\n * @prop {string} label\n * @prop {string} budFile\n * @prop {string} outDir\n * @prop {object} values\n * @prop {object} children\n * @prop {bool}   noClear\n */\nconst BudCLI = ({\n  label,\n  templateDir,\n  sprout = DEFAULT_BUDFILE,\n  outDir,\n  values = null,\n  inert = false,\n  children,\n  noClear = false,\n}) => {\n  /**\n   * Parse values from .bud/bud.config.json\n   */\n  const config = join(process.cwd(), '.bud/bud.config.json')\n  const [configData] = useState(existsSync(config) ? require(config) : null)\n\n  /**\n   * Parse values from prompt\n   */\n  const [prompts, setPrompts] = useState(\n    !values && sprout.prompts ? sprout.prompts : null,\n  )\n\n  const {exit} = useApp()\n  const [data, setData] = useState(null)\n  const [status, setStatus] = useState(null)\n  const [complete, setComplete] = useState(false)\n  const [budSubscription, setBudSubscription] = useState(false)\n\n  /**\n   * Assemble data from config files, prompt & cli args/flags.\n   */\n  useEffect(() => {\n    prompts\n      ? prompt(prompts).then(data => {\n          setPrompts(null)\n          setData({\n            ...(configData && configData.project ? configData.project : []),\n            ...(configData && configData.dev ? configData.dev : []),\n            ...data,\n            ...(values ? values : []),\n          })\n        })\n      : (() => {\n          setPrompts(null)\n          setData({\n            ...(configData && configData.project ? configData.project : []),\n            ...(configData && configData.dev ? configData.dev : []),\n            ...(values ? values : []),\n          })\n        })()\n  }, [])\n\n  /**\n   * Run the budfile actions\n   */\n  useEffect(() => {\n    data &&\n      !inert &&\n      !budSubscription &&\n      setBudSubscription(\n        BudCore.init({\n          data,\n          templateDir,\n          sprout,\n          outDir,\n        })\n          .actions()\n          .subscribe({\n            next: next => setStatus(next),\n            complete: () => setComplete(true),\n          }),\n      )\n  }, [data, status])\n\n  useEffect(() => {\n    complete &&\n      (async () => {\n        await budSubscription.unsubscribe()\n        exit()\n      })()\n  }, [complete, budSubscription])\n\n  /**\n   * Render TTY\n   */\n  return (\n    <Box flexDirection=\"column\" justifyContent=\"flex-start\" padding={1}>\n      <Box marginBottom={1} flexDirection=\"row\" justifyContent=\"space-between\">\n        {label && <Text>{label}</Text>}\n        <Box flexDirection=\"row\">\n          <Text>{`🌱`}</Text>\n          <Text bold>\n            <Link url=\"https://roots.io/bud\">\n              <Color green>{'  Bud'}</Color>\n            </Link>\n          </Text>\n        </Box>\n      </Box>\n\n      <Tasks\n        data={data}\n        status={status}\n        complete={complete}\n        noClear={noClear}\n      />\n\n      {children && children}\n    </Box>\n  )\n}\n\n/**\n * Tasks\n */\nconst Tasks = ({data, status, complete, noClear}) => {\n  const {stdout} = useStdout()\n  useEffect(() => {\n    data && !noClear && stdout.write('\\x1B[2J\\x1B[0f')\n  }, [data])\n\n  return status ? (\n    <Box>\n      {complete ? (\n        <Color green>⚡️ All set.</Color>\n      ) : (\n        <Text>\n          <Color green>\n            <Spinner type=\"dots\" />\n          </Color>\n          {` ${status}`}\n        </Text>\n      )}\n    </Box>\n  ) : (\n    []\n  )\n}\n\nexport default BudCLI\n","import React, {useState, useEffect} from 'react'\nimport {Text, Box} from 'ink'\nimport Spinner from 'ink-spinner'\nimport Table from 'ink-table'\nimport BudCLI from '../../src/components/BudCLI'\nimport globby from 'globby'\n\n/**\n * Budfile glob paths\n */\nconst rootsBudsGlob = `${process.cwd()}/node_modules/@roots/bud/src/budfiles/**/*.bud.js`\nconst moduleBudsGlob = `${process.cwd()}/node_modules/**/bud-plugin-*/*.bud.js`\nconst projectBudsGlob = `${process.cwd()}/.bud/**/*.bud.js`\n\n/** Command: generate list */\n/// List available budfiles\nconst List = () => {\n  /**\n   * Project buds\n   */\n  const [projectBuds, setProjectBuds] = useState([])\n  useEffect(() => {\n    projectBuds.length == 0 &&\n      (async () => {\n        const buds = await globby(projectBudsGlob)\n\n        buds &&\n          setProjectBuds(\n            buds\n              .map(bud => {\n                const src = require(bud)\n                return {\n                  command: `yarn generate ${src.name}`,\n                  source: 'project',\n                  name: src.name,\n                  description: src.description,\n                }\n              })\n              .filter(bud => bud.name),\n          )\n      })()\n  }, [])\n\n  /**\n   * Module buds\n   */\n  const [moduleBuds, setModuleBuds] = useState([])\n  useEffect(() => {\n    ;(async () => {\n      const buds = await globby(moduleBudsGlob)\n\n      buds &&\n        setModuleBuds(\n          buds\n            .map(bud => {\n              const src = require(bud)\n\n              return {\n                command: `yarn generate ${src.name}`,\n                source: src.source ? src.source : null,\n                name: src.name,\n                description: src.description,\n              }\n            })\n            .filter(bud => bud.name),\n        )\n    })()\n  }, [])\n\n  /**\n   * Module buds\n   */\n  const [rootsBuds, setRootsBuds] = useState([])\n  useEffect(() => {\n    rootsBuds.length == 0 &&\n      (async () => {\n        const buds = await globby(rootsBudsGlob)\n\n        buds &&\n          setRootsBuds(\n            buds\n              .map(bud => {\n                const src = require(bud)\n                return src.name !== 'bud' && src.name !== 'init'\n                  ? {\n                      command: `yarn generate ${src.name}`,\n                      source: '@roots/bud',\n                      name: src.name,\n                      description: src.description,\n                    }\n                  : {}\n              })\n              .filter(bud => bud.name),\n          )\n      })()\n  }, [])\n\n  const buds = [...projectBuds, ...rootsBuds, ...moduleBuds]\n\n  /**\n   * Render\n   */\n  return (\n    <>\n      <BudCLI label={'Available commands'} inert={true}>\n        <Box flexDirection=\"column\" marginTop={1} marginBottom={1}>\n          {!moduleBuds.length > 0 && (\n            <Box\n              flexDirection=\"row\"\n              marginBottom={1}\n              alignItems=\"center\">\n              <Spinner type=\"monkey\" /> <Text>Looking for modules</Text>\n            </Box>\n          )}\n          <Box\n            width={200}\n            flexDirection=\"column\"\n            flexGrow={1}\n            justifyContent=\"space-between\">\n            {buds.length > 0 && (\n              <Table width={200} data={buds} />\n            )}\n          </Box>\n        </Box>\n      </BudCLI>\n    </>\n  )\n}\n\nexport default List\n"]}