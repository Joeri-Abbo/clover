{"version":3,"sources":["../src/hooks/useGeneratorIndex.js","../src/hooks/usePresetIndex.js","../src/components/Banner.js","../src/components/Loading.js","../src/components/App.js","../src/components/List.js","list/index.js"],"names":["cwd","process","fromMatches","matches","map","generator","name","path","basename","replace","useProjectGenerators","generators","setGenerators","checked","setChecked","useModuleGenerators","keyword","packages","dir","resolve","join","scanAllDirs","plugin","useGeneratorIndex","project","checkedProject","core","checkedCore","checkedPlugin","status","complete","useModulePresets","presets","setPresets","pkg","usePresetIndex","Banner","Loading","message","spinnerColor","propTypes","PropTypes","string","defaultProps","App","isLoading","loadingMessage","children","List","label","items","item","id","ListCommand","coreGenerators","pluginGenerators","projectGenerators","generatorsComplete","corePresets","pluginPresets","presetsComplete"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAACD,GAAR,EAAZ;AAEA;;;;AAGA,MAAME,WAAW,GAAGC,OAAO,IACzBA,OAAO,CAACC,GAAR,CAAYC,SAAS,KAAK;AACxBC,EAAAA,IAAI,EAAEC,cAAKC,QAAL,CAAcH,SAAd,EAAyBI,OAAzB,CAAiC,SAAjC,EAA4C,EAA5C,CADkB;AAExBF,EAAAA,IAAI,EAAEF;AAFkB,CAAL,CAArB,CADF;AAMA;;;;;AAGA,MAAMK,oBAAoB,GAAG,MAAM;AACjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B,qBAAS,EAAT,CAApC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,qBAAS,KAAT,CAA9B;AACA,wBAAU,MAAM;AACd;;AAAC,KAAC,YAAY;AACZA,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,YAAMX,OAAO,GAAG,MAAM,qBAAO,CAC1B,GAAEH,GAAI,8BADoB,CAAP,CAAtB;AAIAY,MAAAA,aAAa,CAACV,WAAW,CAACC,OAAD,CAAZ,CAAb;AACAW,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KATA;AAUF,GAXD,EAWG,EAXH;AAaA,SAAO,CAACH,UAAD,EAAaE,OAAb,CAAP;AACD,CAjBD;AAmBA;;;;;;;;;AAKA,MAAME,mBAAmB,GAAGC,OAAO,IAAI;AACrC,QAAM,CAACL,UAAD,EAAaC,aAAb,IAA8B,qBAAS,EAAT,CAApC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,qBAAS,KAAT,CAA9B;AAEA,wBAAU,MAAM;AACd;;AAAC,KAAC,YAAY;AACZA,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,YAAMG,QAAQ,GAAG,0BAAY;AAC3BC,QAAAA,GAAG,EAAEX,cAAKY,OAAL,CAAaZ,cAAKa,IAAL,CAAUpB,GAAV,EAAe,cAAf,CAAb,CADsB;AAE3BqB,QAAAA,WAAW,EAAE,IAFc;AAG3BL,QAAAA;AAH2B,OAAZ,EAIdZ,GAJc,CAIVkB,MAAM,IACXf,cAAKa,IAAL,CAAUE,MAAM,CAACJ,GAAjB,EAAsB,yBAAtB,CALe,CAAjB;AAQA,YAAMf,OAAO,GAAG,MAAM,qBAAO,CAC3B,GAAGc,QADwB,EAE3B,sBAF2B,CAAP,CAAtB;AAKAL,MAAAA,aAAa,CAACV,WAAW,CAACC,OAAD,CAAZ,CAAb;AACAW,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAlBA;AAmBF,GApBD,EAoBG,CAACE,OAAD,CApBH;AAsBA,SAAO,CAACL,UAAD,EAAaE,OAAb,CAAP;AACD,CA3BD;AA6BA;;;;;;;AAGA,MAAMU,iBAAiB,GAAG,MAAM;AAC9B,QAAM,CAACC,OAAD,EAAUC,cAAV,IAA4Bf,oBAAoB,EAAtD;AACA,QAAM,CAACgB,IAAD,EAAOC,WAAP,IAAsBZ,mBAAmB,CAC7C,qBAD6C,CAA/C;AAGA,QAAM,CAACO,MAAD,EAASM,aAAT,IAA0Bb,mBAAmB,CAAC,eAAD,CAAnD;AAEA,SAAO;AACLS,IAAAA,OADK;AAELF,IAAAA,MAFK;AAGLI,IAAAA,IAHK;AAILG,IAAAA,MAAM,EAAE;AACNL,MAAAA,OAAO,EAAEC,cADH;AAENH,MAAAA,MAAM,EAAEM,aAFF;AAGNF,MAAAA,IAAI,EAAEC;AAHA,KAJH;AASLG,IAAAA,QAAQ,EAAEH,WAAW,IAAIF,cAAf,IAAiCG;AATtC,GAAP;AAWD,CAlBD;;eAoBeL;;;;;;;;;;AC/Ff;;AACA;;AACA;;AACA;;;;AAEA,MAAMvB,GAAG,GAAGC,OAAO,CAACD,GAAR,EAAZ;AAEA;;;;AAGA,MAAME,WAAW,GAAGC,OAAO,IACzBA,OAAO,CAACC,GAAR,CAAYC,SAAS,KAAK;AACxBC,EAAAA,IAAI,EAAEC,cAAKC,QAAL,CAAcH,SAAd,EAAyBI,OAAzB,CAAiC,gBAAjC,EAAmD,EAAnD,CADkB;AAExBF,EAAAA,IAAI,EAAEF;AAFkB,CAAL,CAArB,CADF;AAMA;;;;;;;AAKA,MAAM0B,gBAAgB,GAAGf,OAAO,IAAI;AAClC,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwB,qBAAS,EAAT,CAA9B;AACA,QAAM,CAACpB,OAAD,EAAUC,UAAV,IAAwB,qBAAS,KAAT,CAA9B;AAEA,wBAAU,MAAM;AACd;;AAAC,KAAC,YAAY;AACZA,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,YAAMG,QAAQ,GAAG,0BAAY;AAC3BC,QAAAA,GAAG,EAAEX,cAAKY,OAAL,CAAaZ,cAAKa,IAAL,CAAUpB,GAAV,EAAe,cAAf,CAAb,CADsB;AAE3BqB,QAAAA,WAAW,EAAE,IAFc;AAG3BL,QAAAA;AAH2B,OAAZ,EAIdZ,GAJc,CAIV8B,GAAG,IACR3B,cAAKa,IAAL,CACEb,cAAKa,IAAL,CAAUc,GAAG,CAAChB,GAAd,EAAmB,SAAnB,CADF,EAEE,qBAFF,CALe,CAAjB;AAWA,YAAMf,OAAO,GAAG,MAAM,qBAAOc,QAAP,CAAtB;AAEAgB,MAAAA,UAAU,CAAC/B,WAAW,CAACC,OAAD,CAAZ,CAAV;AACAW,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAlBA;AAmBF,GApBD,EAoBG,CAACE,OAAD,CApBH;AAsBA,SAAO,CAACgB,OAAD,EAAUnB,OAAV,CAAP;AACD,CA3BD;AA6BA;;;;;;;AAGA,MAAMsB,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACT,IAAD,EAAOC,WAAP,IAAsBI,gBAAgB,CAAC,kBAAD,CAA5C;AACA,QAAM,CAACT,MAAD,EAASM,aAAT,IAA0BG,gBAAgB,CAAC,YAAD,CAAhD;AAEA,SAAO;AACLT,IAAAA,MADK;AAELI,IAAAA,IAFK;AAGLG,IAAAA,MAAM,EAAE;AACNP,MAAAA,MAAM,EAAEM,aADF;AAENF,MAAAA,IAAI,EAAEC;AAFA,KAHH;AAOLG,IAAAA,QAAQ,EAAEH,WAAW,IAAIC;AAPpB,GAAP;AASD,CAbD;;eAeeO;;;;;;;;;;ACpEf;;AACA;;;;AAEA,MAAMC,MAAM,GAAG,mBACb,6BAAC,QAAD;AAAK,EAAA,aAAa,EAAC,QAAnB;AAA4B,EAAA,YAAY,EAAE;AAA1C,gBACE,6BAAC,SAAD;AAAM,EAAA,KAAK,EAAC;AAAZ,6BADF,CADF;;eAMeA;;;;;;;;;;ACTf;;AACA;;AACA;;;;AAEA;;;;;AAKA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,YAAY,GAAG;AAAzB,CAAD,kBACd,6BAAC,SAAD;AAAM,EAAA,KAAK,EAAEA;AAAb,QAA6BD,OAA7B,CADF;;AAIAD,OAAO,CAACG,SAAR,GAAoB;AAClBF,EAAAA,OAAO,EAAEG,mBAAUC;AADD,CAApB;AAIAL,OAAO,CAACM,YAAR,GAAuB;AACrBL,EAAAA,OAAO,EAAE;AADY,CAAvB;eAIeD;;;;;;;;;;ACrBf;;AACA;;AAEA;;AACA;;;;AAEA;;;;;AAKA,MAAMO,GAAG,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,cAAZ;AAA4BC,EAAAA;AAA5B,CAAD,kBACV,6BAAC,QAAD;AACE,EAAA,aAAa,EAAC,QADhB;AAEE,EAAA,cAAc,EAAC,YAFjB;AAGE,EAAA,UAAU,EAAE,CAHd;AAIE,EAAA,YAAY,EAAE,CAJhB;AAKE,EAAA,aAAa,EAAE,CALjB;AAME,EAAA,WAAW,EAAE;AANf,gBAOE,6BAAC,eAAD,OAPF,EAQGF,SAAS,iBACR,6BAAC,gBAAD;AACE,EAAA,YAAY,EAAC,OADf;AAEE,EAAA,OAAO,EAAEC,cAAF,aAAEA,cAAF,cAAEA,cAAF,GAAoB;AAF7B,EATJ,EAcGC,QAdH,CADF;;eAmBeH;;;;;;;;;;AC9Bf;;AACA;;;;AAEA;;;;;;;AAOA,MAAMI,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,kBACX,6BAAC,QAAD;AAAK,EAAA,aAAa,EAAC,QAAnB;AAA4B,EAAA,YAAY,EAAE;AAA1C,GACGD,KAAK,iBACJ,6BAAC,SAAD;AAAM,EAAA,KAAK,EAAC,OAAZ;AAAoB,EAAA,eAAe,EAAC;AAApC,GACGA,KADH,CAFJ,EAOGC,KAPH,aAOGA,KAPH,uBAOGA,KAAK,CAAE9C,GAAP,CAAW,CAAC+C,IAAD,EAAOC,EAAP,kBACV,6BAAC,QAAD;AAAK,EAAA,GAAG,EAAEA,EAAV;AAAc,EAAA,aAAa,EAAC;AAA5B,gBACE,6BAAC,SAAD,mBAASD,IAAI,CAAC7C,IAAd,CADF,CADD,CAPH,CADF;;eAgBe0C;;;;;;;;;;AC1Bf;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;AAEA;AACA;AACA,MAAMK,WAAW,GAAG,MAAM;AACxB;;;AAGA,QAAM;AACJ3B,IAAAA,IAAI,EAAE4B,cADF;AAEJhC,IAAAA,MAAM,EAAEiC,gBAFJ;AAGJ/B,IAAAA,OAAO,EAAEgC,iBAHL;AAIJ1B,IAAAA,QAAQ,EAAE2B;AAJN,MAKF,iCALJ;AAMA,QAAM9C,UAAU,GAAG,CACjB,GAAG6C,iBADc,EAEjB,GAAGD,gBAFc,EAGjB,GAAGD,cAHc,CAAnB;AAMA;;;;AAGA,QAAM;AACJ5B,IAAAA,IAAI,EAAEgC,WADF;AAEJpC,IAAAA,MAAM,EAAEqC,aAFJ;AAGJ7B,IAAAA,QAAQ,EAAE8B;AAHN,MAIF,8BAJJ;AAKA,QAAM5B,OAAO,GAAG,CAAC,GAAG0B,WAAJ,EAAiB,GAAGC,aAApB,CAAhB;AAEA;;;;AAGA,QAAM7B,QAAQ,GAAG2B,kBAAkB,IAAIG,eAAvC;AAEA,sBACE,6BAAC,YAAD;AAAK,IAAA,SAAS,EAAE,CAAC9B;AAAjB,KACGA,QAAQ,iBACP,6BAAC,QAAD;AAAK,IAAA,aAAa,EAAC;AAAnB,kBACE,6BAAC,aAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAEE;AAA7B,IADF,eAEE,6BAAC,aAAD;AAAM,IAAA,KAAK,EAAC,YAAZ;AAAyB,IAAA,KAAK,EAAErB;AAAhC,IAFF,CAFJ,CADF;AAUD,CAzCD;;eA2Ce0C","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import path from 'path'\nimport {useState, useEffect} from 'react'\nimport findPlugins from 'find-plugins'\nimport globby from 'globby'\n\nconst cwd = process.cwd()\n\n/**\n * Process globby matches into expected object\n */\nconst fromMatches = matches =>\n  matches.map(generator => ({\n    name: path.basename(generator).replace('.bud.js', ''),\n    path: generator,\n  }))\n\n/**\n * Generators sourced from project .bud dir\n */\nconst useProjectGenerators = () => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const matches = await globby([\n        `${cwd}/.bud/generators/**/*.bud.js`,\n      ])\n\n      setGenerators(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [])\n\n  return [generators, checked]\n}\n\n/**\n * Generators sourced from node_modules\n *\n * @param {string} keyword package.json keywords match\n */\nconst useModuleGenerators = keyword => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const packages = findPlugins({\n        dir: path.resolve(path.join(cwd, 'node_modules')),\n        scanAllDirs: true,\n        keyword,\n      }).map(plugin =>\n        path.join(plugin.dir, '/generators/**/*.bud.js'),\n      )\n\n      const matches = await globby([\n        ...packages,\n        '!/**/*.preset.bud.js',\n      ])\n\n      setGenerators(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [keyword])\n\n  return [generators, checked]\n}\n\n/**\n * useGenerators hook\n */\nconst useGeneratorIndex = () => {\n  const [project, checkedProject] = useProjectGenerators()\n  const [core, checkedCore] = useModuleGenerators(\n    'bud-core-generators',\n  )\n  const [plugin, checkedPlugin] = useModuleGenerators('bud-generator')\n\n  return {\n    project,\n    plugin,\n    core,\n    status: {\n      project: checkedProject,\n      plugin: checkedPlugin,\n      core: checkedCore,\n    },\n    complete: checkedCore && checkedProject && checkedPlugin,\n  }\n}\n\nexport default useGeneratorIndex\nexport {useProjectGenerators, useModuleGenerators}\n","import path from 'path'\nimport {useState, useEffect} from 'react'\nimport findPlugins from 'find-plugins'\nimport globby from 'globby'\n\nconst cwd = process.cwd()\n\n/**\n * Process glob matches into the format the rest of the application anticipates.\n */\nconst fromMatches = matches =>\n  matches.map(generator => ({\n    name: path.basename(generator).replace('.preset.bud.js', ''),\n    path: generator,\n  }))\n\n/**\n * Presets sourced from node_modules\n *\n * @param {string} keyword package.json keywords match\n */\nconst useModulePresets = keyword => {\n  const [presets, setPresets] = useState([])\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const packages = findPlugins({\n        dir: path.resolve(path.join(cwd, 'node_modules')),\n        scanAllDirs: true,\n        keyword,\n      }).map(pkg =>\n        path.join(\n          path.join(pkg.dir, 'presets'),\n          '/**/*.preset.bud.js',\n        ),\n      )\n\n      const matches = await globby(packages)\n\n      setPresets(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [keyword])\n\n  return [presets, checked]\n}\n\n/**\n * usePresets hook\n */\nconst usePresetIndex = () => {\n  const [core, checkedCore] = useModulePresets('bud-core-presets')\n  const [plugin, checkedPlugin] = useModulePresets('bud-preset')\n\n  return {\n    plugin,\n    core,\n    status: {\n      plugin: checkedPlugin,\n      core: checkedCore,\n    },\n    complete: checkedCore && checkedPlugin,\n  }\n}\n\nexport default usePresetIndex\nexport {useModulePresets}\n","import React from 'react'\nimport {Box, Text} from 'ink'\n\nconst Banner = () => (\n  <Box flexDirection=\"column\" marginBottom={1}>\n    <Text color=\"green\">⚡️ @roots/bud</Text>\n  </Box>\n)\n\nexport default Banner\n","import React from 'react'\nimport {Text} from 'ink'\nimport PropTypes from 'prop-types'\n\n/**\n * Loading\n *\n * @prop {string} message\n */\nconst Loading = ({message, spinnerColor = 'white'}) => (\n  <Text color={spinnerColor}> {message}</Text>\n)\n\nLoading.propTypes = {\n  message: PropTypes.string,\n}\n\nLoading.defaultProps = {\n  message: 'Loading',\n}\n\nexport default Loading\n","import React from 'react'\nimport {Box} from 'ink'\n\nimport Banner from './Banner'\nimport Loading from './Loading'\n\n/**\n * Bud application.\n *\n * @prop {object} children\n */\nconst App = ({isLoading, loadingMessage, children}) => (\n  <Box\n    flexDirection=\"column\"\n    justifyContent=\"flex-start\"\n    paddingTop={1}\n    paddingRight={1}\n    paddingBottom={0}\n    paddingLeft={1}>\n    <Banner />\n    {isLoading && (\n      <Loading\n        spinnerColor=\"green\"\n        message={loadingMessage ?? 'Loading'}\n      />\n    )}\n    {children}\n  </Box>\n)\n\nexport default App\n","import React from 'react'\nimport {Box, Text} from 'ink'\n\n/**\n * Present an array of objects as a list.\n *\n * @prop {string} label\n * @prop {array}  items\n * @return {ReactElement}\n */\nconst List = ({label, items}) => (\n  <Box flexDirection=\"column\" marginBottom={1}>\n    {label && (\n      <Text color=\"black\" backgroundColor=\"green\">\n        {label}\n      </Text>\n    )}\n\n    {items?.map((item, id) => (\n      <Box key={id} flexDirection=\"column\">\n        <Text>◦ {item.name}</Text>\n      </Box>\n    ))}\n  </Box>\n)\n\nexport default List\n","import React from 'react'\nimport {Box} from 'ink'\n\nimport useGeneratorIndex from './../../src/hooks/useGeneratorIndex'\nimport usePresetIndex from './../../src/hooks/usePresetIndex'\nimport App from './../../src/components/App'\nimport List from './../../src/components/List'\n\n/** Command: bud list */\n/// List available budfiles\nconst ListCommand = () => {\n  /**\n   * Fetch all available generators.\n   */\n  const {\n    core: coreGenerators,\n    plugin: pluginGenerators,\n    project: projectGenerators,\n    complete: generatorsComplete,\n  } = useGeneratorIndex()\n  const generators = [\n    ...projectGenerators,\n    ...pluginGenerators,\n    ...coreGenerators,\n  ]\n\n  /**\n   * Fetch all available presets.\n   */\n  const {\n    core: corePresets,\n    plugin: pluginPresets,\n    complete: presetsComplete,\n  } = usePresetIndex()\n  const presets = [...corePresets, ...pluginPresets]\n\n  /**\n   * We have all available generators and presets.\n   */\n  const complete = generatorsComplete && presetsComplete\n\n  return (\n    <App isLoading={!complete}>\n      {complete && (\n        <Box flexDirection=\"column\">\n          <List label=\"Presets\" items={presets} />\n          <List label=\"Generators\" items={generators} />\n        </Box>\n      )}\n    </App>\n  )\n}\n\nexport default ListCommand\n"]}