{"version":3,"sources":["../src/bud/store.js","../src/bud/components/Banner.js","../src/bud/containers/List.js","list/index.js"],"names":["store","writeDir","projectConfig","label","prompts","data","status","error","complete","ready","budfile","sprout","search","core","results","plugins","project","Provider","StateProvider","children","state","dispatch","action","type","key","value","colors","success","Banner","width","spinner","setSpinner","setStatus","statusColor","setStatusColor","white","propTypes","PropTypes","string","List","glob","Observable","observer","next","setComplete","setResults","subscribe","displayFile","file","replace","map","result","id","array","isRequired","defaultProps","cwd","process","globs","ListView","ListCLI","request"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import React, {createContext, useReducer} from 'react'\n\n/**\n * Bud application context\n */\nexport const store = createContext({\n  writeDir: null,\n  projectConfig: null,\n  label: null,\n  prompts: null,\n  data: null,\n  status: null,\n  error: null,\n  complete: false,\n  ready: false,\n  budfile: null,\n  sprout: null,\n  search: {\n    core: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n    plugins: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n    project: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n  },\n})\n\nconst {Provider} = store\n\n/**\n * State provider\n */\nexport const StateProvider = ({children}) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'SET': {\n        const {key, value} = action\n        return {\n          ...state,\n          [key]: value,\n        }\n      }\n    }\n    switch (action.type) {\n      case 'SET_LABEL': {\n        const {label} = action\n        return {\n          ...state,\n          label,\n        }\n      }\n      case 'SET_PROMPTS': {\n        const {prompts} = action\n        return {\n          ...state,\n          prompts,\n        }\n      }\n      case 'SET_DATA': {\n        const {data} = action\n        return {\n          ...state,\n          data: {\n            ...state.data,\n            ...data,\n          },\n        }\n      }\n      case 'SET_READY': {\n        const {ready} = action\n        return {\n          ...state,\n          ready,\n        }\n      }\n      case 'SET_STATUS': {\n        const {status} = action\n        return {\n          ...state,\n          status,\n        }\n      }\n      case 'SET_ERROR': {\n        const {error} = action\n        return {\n          ...state,\n          error,\n        }\n      }\n      case 'SET_COMPLETE': {\n        const {complete} = action\n        return {\n          ...state,\n          complete,\n        }\n      }\n      case 'SEARCH_RESULTS': {\n        const {results, status, complete} = action\n        return {\n          ...state,\n          search: {\n            ...state.search,\n            [`${action.label}`]: {\n              results,\n              status,\n              complete,\n            },\n          },\n        }\n      }\n    }\n  }, store)\n\n  return <Provider value={{state, dispatch}}>{children}</Provider>\n}\n","import React, {useContext, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {Box, Text, Color} from 'ink'\nimport Link from 'ink-link'\nimport Spinner from 'ink-spinner'\nimport {store} from './../store'\nimport useStdoutDimensions from 'ink-use-stdout-dimensions'\n\nconst colors = {\n  success: '#96EF85',\n  error: '#BE425E',\n}\n\n/**\n * Banner\n *\n * @prop {string} label\n */\nconst Banner = ({label}) => {\n  const {state} = useContext(store)\n  const [width] = useStdoutDimensions()\n  const [spinner, setSpinner] = useState(true)\n  const [status, setStatus] = useState(false)\n  const [statusColor, setStatusColor] = useState('#ffffff')\n  useEffect(() => {\n    if (state?.status && state.status == 'complete') {\n      setStatus('🎉')\n      setStatusColor(colors.success)\n      setSpinner(false)\n    }\n    if (state?.status && state.status == 'building') {\n      setStatus('👩‍💻')\n      setStatusColor(colors.white)\n      setSpinner(true)\n    }\n    if (state?.status && state.status == 'questions') {\n      setStatus('❔')\n      setStatusColor(colors.white)\n      setSpinner(false)\n    }\n    if (state?.status && state.status == 'error') {\n      setStatus('💢')\n      setStatusColor(colors.error)\n      setSpinner(false)\n    }\n  }, [state])\n\n  return state ? (\n    <Box\n      flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      marginTop={1}\n      width={width - width / 20}>\n      <Box flexDirection=\"row\" justifyContent=\"space-between\">\n        <Box width={1} marginRight={2}>\n          {spinner ? <Spinner /> : <Text>{status}</Text>}\n        </Box>\n\n        <Box>\n          <Text>\n            <Color hex={statusColor}>{label}</Color>\n          </Text>\n        </Box>\n      </Box>\n\n      <Box flexDirection=\"row\">\n        <Text>{`🌱`}</Text>\n        <Box>\n          <Text bold>\n            <Link url=\"https://roots.io/bud\">\n              <Color green>{'Bud'}</Color>\n            </Link>\n          </Text>\n        </Box>\n      </Box>\n    </Box>\n  ) : (\n    <Box>\n      <Spinner /> Loading\n    </Box>\n  )\n}\n\nBanner.propTypes = {\n  label: PropTypes.string,\n}\n\nexport default Banner\n","import {basename} from 'path'\nimport React, {useContext, useState, useEffect} from 'react'\nimport {Box, Color, Text} from 'ink'\nimport PropTypes from 'prop-types'\nimport globby from 'globby'\nimport {Observable} from 'rxjs'\n\n/** application */\nimport {store} from '../store'\n\n/**\n * Search\n *\n * @prop {array}  glob\n * @prop {string} label\n */\nconst List = ({glob, label}) => {\n  const {dispatch} = useContext(store)\n\n  /**\n   * Return an observable emitting\n   * budfile matches.\n   */\n  const [search] = useState(\n    new Observable(async observer => {\n      observer.next({status: 'Searching'})\n\n      const results = await globby(glob)\n\n      observer.next({\n        results: results ? results : null,\n      })\n\n      observer.complete()\n    }),\n  )\n\n  /**\n   * Once there is an observer available to subscribe to,\n   * use what it emits to set various component states.\n   */\n  const [status, setStatus] = useState(null)\n  const [complete, setComplete] = useState(null)\n  const [results, setResults] = useState(null)\n  useEffect(() => {\n    search?.subscribe({\n      next: next => {\n        next.status && setStatus(next.status)\n        next.results && setResults(next.results)\n      },\n      complete: () => setComplete(true),\n      error: () => setComplete(true),\n    })\n  }, [search])\n\n  /**\n   * Mirror any changes to component state\n   * in the global store.\n   */\n  useEffect(() => {\n    complete &&\n      dispatch({\n        type: 'SET',\n        key: 'status',\n        value: 'complete',\n      })\n\n    dispatch({\n      type: 'SEARCH_RESULTS',\n      label,\n      results,\n      complete,\n      status,\n    })\n  }, [results, status, complete])\n\n  /** Format matched files for display */\n  const displayFile = file => basename(file).replace('.bud.js', '')\n\n  /**\n   * Render\n   */\n  return (\n    <Box flexDirection=\"column\">\n      {results?.map((result, id) => (\n        <Box key={id} flexDirection=\"row\" textWrap=\"truncate-start\">\n          <Text>\n            <Color gray>yarn generate </Color>\n          </Text>\n          <Text>{`${displayFile(result)}`}</Text>\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nList.propTypes = {\n  glob: PropTypes.array.isRequired,\n  label: PropTypes.string,\n}\n\nList.defaultProps = {\n  label: 'List',\n}\n\nexport default List\n","import React from 'react'\nimport {Box} from 'ink'\n\n/** application */\nimport {StateProvider} from '../../src/bud/store'\nimport Banner from '../../src/bud/components/Banner'\nimport List from '../../src/bud/containers/List'\n\nconst cwd = process.cwd()\n\n/**\n * Scaffold candidate locations\n */\nconst globs = {\n  project: `${cwd}/.bud/budfiles/**/*.bud.js`,\n  plugins: `${cwd}/node_modules/**/bud-plugin-*/**/*.bud.js`,\n  core: `${cwd}/node_modules/@roots/bud/src/budfiles/**/**.bud.js`,\n}\n\n/**\n * List\n *\n * @prop {string} request\n */\nconst ListView = () => {\n  return (\n    <Box flexDirection={'column'}>\n      <Banner label={'bud list'} />\n      <List glob={[globs.project, globs.plugins, globs.core]} />\n    </Box>\n  )\n}\n\n/** Command: bud list */\n/// List generators\nconst ListCLI = ({request}) => (\n  <StateProvider>\n    <ListView request={request} />\n  </StateProvider>\n)\n\nexport default ListCLI\n"]}