{"version":3,"sources":["../src/bud/compiler/helpers/index.js","../src/bud/compiler/index.js","../src/bud/data/index.js","../src/bud/util/command.js","../src/bud/util/index.js","../src/bud/actions/addDependencies.js","../src/bud/actions/compile.js","../src/bud/actions/copy.js","../src/bud/actions/install.js","../src/bud/actions/json.js","../src/bud/actions/mkDir.js","../src/bud/actions/scaffold.js","../src/bud/actions/index.js","../src/bud/prettier/inferParser.js","../prettier.config.js","../src/bud/prettier/format.js","../src/bud/prettier/index.js","../src/bud/index.js","../src/components/Banner.js","../src/components/Tasks.js","../src/components/Error.js","../src/components/App.js","init.js"],"names":["helpers","data","helper","fn","Array","prototype","slice","call","arguments","object","component","options","indexOf","inverse","components","hasInstance","forEach","makeCompiler","sprout","handlebars","registerHelpers","push","registerHelper","compiler","make","path","compile","makeData","setData","key","value","command","config","cmd","execa","makeUtil","addDependencies","task","observer","util","installation","next","repo","error","dev","pkgs","join","stdout","on","status","then","complete","prettier","src","templateDir","dest","template","projectDir","parser","format","copy","install","json","require","file","output","merge","err","mkDir","JSON","stringify","scaffold","actions","paths","pipe","Observable","subscribe","register","action","handle","callback","parsers","js","jsx","graphql","css","md","html","htm","ts","tsx","yml","yaml","less","inferParser","ext","split","length","module","exports","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","overrides","files","content","bud","configData","dataSrc","cwd","registerActions","tasks","Banner","label","Tasks","noClear","write","Error","message","process","App","outDir","prompts","setPrompts","projectConfig","project","devConfig","budSubscription","setBudSubscription","setStatus","setError","setComplete","exit","unsubscribe","propTypes","PropTypes","string","bool","defaultProps","budfileDir","__dirname","Init","props","budfile","setBudfile","setTemplateDir","setSprout","setLabel","positionalArgs"],"mappings":"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","file":"init.js","sourceRoot":"../../commands","sourcesContent":["/**\n * Templating helpers\n */\nconst helpers = data => [\n  {\n    helper: 'array',\n    fn: function () {\n      return Array.prototype.slice.call(arguments, 0, -1)\n    },\n  },\n  {\n    helper: 'has',\n    fn: function (object, component, options) {\n      if (data[object].indexOf(component) > -1) {\n        return options.fn(this)\n      }\n\n      return options.inverse(this)\n    },\n  },\n  {\n    helper: 'hasAny',\n    fn: function (object, components, options) {\n      let hasInstance = false\n\n      if (components) {\n        components.forEach(component => {\n          if (data[object].indexOf(component) > -1) {\n            hasInstance = true\n          }\n        })\n      }\n\n      return hasInstance ? options.fn(this) : options.inverse(this)\n    },\n  },\n  {\n    helper: 'raw',\n    fn: function (options) {\n      return options.fn()\n    },\n  },\n]\n\nexport default helpers\n","import handlebars from 'handlebars'\nimport helpers from './helpers'\nimport handlebarsHelpers from 'handlebars-helpers'\n\n/**\n * Compiler.\n *\n * @param {handlebars} handlebars\n */\nconst makeCompiler = ({sprout, data}) => {\n  handlebarsHelpers({handlebars})\n\n  sprout.registerHelpers &&\n    sprout.registerHelpers.forEach(helper => {\n      helpers.push(helper)\n    })\n\n  helpers(data).forEach(({helper, fn}) => {\n    handlebars.registerHelper(helper, fn)\n  })\n\n  return {\n    compiler: handlebars,\n\n    /**\n     * Make template.\n     *\n     * @param {string} path\n     */\n    make: function (path) {\n      return this.compiler.compile(path)\n    },\n  }\n}\n\nexport default makeCompiler\n","/**\n * Make data\n *\n * @param  {object} data\n * @return {object}\n */\nconst makeData = data => ({\n  ...data,\n  setData: function ({key, value}) {\n    this[`${key}`] = value\n  },\n})\n\nexport default makeData\n","import execa from 'execa'\n\n/**\n * Task runner\n *\n * @param  {object} config\n *\n * @return {func}\n */\nconst command = config => {\n  return cmd => execa.command(cmd, config.execa)\n}\n\nexport default command\n","import command from './command'\n\n/**\n * Make util\n *\n * @param  {object} config\n * @return {object}\n */\nconst makeUtil = config => ({\n  command: command(config),\n})\n\nexport default makeUtil\n","/**\n * Action: Add dependencies\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   util\n *\n * @return {void}\n */\nconst addDependencies = async ({task, observer, util}) => {\n  let installation\n\n  observer.next(`Installing packages from ${task.repo}...`)\n\n  if (task.repo !== 'npm' && task.repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (task.repo == 'npm') {\n    installation = util.command(`yarn add ${task.dev ? `-D` : ``} ${task.pkgs.join(' ')}`)\n  }\n\n  if (task.repo == 'packagist') {\n    installation = util.command(\n      `composer require ${task.pkgs.join(' ')} ${task.dev ? `--development` : ``}`,\n    )\n  }\n\n  installation.stdout.on('data', status => {\n    observer.next(status)\n  })\n\n  installation.then(() => observer.complete())\n}\n\nexport default addDependencies\n","import {join} from 'path'\nimport {outputFile, readFile} from 'fs-extra'\n\n/**\n * Action: template\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   data\n * @param  {object}   config\n * @param  {object}   util\n * @param  {object}   prettier\n * @param  {object}   compiler\n * @return {void}\n */\nconst compile = async ({task, observer, data, config, prettier, compiler}) => {\n  const src = await readFile(join(config.templateDir, task.src), 'utf8')\n  const dest = compiler.make(task.dest)(data)\n  const template = compiler.make(src)(data)\n\n  await outputFile(\n    ...[\n      join(config.projectDir, dest),\n      task.parser ? prettier.format(template, task.parser) : template,\n    ],\n  )\n\n  observer.complete()\n}\n\nexport default compile\n","import {join} from 'path'\nimport {copy as fsCopy} from 'fs-extra'\n\n/**\n * Action: copy\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n *\n * @return {void}\n */\nconst copy = async ({task, observer, config}) => {\n  const src = join(config.templateDir, task.src)\n  const dest = join(config.projectDir, task.dest)\n\n  await fsCopy(src, dest)\n\n  observer.complete()\n}\n\nexport default copy\n","/**\n * Action: Install from package files\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n *\n * @return {Observable}\n */\nconst install = async ({task, observer, util}) => {\n  let installation\n\n  observer.next(`Installing packages from ${task.repo}...`)\n\n  if (task.repo !== 'npm' && task.repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (task.repo == 'npm') {\n    installation = util.command(`yarn`)\n  }\n\n  if (task.repo == 'packagist') {\n    installation = util.command(`composer install`)\n  }\n\n  installation.stdout.on('data', status => {\n    observer.next(status)\n  })\n\n  installation.then(() => observer.complete())\n}\n\nexport default install\n","import {outputFile} from 'fs-extra'\n\n/**\n * Action: Manipulate project JSON\n *\n * @prop {object}   task\n * @prop {Observer} observer\n * @prop {Prettier} prettier\n */\nconst json = async function ({task, observer, prettier, config}) {\n  const json = require(`${config.projectDir}/${task.file}`)\n  observer.next(`Writing JSON to ${task.file}`)\n\n  try {\n    const output = task.merge(json)\n\n    await outputFile(`${config.projectDir}/${task.file}`, prettier.format(output, 'json'))\n\n    observer.complete()\n  } catch (err) {\n    observer.error(`There was a problem writing to ${task.file}`)\n  }\n}\n\nexport default json\n","import {join} from 'path'\nimport {ensureDir} from 'fs-extra'\n\n/**\n * Make directory\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n * @param  {object}   data\n * @param  {object}   compiler\n *\n * @return {void}\n */\nconst mkDir = async ({task, observer, config, data, compiler}) => {\n  const path = join(config.projectDir, compiler.make(task.path)(data))\n\n  try {\n    await ensureDir(path).then(() => {\n      observer.next()\n    })\n  } catch (error) {\n    observer.error(`actions.mkDir: ${JSON.stringify(error)}`)\n  }\n}\n\nexport default mkDir\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Scaffold directories\n *\n * @param  {array} paths\n * @return {Observable}\n */\nconst scaffold = ({task, observer, config, data, compiler, actions}) => {\n  observer.next(`Creating directories`)\n\n  return from(task.paths)\n    .pipe(\n      concatMap(path => {\n        return new Observable(async observer => {\n          try {\n            await actions.mkDir({\n              task: {path},\n              config,\n              data,\n              compiler,\n              observer,\n            })\n\n            observer.complete()\n          } catch (error) {\n            observer.error(`error: thrown in actions.scaffold`)\n          }\n        })\n      }),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default scaffold\n","import addDependencies from './addDependencies'\nimport compile from './compile'\nimport copy from './copy'\nimport install from './install'\nimport json from './json'\nimport mkDir from './mkDir'\nimport scaffold from './scaffold'\n\n/**\n * Actions\n */\nconst actions = {\n  addDependencies,\n  compile,\n  copy,\n  install,\n  json,\n  mkDir,\n  scaffold,\n  register: function (action) {\n    this[`${action.handle}`] = action.callback\n  },\n}\n\nexport default actions\n","/**\n * Prettier parsers.\n */\nconst parsers = {\n  js: 'babel',\n  jsx: 'babel',\n  graphql: 'graphql',\n  css: 'css',\n  json: 'json',\n  md: 'markdown',\n  html: 'html',\n  htm: 'html',\n  ts: 'typescript',\n  tsx: 'typescript',\n  yml: 'yaml',\n  yaml: 'yaml',\n  less: 'less',\n}\n\n/**\n * Infer parser.\n *\n * @param {string} file\n */\nconst inferParser = async function (file) {\n  const ext = file.split('.')[file.split('.').length - 1]\n\n  return parsers[`${ext}`] ?? null\n}\n\nexport default inferParser\n","module.exports = {\n  arrowParens: 'avoid',\n  bracketSpacing: false,\n  tabWidth: 2,\n  printWidth: 90,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: false,\n  trailingComma: 'all',\n  semi: false,\n  overrides: [\n    {\n      files: ['*.md'],\n      options: {\n        parser: 'markdown',\n      },\n    },\n    {\n      files: ['*.json'],\n      options: {\n        parser: 'json',\n      },\n    },\n  ],\n}\n","import prettier from 'prettier'\nconst config = require('../../../prettier.config.js')\n\n/**\n * Format\n *\n * @param  {object|string} content\n * @param  {parser} string\n * @return {string}\n */\nconst format = (content, parser) => {\n  content = typeof content !== 'string' ? JSON.stringify(content) : content\n\n  return prettier.format(content, {\n    ...config,\n    parser: parser || 'babel',\n  })\n}\n\nexport default format\n","import inferParser from './inferParser'\nimport format from './format'\n\n/**\n * Prettier\n */\nconst prettier = {\n  format,\n  inferParser,\n}\n\nexport default prettier\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Bud componentry\n */\nimport makeCompiler from './compiler'\nimport makeData from './data'\nimport makeUtil from './util'\nimport actions from './actions'\nimport prettier from './prettier'\n\n/**\n * Bud core\n *\n * @param {string} outDir\n * @param {object} configData\n * @param {object} data\n * @param {object} sprout\n * @param {string} templateDir\n * @param {bool}   skipInstall\n */\nconst bud = ({projectDir, configData, data: dataSrc, sprout, templateDir}) => {\n  const config = {\n    projectDir,\n    templateDir,\n    ...configData,\n    execa: {\n      cwd: projectDir,\n    },\n  }\n\n  const data = makeData(dataSrc)\n  const util = makeUtil(config)\n  const compiler = makeCompiler({sprout, data})\n\n  sprout.registerActions &&\n    sprout.registerActions.forEach(action => {\n      actions.register(action)\n    })\n\n  return new Observable(observer => {\n    from(sprout.tasks)\n      .pipe(\n        concatMap(function (task) {\n          return new Observable(async observer => {\n            observer.next(task.action)\n\n            actions[task.action]({\n              task,\n              observer,\n              config,\n              actions,\n              compiler,\n              prettier,\n              util,\n              data,\n            })\n          })\n        }),\n      )\n      .subscribe({\n        next: next => observer.next(next),\n        error: error => observer.error(error),\n        complete: complete => observer.complete(complete),\n      })\n  })\n}\n\nexport default bud\n","import React from 'react'\nimport {Box, Color, Text} from 'ink'\nimport Link from 'ink-link'\n\n/**\n * Banner component.\n *\n * @prop {string} label\n */\nconst Banner = ({label}) => (\n  <Box marginBottom={1} flexDirection=\"row\" justifyContent=\"space-between\">\n    {label && <Text>{label}</Text>}\n    <Box flexDirection=\"row\">\n      <Text>{`🌱`}</Text>\n      <Text bold>\n        <Link url=\"https://roots.io/bud\">\n          <Color green>{'  Bud'}</Color>\n        </Link>\n      </Text>\n    </Box>\n  </Box>\n)\n\nexport default Banner\n","import React, {useEffect} from 'react'\nimport {Box, Color, Text, useStdout} from 'ink'\nimport Spinner from 'ink-spinner'\n\n/**\n * Tasks\n *\n * @prop {object} data\n * @prop {object} status\n * @prop {bool}   complete\n * @prop {bool}   noClear\n */\nconst Tasks = ({data, status, complete, noClear}) => {\n  const {stdout} = useStdout()\n  useEffect(() => {\n    data && !noClear && stdout.write('\\x1B[2J\\x1B[0f')\n  }, [data])\n\n  return status ? (\n    <Box>\n      {complete ? (\n        <Color green>⚡️ All set.</Color>\n      ) : (\n        <Text>\n          <Color green>\n            <Spinner type=\"dots\" />\n          </Color>\n          {` ${status}`}\n        </Text>\n      )}\n    </Box>\n  ) : null\n}\n\nexport default Tasks\n","import React from 'react'\nimport {Box, Color} from 'ink'\n\n/**\n * Error\n */\nconst Error = ({message}) => (\n  <Box>\n    <Color red>💥 {JSON.stringify(message)}</Color>\n  </Box>\n)\n\nexport default Error\n","import {join} from 'path'\nimport {existsSync} from 'fs'\nimport React, {useState, useEffect} from 'react'\nimport {Box, useApp} from 'ink'\nimport PropTypes from 'prop-types'\nimport {prompt} from 'enquirer'\nimport bud from '../bud'\n\nimport Banner from './Banner'\nimport Tasks from './Tasks'\nimport Error from './Error'\n\nconst cwd = process.cwd()\n\n/**\n * App\n *\n * @prop {string} label\n * @prop {string} templateDir\n * @prop {object} sprout\n * @prop {string} outDir\n * @prop {object} values\n * @prop {object} children\n * @prop {bool}   noClear\n */\nconst App = ({\n  label,\n  templateDir,\n  sprout,\n  outDir,\n  noClear,\n}) => {\n  /**\n   * source bud.config.json\n   */\n  const config = join(cwd, '.bud/bud.config.json')\n  const [configData] = useState(existsSync(config) ? require(config) : null)\n\n  /**\n   * Assemble data from various sources\n   * - config file\n   * - prompts (enquirer)\n   */\n  const [prompts, setPrompts] = useState(sprout.prompts ? sprout.prompts : null)\n  const [data, setData] = useState(null)\n  useEffect(() => {\n    if (prompts) {\n      prompt(prompts).then(data => {\n        setPrompts(null)\n        const projectConfig = configData && configData.project ? configData.project : []\n        const devConfig = configData && configData.dev ? configData.dev : []\n\n        setData({...projectConfig,...devConfig,...data})\n      })\n    } else {\n      setPrompts(null)\n      const projectConfig = configData && configData.project ? configData.project : []\n      const devConfig = configData && configData.dev ? configData.dev : []\n\n      setData({...projectConfig,...devConfig})\n    }\n  }, [])\n\n  /**\n   * Observer subscribe\n   */\n  const [budSubscription, setBudSubscription] = useState(false)\n  const [status, setStatus] = useState(null)\n  const [error, setError] = useState(null)\n  const [complete, setComplete] = useState(false)\n  useEffect(() => {\n    data &&\n      !budSubscription &&\n      setBudSubscription(\n        bud({\n          configData,\n          data: data ?? {},\n          templateDir,\n          sprout,\n          projectDir: join(cwd, outDir),\n        }).subscribe({\n          next: next => setStatus(next),\n          error: error => setError(error),\n          complete: () => setComplete(true),\n        }),\n      )\n  }, [data, status])\n\n  /**\n   * Observer unsubscribe.\n   */\n  const {exit} = useApp()\n  useEffect(() => {\n    complete &&\n      (async () => {\n        await budSubscription.unsubscribe()\n        exit()\n      })()\n  }, [complete, budSubscription])\n\n  /**\n   * Render observable updates and errors\n   */\n  return (\n    <Box flexDirection=\"column\" justifyContent=\"flex-start\" padding={1}>\n      <Banner label={label} />\n      <Tasks data={data} status={status} complete={complete} noClear={noClear} />\n      {error && <Error message={error} />}\n    </Box>\n  )\n}\n\nApp.propTypes = {\n  label: PropTypes.string,\n  sprout: PropTypes.object,\n  noClear: PropTypes.bool,\n}\n\nApp.defaultProps = {\n  sprout: {\n    actions: [],\n    label: 'Bud',\n    prompts: [],\n  },\n  noClear: false,\n}\n\nexport default App\n","import {resolve} from 'path'\nimport React, {useState, useEffect} from 'react'\nimport {Box} from 'ink'\nimport PropTypes from 'prop-types'\nimport Spinner from 'ink-spinner'\n\nimport App from './../src/components/App'\n\n/** Constants */\nconst budfileDir = resolve(__dirname, './../../src/budfiles/init')\n\n/** Command: bud init */\n/// Create a new project\nconst Init = props => {\n  const [projectDir] = useState(props.projectDir)\n  const [budfile, setBudfile] = useState(null)\n  const [templateDir, setTemplateDir] = useState(null)\n  useEffect(() => {\n    if (budfileDir) {\n      setBudfile(`${budfileDir}/init.bud`)\n      setTemplateDir(`${budfileDir}/templates`)\n    }\n  }, [budfileDir])\n\n  const [sprout, setSprout] = useState(null)\n  useEffect(() => {\n    budfile && setSprout(require(budfile))\n  }, [budfile])\n\n  const [label, setLabel] = useState('Bud CLI')\n  useEffect(() => {\n    sprout && setLabel(sprout.label)\n  }, [sprout])\n\n  return sprout ? (\n    <App\n      label={label}\n      outDir={projectDir || ''}\n      sprout={sprout}\n      templateDir={templateDir}\n    />\n  ) : (\n    <Box>\n      <Spinner /> Loading\n    </Box>\n  )\n}\n\nInit.propTypes = {\n  /// Output directory\n  projectDir: PropTypes.string,\n}\n\nInit.defaultProps = {\n  budfileDir: budfileDir,\n}\n\nInit.positionalArgs = ['projectDir']\n\nexport default Init\n"]}