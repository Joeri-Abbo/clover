{"version":3,"sources":["../src/bud/store.js","../src/bud/containers/Runner/tasks/addDependencies.js","../src/bud/containers/Runner/tasks/install.js","../src/bud/containers/Runner/helpers.js","../src/bud/containers/Runner/Process.js","../src/bud/containers/Runner/Prettify.js","../src/bud/containers/Runner/Write.js","../src/bud/containers/Runner/tasks/json.js","../src/bud/containers/Runner/tasks/scaffold.js","../src/bud/containers/Runner/Read.js","../src/bud/containers/Runner/tasks/template.js","../src/bud/containers/Runner/index.js","../src/bud/containers/Prompts.js","../src/bud/components/Status.js","../src/bud/components/Error.js","../src/bud/index.js","../src/bud/components/Banner.js","init.js"],"names":["cwd","process","budConfig","require","store","writeDir","projectConfig","label","prompts","data","status","error","complete","ready","search","core","results","plugins","project","Provider","StateProvider","children","state","dispatch","action","type","key","value","execaOptions","addDependencies","task","repo","pkgs","dev","observer","installation","next","execa","command","join","stdout","on","then","install","code","helpers","helper","fn","Array","prototype","slice","call","arguments","object","component","options","indexOf","inverse","components","hasInstance","forEach","Process","string","sprout","handlebars","registerHelper","registerHelpers","compile","Prettify","extension","parsers","js","jsx","graphql","css","json","md","html","htm","ts","tsx","yml","yaml","less","parser","config","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","prettified","Write","target","CWD","file","merge","output","prettyString","err","scaffold","paths","pipe","path","Observable","pathTemplate","dirPath","subscribe","Read","console","template","templateDir","prettier","split","length","Runner","module","setTemplateDir","setWriteDir","jobs","setStatus","setError","setComplete","actions","JSON","stringify","Prompts","setPrompts","Status","propTypes","bool","defaultProps","Error","message","Bud","moduleReady","outDir","setSprout","description","Banner","initModule","__dirname","strings","title","Init","projectDir","setLabel","InitCLI","props","PropTypes","positionalArgs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAACD,GAAR,EAAZ;AAEA;;AACA,IAAIE,SAAJ;;AACA,IAAI;AACFA,EAAAA,SAAS,GAAGC,OAAO,CAAE,GAAEF,OAAO,CAACD,GAAR,EAAc,uBAAlB,CAAnB;AACD,CAFD,CAEE,MAAM;AACNE,EAAAA,SAAS,GAAG,EAAZ;AACD;AAED;;;;;AAGO,MAAME,KAAK,GAAG,0BAAc;AACjCJ,EAAAA,GADiC;AAEjCK,EAAAA,QAAQ,EAAEL,GAFuB;AAGjCM,EAAAA,aAAa,EAAE,EACb,GAAGJ;AADU,GAHkB;AAMjCK,EAAAA,KAAK,EAAE,6CAN0B;AAOjCC,EAAAA,OAAO,EAAE,IAPwB;AAQjCC,EAAAA,IAAI,EAAE,IAR2B;AASjCC,EAAAA,MAAM,EAAE,IATyB;AAUjCC,EAAAA,KAAK,EAAE,IAV0B;AAWjCC,EAAAA,QAAQ,EAAE,KAXuB;AAYjCC,EAAAA,KAAK,EAAE,KAZ0B;AAajCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJN,MAAAA,MAAM,EAAE,IAFJ;AAGJE,MAAAA,QAAQ,EAAE;AAHN,KADA;AAMNK,IAAAA,OAAO,EAAE;AACPD,MAAAA,OAAO,EAAE,IADF;AAEPN,MAAAA,MAAM,EAAE,IAFD;AAGPE,MAAAA,QAAQ,EAAE;AAHH,KANH;AAWNM,IAAAA,OAAO,EAAE;AACPF,MAAAA,OAAO,EAAE,IADF;AAEPN,MAAAA,MAAM,EAAE,IAFD;AAGPE,MAAAA,QAAQ,EAAE;AAHH;AAXH;AAbyB,CAAd,CAAd;;AAgCP,MAAM;AAACO,EAAAA;AAAD,IAAaf,KAAnB;AAEA;;;;AAGO,MAAMgB,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB,uBAAW,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACtD,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,KAAL;AAAY;AACV,gBAAM;AAACC,YAAAA,GAAD;AAAMC,YAAAA;AAAN,cAAeH,MAArB;AACA,iBAAO,EACL,GAAGF,KADE;AAEL,aAACI,GAAD,GAAOC;AAFF,WAAP;AAID;AAPH;;AASA,YAAQH,MAAM,CAACC,IAAf;AACE,WAAK,WAAL;AAAkB;AAChB,gBAAM;AAAClB,YAAAA;AAAD,cAAUiB,MAAhB;AACA,iBAAO,EACL,GAAGF,KADE;AAELf,YAAAA;AAFK,WAAP;AAID;;AACD,WAAK,aAAL;AAAoB;AAClB,gBAAM;AAACC,YAAAA;AAAD,cAAYgB,MAAlB;AACA,iBAAO,EACL,GAAGF,KADE;AAELd,YAAAA;AAFK,WAAP;AAID;;AACD,WAAK,UAAL;AAAiB;AACf,gBAAM;AAACC,YAAAA;AAAD,cAASe,MAAf;AACA,iBAAO,EACL,GAAGF,KADE;AAELb,YAAAA,IAAI,EAAE,EACJ,GAAGa,KAAK,CAACb,IADL;AAEJ,iBAAGA;AAFC;AAFD,WAAP;AAOD;;AACD,WAAK,WAAL;AAAkB;AAChB,gBAAM;AAACI,YAAAA;AAAD,cAAUW,MAAhB;AACA,iBAAO,EACL,GAAGF,KADE;AAELT,YAAAA;AAFK,WAAP;AAID;;AACD,WAAK,YAAL;AAAmB;AACjB,gBAAM;AAACH,YAAAA;AAAD,cAAWc,MAAjB;AACA,iBAAO,EACL,GAAGF,KADE;AAELZ,YAAAA;AAFK,WAAP;AAID;;AACD,WAAK,WAAL;AAAkB;AAChB,gBAAM;AAACC,YAAAA;AAAD,cAAUa,MAAhB;AACA,iBAAO,EACL,GAAGF,KADE;AAELX,YAAAA;AAFK,WAAP;AAID;;AACD,WAAK,cAAL;AAAqB;AACnB,gBAAM;AAACC,YAAAA;AAAD,cAAaY,MAAnB;AACA,iBAAO,EACL,GAAGF,KADE;AAELV,YAAAA;AAFK,WAAP;AAID;;AACD,WAAK,gBAAL;AAAuB;AACrB,gBAAM;AAACI,YAAAA,OAAD;AAAUN,YAAAA,MAAV;AAAkBE,YAAAA;AAAlB,cAA8BY,MAApC;AACA,iBAAO,EACL,GAAGF,KADE;AAELR,YAAAA,MAAM,EAAE,EACN,GAAGQ,KAAK,CAACR,MADH;AAEN,eAAE,GAAEU,MAAM,CAACjB,KAAM,EAAjB,GAAqB;AACnBS,gBAAAA,OADmB;AAEnBN,gBAAAA,MAFmB;AAGnBE,gBAAAA;AAHmB;AAFf;AAFH,WAAP;AAWD;AAlEH;AAoED,GA9EyB,EA8EvBR,KA9EuB,CAA1B;AAgFA,sBACE,6BAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAACkB,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAAjB,KACGF,QADH,CADF;AAKD,CAtFM;;;;;;;;;;;ACpDP;;;;AAEA,MAAMO,YAAY,GAAG;AAAC5B,EAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR;AAAN,CAArB;AAEA;;;;AAGA,MAAM6B,eAAe,GAAG,gBAAgB;AACtCC,EAAAA,IAAI,EAAE;AAACC,IAAAA,IAAD;AAAOC,IAAAA,IAAP;AAAaC,IAAAA;AAAb,GADgC;AAEtCC,EAAAA;AAFsC,CAAhB,EAGrB;AACD,MAAIC,YAAJ;AAEAD,EAAAA,QAAQ,CAACE,IAAT,CAAc;AAAC1B,IAAAA,MAAM,EAAG,4BAA2BqB,IAAK;AAA1C,GAAd;;AAEA,MAAIA,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,WAA/B,EAA4C;AAC1CG,IAAAA,QAAQ,CAACvB,KAAT,CAAgB,mCAAhB;AACD;;AAED,MAAIoB,IAAI,IAAI,KAAZ,EAAmB;AACjBI,IAAAA,YAAY,GAAGE,eAAMC,OAAN,CACZ,YAAWL,GAAG,GAAI,IAAJ,GAAW,EAAE,IAAGD,IAAI,CAACO,IAAL,CAAU,GAAV,CAAe,EADjC,EAEbX,YAFa,CAAf;AAID;;AAED,MAAIG,IAAI,IAAI,WAAZ,EAAyB;AACvBI,IAAAA,YAAY,GAAGE,eAAMC,OAAN,CACZ,oBAAmBN,IAAI,CAACO,IAAL,CAAU,GAAV,CAAe,IAAGN,GAAG,GAAI,eAAJ,GAAsB,EAAE,EADpD,EAEbL,YAFa,CAAf;AAID;;AAEDO,EAAAA,YAAY,CAACK,MAAb,CAAoBC,EAApB,CAAuB,MAAvB,EAA+B/B,MAAM,IAAI;AACvCwB,IAAAA,QAAQ,CAACE,IAAT,CAAc;AAAC1B,MAAAA;AAAD,KAAd;AACD,GAFD;AAIAyB,EAAAA,YAAY,CAACO,IAAb,CAAkB,MAAMR,QAAQ,CAACtB,QAAT,EAAxB;AACD,CA/BD;;eAiCeiB;;;;;;;;;;ACxCf;;;;AAEA,MAAMD,YAAY,GAAG;AAAC5B,EAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR;AAAN,CAArB;;AAEA,MAAM2C,OAAO,GAAG,OAAO;AAACb,EAAAA,IAAI,EAAE;AAACC,IAAAA;AAAD,GAAP;AAAeG,EAAAA;AAAf,CAAP,KAAoC;AAClD,MAAIC,YAAJ;AAEAD,EAAAA,QAAQ,CAACE,IAAT,CAAc;AAAC1B,IAAAA,MAAM,EAAG,4BAA2BqB,IAAK;AAA1C,GAAd;;AAEA,MAAIA,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,WAA/B,EAA4C;AAC1CG,IAAAA,QAAQ,CAACvB,KAAT,CAAgB,mCAAhB;AACD;;AAED,MAAIoB,IAAI,IAAI,KAAZ,EAAmB;AACjBI,IAAAA,YAAY,GAAGE,eAAMC,OAAN,CAAe,MAAf,EAAsBV,YAAtB,CAAf;AACD;;AAED,MAAIG,IAAI,IAAI,WAAZ,EAAyB;AACvBI,IAAAA,YAAY,GAAGE,eAAMC,OAAN,CAAe,kBAAf,EAAkCV,YAAlC,CAAf;AACD;;AAEDO,EAAAA,YAAY,CAACK,MAAb,CAAoBC,EAApB,CAAuB,MAAvB,EAA+B/B,MAAM,IAAI;AACvCwB,IAAAA,QAAQ,CAACE,IAAT,CAAc;AAAC1B,MAAAA,MAAM,EAAEA,MAAM,CAACkC;AAAhB,KAAd;AACD,GAFD;AAIAT,EAAAA,YAAY,CAACO,IAAb,CAAkB,MAAMR,QAAQ,CAACtB,QAAT,EAAxB;AACD,CAtBD;;eAwBe+B;;;;;;;;;;AC5Bf;;;AAGA,MAAME,OAAO,GAAGpC,IAAI,IAAI,CACtB;AACEqC,EAAAA,MAAM,EAAE,OADV;AAEEC,EAAAA,EAAE,EAAE,YAAY;AACd,WAAOC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,EAAyC,CAAC,CAA1C,CAAP;AACD;AAJH,CADsB,EAOtB;AACEN,EAAAA,MAAM,EAAE,KADV;AAEEC,EAAAA,EAAE,EAAE,UAAUM,MAAV,EAAkBC,SAAlB,EAA6BC,OAA7B,EAAsC;AACxC,QAAI9C,IAAI,CAAC4C,MAAD,CAAJ,CAAaG,OAAb,CAAqBF,SAArB,IAAkC,CAAC,CAAvC,EAA0C;AACxC,aAAOC,OAAO,CAACR,EAAR,CAAW,IAAX,CAAP;AACD;;AAED,WAAOQ,OAAO,CAACE,OAAR,CAAgB,IAAhB,CAAP;AACD;AARH,CAPsB,EAiBtB;AACEX,EAAAA,MAAM,EAAE,QADV;AAEEC,EAAAA,EAAE,EAAE,UAAUM,MAAV,EAAkBK,UAAlB,EAA8BH,OAA9B,EAAuC;AACzC,QAAII,WAAW,GAAG,KAAlB;;AAEA,QAAID,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACE,OAAX,CAAmBN,SAAS,IAAI;AAC9B,YAAI7C,IAAI,CAAC4C,MAAD,CAAJ,CAAaG,OAAb,CAAqBF,SAArB,IAAkC,CAAC,CAAvC,EAA0C;AACxCK,UAAAA,WAAW,GAAG,IAAd;AACD;AACF,OAJD;AAKD;;AAED,WAAOA,WAAW,GACdJ,OAAO,CAACR,EAAR,CAAW,IAAX,CADc,GAEdQ,OAAO,CAACE,OAAR,CAAgB,IAAhB,CAFJ;AAGD;AAhBH,CAjBsB,EAmCtB;AACEX,EAAAA,MAAM,EAAE,KADV;AAEEC,EAAAA,EAAE,EAAE,UAAUQ,OAAV,EAAmB;AACrB,WAAOA,OAAO,CAACR,EAAR,EAAP;AACD;AAJH,CAnCsB,CAAxB;;eA2CeF;;;;;;;;;;AC3Cf;;AACA;;AACA;;;;AALA;;;;AAOA;;;;;;AAMA,MAAMgB,OAAO,GAAG,OAAO;AAAC3B,EAAAA,QAAD;AAAW4B,EAAAA,MAAX;AAAmBC,EAAAA,MAAnB;AAA2BtD,EAAAA;AAA3B,CAAP,KAA4C;AAAA;;AAC1D,kCAAkB;AAACuD,IAAAA,UAAU,EAAVA;AAAD,GAAlB;AACA,wBAAQvD,IAAR,EAAcmD,OAAd,CAAsB,CAAC;AAACd,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,KAAkB;AACtCiB,wBAAWC,cAAX,CAA0BnB,MAA1B,EAAkCC,EAAlC;AACD,GAFD;AAIAgB,EAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,qCAAAA,MAAM,CAAEG,eAAR,gFAAyBN,OAAzB,CAAiC,CAAC;AAACd,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,KAAkB;AACjDiB,wBAAWC,cAAX,CAA0BnB,MAA1B,EAAkCC,EAAlC;AACD,GAFD;AAIAb,EAAAA,QAAQ,CAACE,IAAT,CAAc;AAAC1B,IAAAA,MAAM,EAAG;AAAV,GAAd;AACA,SAAO,MAAMsD,oBAAWG,OAAX,CAAmBL,MAAnB,EAA2BrD,IAA3B,CAAb;AACD,CAZD;;eAceoD;;;;;;;;;;AC3Bf;;AAEA;;;;;;;AAOA,MAAMO,QAAQ,GAAG,OAAO;AAAClC,EAAAA,QAAD;AAAW4B,EAAAA,MAAX;AAAmBO,EAAAA;AAAnB,CAAP,KAAyC;AACxD,QAAMC,OAAO,GAAG;AACdC,IAAAA,EAAE,EAAE,OADU;AAEdC,IAAAA,GAAG,EAAE,OAFS;AAGdC,IAAAA,OAAO,EAAE,SAHK;AAIdC,IAAAA,GAAG,EAAE,KAJS;AAKdC,IAAAA,IAAI,EAAE,MALQ;AAMdC,IAAAA,EAAE,EAAE,UANU;AAOdC,IAAAA,IAAI,EAAE,MAPQ;AAQdC,IAAAA,GAAG,EAAE,MARS;AASdC,IAAAA,EAAE,EAAE,YATU;AAUdC,IAAAA,GAAG,EAAE,YAVS;AAWdC,IAAAA,GAAG,EAAE,MAXS;AAYdC,IAAAA,IAAI,EAAE,MAZQ;AAadC,IAAAA,IAAI,EAAE;AAbQ,GAAhB;AAgBA,QAAMC,MAAM,GAAGd,OAAO,CAAE,GAAED,SAAU,EAAd,CAAtB;AAEA,QAAMgB,MAAM,GAAG;AACbC,IAAAA,WAAW,EAAE,OADA;AAEbC,IAAAA,cAAc,EAAE,KAFH;AAGbC,IAAAA,QAAQ,EAAE,CAHG;AAIbC,IAAAA,UAAU,EAAE,GAJC;AAKbC,IAAAA,WAAW,EAAE,IALA;AAMbC,IAAAA,kBAAkB,EAAE,IANP;AAObC,IAAAA,OAAO,EAAE,KAPI;AAQbC,IAAAA,aAAa,EAAE,KARF;AASbC,IAAAA,IAAI,EAAE,KATO;AAUbV,IAAAA;AAVa,GAAf;AAaA;;;;AAGAlD,EAAAA,QAAQ,CAACE,IAAT,CAAcgD,MAAM,GACf,mDADe,GAEf,yBAFL;AAKA,QAAMW,UAAU,GAAGX,MAAM,GACrB,sBAAOtB,MAAP,EAAeuB,MAAf,CADqB,GAErBvB,MAFJ;AAIA,SAAOiC,UAAP;AACD,CA7CD;;eA+Ce3B;;;;;;;;;;ACxDf;;AAEA;;;;;;;AAOA,MAAM4B,KAAK,GAAG,CAAC;AAAC9D,EAAAA,QAAD;AAAW+D,EAAAA,MAAX;AAAmBnC,EAAAA;AAAnB,CAAD,KAAgC;AAC5C,IAAE5B,QAAQ,IAAI+D,MAAZ,IAAsBnC,MAAxB,IACI5B,QAAQ,CAACE,IAAT,CAAc;AAAC1B,IAAAA,MAAM,EAAG;AAAV,GAAd,CADJ,GAEI,CAAC,MAAM;AACPwB,IAAAA,QAAQ,CAACE,IAAT,CAAc;AAAC1B,MAAAA,MAAM,EAAG,WAAUuF,MAAO;AAA3B,KAAd;AACA,6BAAWA,MAAX,EAAmBnC,MAAnB,EACCpB,IADD,CACM,MAAM;AACVR,MAAAA,QAAQ,CAACtB,QAAT;AACD,KAHD;AAID,GANC,GAFJ;AASD,CAVD;;eAYeoF;;;;;;;;;;ACrBf;;AAEA;;AACA;;AACA;;;;AAEA,MAAME,GAAG,GAAGjG,OAAO,CAACD,GAAR,EAAZ;AAEA;;;;AAGA,MAAM2E,IAAI,GAAG,OAAO;AAClB7C,EAAAA,IAAI,EAAE;AAACqE,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GADY;AAElBrC,EAAAA,MAFkB;AAGlBtD,EAAAA,IAHkB;AAIlByB,EAAAA;AAJkB,CAAP,KAKP;AACJ,QAAMyC,IAAI,GAAGxE,OAAO,CAAC,gBAAK+F,GAAL,EAAUC,IAAV,CAAD,CAApB;;AAEAjE,EAAAA,QAAQ,CAACE,IAAT,CAAc;AAAC1B,IAAAA,MAAM,EAAG,mBAAkByF,IAAK;AAAjC,GAAd;AACA,QAAME,MAAM,GAAGD,KAAK,CAACzB,IAAD,CAApB;;AAEA,MAAI;AACF,UAAMb,MAAM,GAAG,MAAM,sBAAQ;AAC3B5B,MAAAA,QAD2B;AAE3B4B,MAAAA,MAAM,EAAEuC,MAFmB;AAG3BtC,MAAAA,MAH2B;AAI3BtD,MAAAA;AAJ2B,KAAR,CAArB;AAOA,UAAM6F,YAAY,GAAG,MAAM,uBAAS;AAClCpE,MAAAA,QADkC;AAElC4B,MAAAA,MAFkC;AAGlCO,MAAAA,SAAS,EAAE;AAHuB,KAAT,CAA3B;AAMA,UAAM,oBAAM;AACVnC,MAAAA,QADU;AAEV+D,MAAAA,MAAM,EAAE,gBAAKC,GAAL,EAAUC,IAAV,CAFE;AAGVrC,MAAAA,MAAM,EAAEwC;AAHE,KAAN,CAAN;AAMApE,IAAAA,QAAQ,CAACtB,QAAT;AACD,GArBD,CAqBE,OAAO2F,GAAP,EAAY;AACZrE,IAAAA,QAAQ,CAACvB,KAAT,CAAgB,kCAAiCwF,IAAK,EAAtD;AACD;AACF,CAnCD;;eAqCexB;;;;;;;;;;AC9Cf;;AACA;;AACA;;AACA;;AAEA;;;;AAPA;;AACA;AAQA,MAAMuB,GAAG,GAAGjG,OAAO,CAACD,GAAR,EAAZ;;AAEA,MAAMwG,QAAQ,GAAG,OAAO;AAAC1E,EAAAA,IAAI,EAAE;AAAC2E,IAAAA;AAAD,GAAP;AAAgB1C,EAAAA,MAAhB;AAAwBtD,EAAAA,IAAxB;AAA8ByB,EAAAA;AAA9B,CAAP,KAAmD;AAClEA,EAAAA,QAAQ,CAACE,IAAT,CAAc;AAAC1B,IAAAA,MAAM,EAAG;AAAV,GAAd;AAEA,kBAAK+F,KAAL,EACGC,IADH,CAEI,0BAAUC,IAAI,IAAI;AAChB,WAAO,IAAIC,gBAAJ,CAAe,MAAM1E,QAAN,IAAkB;AACtC,UAAI;AACF,cAAM2E,YAAY,GAAG,MAAM,sBAAQ;AACjC9C,UAAAA,MADiC;AAEjCtD,UAAAA,IAFiC;AAGjCyB,UAAAA,QAHiC;AAIjC4B,UAAAA,MAAM,EAAE6C;AAJyB,SAAR,CAA3B;AAOA,cAAMG,OAAO,GAAG,gBAAKZ,GAAL,EAAUW,YAAV,CAAhB;;AAEA,YAAI;AACF,gBAAM,wBAAUC,OAAV,EACHpE,IADG,CACE,MAAM;AACVR,YAAAA,QAAQ,CAACtB,QAAT;AACD,WAHG,CAAN;AAID,SALD,CAKE,MAAM;AACNsB,UAAAA,QAAQ,CAACvB,KAAT,CAAgB,6BAA4B8F,KAAM,KAAIK,OAAQ,EAA9D;AACD;AACF,OAlBD,CAkBE,MAAM;AACN5E,QAAAA,QAAQ,CAACvB,KAAT,CAAgB,sCAAhB;AACD;AACF,KAtBM,CAAP;AAuBD,GAxBD,CAFJ,EA4BGoG,SA5BH,CA4Ba;AACT3E,IAAAA,IAAI,EAAEA,IAAI,IAAIF,QAAQ,CAACE,IAAT,CAAcA,IAAd,CADL;AAETzB,IAAAA,KAAK,EAAEA,KAAK,IAAIuB,QAAQ,CAACvB,KAAT,CAAeA,KAAf,CAFP;AAGTC,IAAAA,QAAQ,EAAE,MAAMsB,QAAQ,CAACtB,QAAT;AAHP,GA5Bb;AAiCD,CApCD;;eAsCe4F;;;;;;;;;;ACjDf;;AAEA;;;;;;AAMA,MAAMQ,IAAI,GAAG,OAAO;AAAC9E,EAAAA,QAAD;AAAWiE,EAAAA;AAAX,CAAP,KAA4B;AACvC,MAAI;AACFjE,IAAAA,QAAQ,CAACE,IAAT,CAAc;AAAC1B,MAAAA,MAAM,EAAG,YAAWyF,IAAK;AAA1B,KAAd;AAEA,WAAO,MAAM,uBAASA,IAAT,EAAe,MAAf,CAAb;AACD,GAJD,CAIE,OAAOxF,KAAP,EAAc;AACdsG,IAAAA,OAAO,CAACtG,KAAR,CAAcA,KAAd;AACD;AACF,CARD;;eAUeqG;;;;;;;;;;AClBf;;AAEA;;AACA;;AACA;;AACA;;;;AAEA;;;AAGA,MAAME,QAAQ,GAAG,OAAO;AACtBpF,EAAAA,IADsB;AAEtBiC,EAAAA,MAFsB;AAGtBtD,EAAAA,IAHsB;AAItBJ,EAAAA,QAJsB;AAKtB8G,EAAAA,WALsB;AAMtBjF,EAAAA;AANsB,CAAP,KAOX;AACJ,QAAM4B,MAAM,GAAG,MAAM,mBAAK;AACxB5B,IAAAA,QADwB;AAExBiE,IAAAA,IAAI,EAAG,GAAEgB,WAAY,IAAGrF,IAAI,CAACoF,QAAS;AAFd,GAAL,CAArB;AAKA,QAAMA,QAAQ,GAAG,MAAM,sBAAQ;AAC7BhF,IAAAA,QAD6B;AAE7B4B,IAAAA,MAF6B;AAG7BC,IAAAA,MAH6B;AAI7BtD,IAAAA;AAJ6B,GAAR,CAAvB;AAOA,QAAM2G,QAAQ,GAAG,MAAM,uBAAS;AAC9BlF,IAAAA,QAD8B;AAE9B4B,IAAAA,MAAM,EAAEoD,QAFsB;AAG9B7C,IAAAA,SAAS,EAAEvC,IAAI,CAAC6E,IAAL,CAAUU,KAAV,CAAgB,GAAhB,EACTvF,IAAI,CAAC6E,IAAL,CAAUU,KAAV,CAAgB,GAAhB,EAAqBC,MAArB,GAA8B,CADrB;AAHmB,GAAT,CAAvB;AAQA,QAAMjB,MAAM,GAAG,MAAM,oBAAM;AACzBnE,IAAAA,QADyB;AAEzB4B,IAAAA,MAAM,EAAEsD,QAFiB;AAGzBnB,IAAAA,MAAM,EAAE,gBAAK5F,QAAL,EAAeyB,IAAI,CAAC6E,IAApB;AAHiB,GAAN,CAArB;AAMAzE,EAAAA,QAAQ,CAACE,IAAT,CAAc;AAAC1B,IAAAA,MAAM,EAAE2F;AAAT,GAAd;AACAnE,EAAAA,QAAQ,CAACtB,QAAT;AACD,CApCD;;eAsCesG;;;;;;;;;;AC9Cf;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAhBA;;AACA;;AAOA;;AAGA;;AAOA;;;;;;;AAOA,MAAMK,MAAM,GAAG,CAAC;AAACxD,EAAAA,MAAD;AAAStD,EAAAA,IAAT;AAAe+G,EAAAA;AAAf,CAAD,KAA4B;AACzC,QAAM;AAAClG,IAAAA;AAAD,MAAU,uBAAWlB,YAAX,CAAhB;AAEA,QAAM,CAAC+G,WAAD,EAAcM,cAAd,IAAgC,qBAAS,IAAT,CAAtC;AACA,wBAAU,MAAM;AACdD,IAAAA,MAAM,IAAIC,cAAc,CACtB,gBAAK,mBAAQD,MAAR,CAAL,EAAsB,WAAtB,CADsB,CAAxB;AAGD,GAJD,EAIG,CAACA,MAAD,CAJH;AAMA;;;;AAGA,QAAM,CAACnH,QAAD,EAAWqH,WAAX,IAA0B,qBAASpG,KAAT,aAASA,KAAT,uBAASA,KAAK,CAAEjB,QAAhB,CAAhC;AACA,wBAAU,MAAM;AACd,KAAAiB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEjB,QAAP,KAAmBqH,WAAW,CAACpG,KAAK,CAACjB,QAAP,CAA9B;AACD,GAFD,EAEG,CAACiB,KAAD,CAFH;AAIA,QAAMqG,IAAI,GAAG;AACX9F,IAAAA,eAAe,EAAfA,wBADW;AAEXc,IAAAA,OAAO,EAAPA,gBAFW;AAGXgC,IAAAA,IAAI,EAAJA,aAHW;AAIX6B,IAAAA,QAAQ,EAARA,iBAJW;AAKXU,IAAAA,QAAQ,EAARA;AALW,GAAb;AAQA,QAAM,CAACxG,MAAD,EAASkH,SAAT,IAAsB,qBAAS,IAAT,CAA5B;AACA,QAAM,CAACjH,KAAD,EAAQkH,QAAR,IAAoB,qBAAS,IAAT,CAA1B;AACA,QAAM,CAACjH,QAAD,EAAWkH,WAAX,IAA0B,qBAAS,EAAT,CAAhC;AAEA,wBAAU,MAAM;AACdxG,IAAAA,KAAK,IAAIA,KAAK,CAACT,KAAf,IAAwBkD,MAAxB,IAAkCA,MAAM,CAACgE,OAAzC,IAAoDtH,IAApD,IACE,IAAImG,gBAAJ,CAAe1E,QAAQ,IACrB,gBAAK6B,MAAM,CAACgE,OAAZ,EACCrB,IADD,CAEE,0BAAU5E,IAAI,IAAI;AAChB,aAAO,IAAI8E,gBAAJ,CAAe,MAAM1E,QAAN,IAAkB;AACtC,YAAI;AACF,iBAAOyF,IAAI,CAAC7F,IAAI,CAACN,MAAN,CAAJ,CAAkB;AACvBM,YAAAA,IADuB;AAEvBiC,YAAAA,MAFuB;AAGvBtD,YAAAA,IAHuB;AAIvByB,YAAAA,QAJuB;AAKvBiF,YAAAA,WALuB;AAMvB9G,YAAAA;AANuB,WAAlB,CAAP;AAQD,SATD,CASE,OAAOM,KAAP,EAAc;AACduB,UAAAA,QAAQ,CAACvB,KAAT,CACG,GAAEmB,IAAI,CAACN,MAAO,gBADjB;AAGD;AACF,OAfM,CAAP;AAgBD,KAjBD,CAFF,EAqBCuF,SArBD,CAqBW;AACT3E,MAAAA,IAAI,EAAEA,IAAI,IAAIF,QAAQ,CAACE,IAAT,CAAcA,IAAd,CADL;AAETzB,MAAAA,KAAK,EAAEA,KAAK,IAAIuB,QAAQ,CAACvB,KAAT,CAAeA,KAAf,CAFP;AAGTC,MAAAA,QAAQ,EAAE,MAAMsB,QAAQ,CAACtB,QAAT;AAHP,KArBX,CADF,EA4BCmG,SA5BD,CA4BW;AACT3E,MAAAA,IAAI,EAAEA,IAAI,IAAIwF,SAAS,CAACxF,IAAI,CAAC1B,MAAN,CADd;AAETC,MAAAA,KAAK,EAAEA,KAAK,IAAIkH,QAAQ,CAAClH,KAAD,CAFf;AAGTC,MAAAA,QAAQ,EAAE,MAAMkH,WAAW,CAAC,IAAD;AAHlB,KA5BX,CADF;AAmCD,GApCD,EAoCG,CAACxG,KAAD,EAAQyC,MAAR,CApCH;AAsCA;;;;AAGA,SAAO,CAACnD,QAAD,gBACL,6BAAC,QAAD;AAAK,IAAA,aAAa,EAAC;AAAnB,KACGF,MAAM,iBACL,6BAAC,QAAD;AAAK,IAAA,aAAa,EAAC;AAAnB,kBACE,6BAAC,SAAD,qBACE,6BAAC,UAAD;AAAO,IAAA,KAAK;AAAZ,KAAcA,MAAd,CADF,CADF,CAFJ,EASGC,KAAK,iBACJ,6BAAC,QAAD;AAAK,IAAA,aAAa,EAAC;AAAnB,kBACE,6BAAC,SAAD,qBACE,6BAAC,UAAD;AAAO,IAAA,GAAG;AAAV,KACE,OAAOA,KAAP,KAAiB,QAAjB,GACIqH,IAAI,CAACC,SAAL,CAAetH,KAAf,CADJ,GAEIA,KAHN,CADF,CADF,CAVJ,CADK,gBAuBL,6BAAC,QAAD,qBACE,6BAAC,SAAD,qBAAM,6BAAC,UAAD;AAAO,IAAA,KAAK;AAAZ,iBAAN,CADF,CAvBF;AA2BD,CAlGD;;eAoGe4G;;;;;;;;;;AC7Hf;;AACA;;AACA;;AAGA;;AADA;;AAGA;;;AAGA,MAAMW,OAAO,GAAG,MAAM;AACpB;AACA,QAAM;AAAC1F,IAAAA;AAAD,MAAW,qBAAjB;AACA,QAAM;AAAClB,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoB,uBAAWnB,YAAX,CAA1B;AAEA;;;;;AAIA,QAAM,CAACI,OAAD,EAAU2H,UAAV,IAAwB,qBAAS,IAAT,CAA9B;AACA,wBAAU,MAAM;AACd,UAAM3H,OAAO,GAAGc,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEd,OAAvB;AACA2H,IAAAA,UAAU,CAAC3H,OAAO,GAAGA,OAAH,GAAa,IAArB,CAAV;AACD,GAHD,EAGG,CAACc,KAAD,CAHH;AAKA;;;;;AAIA,wBAAU,MAAM;AACdd,IAAAA,OAAO,IACL,sBAAOA,OAAP,EAAgBkC,IAAhB,CAAqBjC,IAAI,IAAI;AAC3B;;;;;;;;;;AAUA;;AAEA;;;;AAIAc,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,UADC;AAEPhB,QAAAA;AAFO,OAAD,CAAR;AAKA;;;;;;AAKAc,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,WADC;AAEPZ,QAAAA,KAAK,EAAE;AAFA,OAAD,CAAR;AAID,KA/BD,CADF;AAiCD,GAlCD,EAkCG,CAACL,OAAD,CAlCH;AAoCA,SAAO,IAAP;AACD,CAxDD;;eA0De0H;;;;;;;;;;ACpEf;;AACA;;AACA;;AACA;;;;AAEA;;;;;;AAMA,MAAME,MAAM,GAAG,CAAC;AAAC1H,EAAAA,MAAD;AAASE,EAAAA;AAAT,CAAD,kBACb,6BAAC,QAAD,QACGF,MAAM,IAAI,CAACE,QAAX,iBACC,6BAAC,SAAD,qBACE,6BAAC,UAAD;AAAO,EAAA,KAAK;AAAZ,gBACE,6BAAC,mBAAD;AAAS,EAAA,IAAI,EAAC;AAAd,EADF,CADF,EAII,IAAGF,MAAO,EAJd,CAFJ,EAUGE,QAAQ,iBACP,6BAAC,SAAD,qBACE,6BAAC,UAAD;AAAO,EAAA,KAAK;AAAZ,2BADF,CAXJ,CADF;;AAmBAwH,MAAM,CAACC,SAAP,GAAmB;AACjBzH,EAAAA,QAAQ,EAAEyH,mBAAUC;AADH,CAAnB;AAIAF,MAAM,CAACG,YAAP,GAAsB;AACpB7H,EAAAA,MAAM,EAAE,EADY;AAEpBE,EAAAA,QAAQ,EAAE;AAFU,CAAtB;eAKewH;;;;;;;;;;ACvCf;;AACA;;;;AAEA;;;AAGA,MAAMI,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KACZA,OAAO,gBACL,6BAAC,QAAD,qBACE,6BAAC,UAAD;AAAO,EAAA,GAAG;AAAV,oBAAeA,OAAO,IAAIA,OAAO,CAAC7F,IAAnB,GAA0B6F,OAAO,CAAC7F,IAAlC,GAAyC6F,OAAxD,CADF,CADK,GAIH,EALN;;eAOeD;;;;;;;;;;ACbf;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AALA;;AAOA;;;;;;;;;;;;;;;;AAgBA,MAAME,GAAG,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcnB,EAAAA,MAAd;AAAsBoB,EAAAA;AAAtB,CAAD,KAAmC;AAC7C,QAAM;AAACtH,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoB,uBAAWnB,YAAX,CAA1B;AAEA;;;;;AAIA,wBAAU,MAAM;AACdwI,IAAAA,MAAM,IACDrH,QAAQ,CAAC;AACVE,MAAAA,IAAI,EAAE,KADI;AAEVC,MAAAA,GAAG,EAAE,UAFK;AAGVC,MAAAA,KAAK,EAAG,GAAE1B,OAAO,CAACD,GAAR,EAAc,IAAG4I,MAAO;AAHxB,KAAD,CADb;AAMD,GAPD,EAOG,CAACA,MAAD,CAPH;AASA;;;;;AAIA,QAAM,CAAC7E,MAAD,EAAS8E,SAAT,IAAsB,qBAAS,IAAT,CAA5B;AACA,wBAAU,MAAM;AACdF,IAAAA,WAAW,IAAInB,MAAf,IACEqB,SAAS,CAAC1I,OAAO,CAACqH,MAAD,CAAR,CADX;AAED,GAHD,EAGG,CAACmB,WAAD,EAAcnB,MAAd,CAHH;AAKA;;;;;AAIA,wBAAU,MAAM;AACd,KAAAzD,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAE+E,WAAR,KACEvH,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,WADC;AAEPlB,MAAAA,KAAK,EAAEwD,MAAM,CAAC+E;AAFP,KAAD,CADV;AAKD,GAND,EAMG,CAAC/E,MAAD,CANH;AAQA;;;;;AAIA,wBAAU,MAAM;AACd,KAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEvD,OAAR,IACIe,QAAQ,CAAC;AACTE,MAAAA,IAAI,EAAE,aADG;AAETjB,MAAAA,OAAO,EAAEuD,MAAM,CAACvD;AAFP,KAAD,CADZ,GAKIe,QAAQ,CAAC;AACTE,MAAAA,IAAI,EAAE,WADG;AAETZ,MAAAA,KAAK,EAAE;AAFE,KAAD,CALZ;AASD,GAVD,EAUG,CAACkD,MAAD,CAVH;AAYA;;;;AAGA,sBACE,6BAAC,QAAD;AAAK,IAAA,aAAa,EAAC;AAAnB,kBACE,6BAAC,cAAD;AAAO,IAAA,OAAO,EAAEzC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEX;AAAvB,IADF,eAGE,6BAAC,gBAAD,OAHF,eAKE,6BAAC,eAAD;AACE,IAAA,MAAM,EAAEoD,MADV;AAEE,IAAA,IAAI,EAAEzC,KAAK,CAACb,IAFd;AAGE,IAAA,MAAM,EAAE+G;AAHV,IALF,CADF;AAaD,CAtED;;AAwEAkB,GAAG,CAACH,YAAJ,GAAmB;AACjBK,EAAAA,MAAM,EAAE,IADS;AAEjBD,EAAAA,WAAW,EAAE;AAFI,CAAnB;eAKeD;;;;;;;;;;ACxGf;;AACA;;AACA;;AACA;;;;AAEA;;;;;AAKA,MAAMK,MAAM,GAAG,CAAC;AAACxI,EAAAA;AAAD,CAAD,kBACb,6BAAC,QAAD;AAAK,EAAA,YAAY,EAAE,CAAnB;AAAsB,EAAA,aAAa,EAAC,KAApC;AAA0C,EAAA,cAAc,EAAC;AAAzD,gBACE,6BAAC,QAAD;AAAK,EAAA,aAAa,EAAC;AAAnB,gBACE,6BAAC,SAAD,QAAOA,KAAP,CADF,CADF,eAKE,6BAAC,QAAD;AAAK,EAAA,aAAa,EAAC;AAAnB,gBACE,6BAAC,SAAD,QAAQ,IAAR,CADF,eAEE,6BAAC,SAAD;AAAM,EAAA,IAAI;AAAV,gBACE,6BAAC,gBAAD;AAAM,EAAA,GAAG,EAAC;AAAV,gBACE,6BAAC,UAAD;AAAO,EAAA,KAAK;AAAZ,GAAc,OAAd,CADF,CADF,CAFF,CALF,CADF;;AAiBAwI,MAAM,CAACV,SAAP,GAAmB;AACjB9H,EAAAA,KAAK,EAAE8H,mBAAUvE;AADA,CAAnB;eAIeiF;;;;;;;;;;AC/Bf;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;;;;;;;AAHA;AAKA,MAAMC,UAAU,GAAG,mBAAQC,SAAR,EAAmB,oCAAnB,CAAnB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE;AADO,CAAhB;AAIA;AACA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAC7B,QAAM;AAAC/H,IAAAA;AAAD,MAAU,uBAAWlB,YAAX,CAAhB;AACA;;;;AAGA,QAAM,CAACG,KAAD,EAAQ+I,QAAR,IAAoB,qBAASJ,OAAO,CAACC,KAAjB,CAA1B;AACA,wBAAU,MAAM;AACd,KAAA7H,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEf,KAAP,KAAgB+I,QAAQ,CAAChI,KAAK,CAACf,KAAP,CAAxB;AACD,GAFD,EAEG,CAACe,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEf,KAAR,CAFH;AAIA,sBACE,6BAAC,QAAD;AAAK,IAAA,SAAS,EAAE,CAAhB;AAAmB,IAAA,aAAa,EAAE;AAAlC,kBACE,6BAAC,eAAD;AAAQ,IAAA,KAAK,EAAEA;AAAf,IADF,eAEE,6BAAC,QAAD;AAAK,IAAA,aAAa,EAAE,QAApB;AAA8B,IAAA,YAAY,EAAE;AAA5C,kBACE,6BAAC,YAAD;AACE,IAAA,MAAM,EAAE8I,UADV;AAEE,IAAA,MAAM,EAAEL,UAFV;AAGE,IAAA,WAAW,EAAE;AAHf,IADF,CAFF,CADF;AAYD,CAtBD;AAwBA;AACA;;;AACA,MAAMO,OAAO,GAAGC,KAAK,IAAI;AACvB,sBACE,6BAAC,oBAAD,qBACE,6BAAC,IAAD,EAAUA,KAAV,CADF,CADF;AAKD,CAND;;AAQAD,OAAO,CAAClB,SAAR,GAAoB;AAClB;AACAgB,EAAAA,UAAU,EAAEI,mBAAU3F;AAFJ,CAApB;AAKAyF,OAAO,CAACG,cAAR,GAAyB,CAAC,YAAD,CAAzB;eAEeH","file":"init.js","sourceRoot":"../../commands","sourcesContent":["import React, {createContext, useReducer} from 'react'\n\nconst cwd = process.cwd()\n\n/** app config */\nlet budConfig\ntry {\n  budConfig = require(`${process.cwd()}/.bud/bud.config.json`)\n} catch {\n  budConfig = {}\n}\n\n/**\n * Bud application context\n */\nexport const store = createContext({\n  cwd,\n  writeDir: cwd,\n  projectConfig: {\n    ...budConfig,\n  },\n  label: 'Bud: a modern WordPress scaffolding utility',\n  prompts: null,\n  data: null,\n  status: null,\n  error: null,\n  complete: false,\n  ready: false,\n  search: {\n    core: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n    plugins: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n    project: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n  },\n})\n\nconst {Provider} = store\n\n/**\n * State provider\n */\nexport const StateProvider = ({children}) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'SET': {\n        const {key, value} = action\n        return {\n          ...state,\n          [key]: value,\n        }\n      }\n    }\n    switch (action.type) {\n      case 'SET_LABEL': {\n        const {label} = action\n        return {\n          ...state,\n          label,\n        }\n      }\n      case 'SET_PROMPTS': {\n        const {prompts} = action\n        return {\n          ...state,\n          prompts,\n        }\n      }\n      case 'SET_DATA': {\n        const {data} = action\n        return {\n          ...state,\n          data: {\n            ...state.data,\n            ...data,\n          },\n        }\n      }\n      case 'SET_READY': {\n        const {ready} = action\n        return {\n          ...state,\n          ready,\n        }\n      }\n      case 'SET_STATUS': {\n        const {status} = action\n        return {\n          ...state,\n          status,\n        }\n      }\n      case 'SET_ERROR': {\n        const {error} = action\n        return {\n          ...state,\n          error,\n        }\n      }\n      case 'SET_COMPLETE': {\n        const {complete} = action\n        return {\n          ...state,\n          complete,\n        }\n      }\n      case 'SEARCH_RESULTS': {\n        const {results, status, complete} = action\n        return {\n          ...state,\n          search: {\n            ...state.search,\n            [`${action.label}`]: {\n              results,\n              status,\n              complete,\n            },\n          },\n        }\n      }\n    }\n  }, store)\n\n  return (\n    <Provider value={{state, dispatch}}>\n      {children}\n    </Provider>\n  )\n}\n","import execa from 'execa'\n\nconst execaOptions = {cwd: process.cwd()}\n\n/**\n * Add dependencies\n */\nconst addDependencies = async function ({\n  task: {repo, pkgs, dev},\n  observer,\n}) {\n  let installation\n\n  observer.next({status: `Installing packages from ${repo}...`})\n\n  if (repo !== 'npm' && repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (repo == 'npm') {\n    installation = execa.command(\n      `yarn add ${dev ? `-D` : ``} ${pkgs.join(' ')}`,\n      execaOptions,\n    )\n  }\n\n  if (repo == 'packagist') {\n    installation = execa.command(\n      `composer require ${pkgs.join(' ')} ${dev ? `--development` : ``}`,\n      execaOptions,\n    )\n  }\n\n  installation.stdout.on('data', status => {\n    observer.next({status})\n  })\n\n  installation.then(() => observer.complete())\n}\n\nexport default addDependencies\n","import execa from 'execa'\n\nconst execaOptions = {cwd: process.cwd()}\n\nconst install = async ({task: {repo}, observer}) => {\n  let installation\n\n  observer.next({status: `Installing packages from ${repo}...`})\n\n  if (repo !== 'npm' && repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (repo == 'npm') {\n    installation = execa.command(`yarn`, execaOptions)\n  }\n\n  if (repo == 'packagist') {\n    installation = execa.command(`composer install`, execaOptions)\n  }\n\n  installation.stdout.on('data', status => {\n    observer.next({status: status.code})\n  })\n\n  installation.then(() => observer.complete())\n}\n\nexport default install","/**\n * Handlebars helpers\n */\nconst helpers = data => [\n  {\n    helper: 'array',\n    fn: function () {\n      return Array.prototype.slice.call(arguments, 0, -1)\n    },\n  },\n  {\n    helper: 'has',\n    fn: function (object, component, options) {\n      if (data[object].indexOf(component) > -1) {\n        return options.fn(this)\n      }\n\n      return options.inverse(this)\n    },\n  },\n  {\n    helper: 'hasAny',\n    fn: function (object, components, options) {\n      let hasInstance = false\n\n      if (components) {\n        components.forEach(component => {\n          if (data[object].indexOf(component) > -1) {\n            hasInstance = true\n          }\n        })\n      }\n\n      return hasInstance\n        ? options.fn(this)\n        : options.inverse(this)\n    },\n  },\n  {\n    helper: 'raw',\n    fn: function (options) {\n      return options.fn()\n    },\n  },\n]\n\nexport default helpers\n","/**\n * Handlebars\n */\nimport handlebars from 'handlebars'\nimport handlebarsHelpers from 'handlebars-helpers'\nimport helpers from './helpers'\n\n/**\n * Process Handlebars template\n *\n * @param {string} string\n * @param {object} sprout\n */\nconst Process = async ({observer, string, sprout, data}) => {\n  handlebarsHelpers({handlebars})\n  helpers(data).forEach(({helper, fn}) => {\n    handlebars.registerHelper(helper, fn)\n  })\n\n  sprout?.registerHelpers?.forEach(({helper, fn}) => {\n    handlebars.registerHelper(helper, fn)\n  })\n\n  observer.next({status: `Compiling template`})\n  return await handlebars.compile(string)(data)\n}\n\nexport default Process\n","import {format} from 'prettier'\n\n/**\n * Prettier\n *\n * @param {Observable} observer\n * @param {string} extension\n * @param {string} string\n */\nconst Prettify = async ({observer, string, extension}) => {\n  const parsers = {\n    js: 'babel',\n    jsx: 'babel',\n    graphql: 'graphql',\n    css: 'css',\n    json: 'json',\n    md: 'markdown',\n    html: 'html',\n    htm: 'html',\n    ts: 'typescript',\n    tsx: 'typescript',\n    yml: 'yaml',\n    yaml: 'yaml',\n    less: 'less',\n  }\n\n  const parser = parsers[`${extension}`]\n\n  const config = {\n    arrowParens: 'avoid',\n    bracketSpacing: false,\n    tabWidth: 2,\n    printWidth: 100,\n    singleQuote: true,\n    jsxBracketSameLine: true,\n    useTabs: false,\n    trailingComma: 'all',\n    semi: false,\n    parser,\n  }\n\n  /**\n   * Make prettier.\n   */\n  observer.next(parser\n    ? `Skipping prettier. No support for this extension.`\n    : `Prettifying file output`\n  )\n\n  const prettified = parser\n    ? format(string, config)\n    : string\n\n  return prettified\n}\n\nexport default Prettify\n","import {outputFile} from 'fs-extra'\n\n/**\n * Write\n *\n * @param {Observer} observer\n * @param {string}   target\n * @param {string}   string\n */\nconst Write = ({observer, target, string}) => {\n  !(observer && target && string)\n    ? observer.next({status: `Waiting for file contents..`})\n    : (() => {\n      observer.next({status: `Writing ${target}`})\n      outputFile(target, string)\n      .then(() => {\n        observer.complete()\n      })\n    })()\n}\n\nexport default Write\n","import {join} from 'path'\n\nimport Process from './../Process'\nimport Prettify from './../Prettify'\nimport Write from './../Write'\n\nconst CWD = process.cwd()\n\n/**\n * JSON\n */\nconst json = async ({\n  task: {file, merge},\n  sprout,\n  data,\n  observer,\n}) => {\n  const json = require(join(CWD, file))\n\n  observer.next({status: `Writing JSON to ${file}`})\n  const output = merge(json)\n\n  try {\n    const string = await Process({\n      observer,\n      string: output,\n      sprout,\n      data,\n    })\n\n    const prettyString = await Prettify({\n      observer,\n      string,\n      extension: 'json',\n    })\n\n    await Write({\n      observer,\n      target: join(CWD, file),\n      string: prettyString,\n    })\n\n    observer.complete()\n  } catch (err) {\n    observer.error(`There was a problem writing to ${file}`)\n  }\n}\n\nexport default json","/* eslint-disable react/display-name */\n/* eslint-disable react/jsx-no-undef */\nimport {join} from 'path'\nimport {ensureDir} from 'fs-extra'\nimport {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\nimport Process from './../Process'\n\nconst CWD = process.cwd()\n\nconst scaffold = async ({task: {paths}, sprout, data, observer}) => {\n  observer.next({status: `Creating directories`})\n\n  from(paths)\n    .pipe(\n      concatMap(path => {\n        return new Observable(async observer => {\n          try {\n            const pathTemplate = await Process({\n              sprout,\n              data,\n              observer,\n              string: path,\n            })\n\n            const dirPath = join(CWD, pathTemplate)\n\n            try {\n              await ensureDir(dirPath)\n                .then(() => {\n                  observer.complete()\n                })\n            } catch {\n              observer.error(`scaffolding action throw: ${paths}, ${dirPath}`)\n            }\n          } catch {\n            observer.error(`Action error: scaffold, pathTemplate`)\n          }\n        })\n      }),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default scaffold","import {readFile} from 'fs-extra'\n\n/**\n * Read file\n *\n * @param {string} templateDir\n * @param {string} template\n */\nconst Read = async ({observer, file}) => {\n  try {\n    observer.next({status: `Reading: ${file}`})\n\n    return await readFile(file, 'utf8')\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default Read\n","import {join} from 'path'\n\nimport Read from './../Read'\nimport Process from './../Process'\nimport Prettify from './../Prettify'\nimport Write from './../Write'\n\n/**\n * Template\n */\nconst template = async ({\n  task,\n  sprout,\n  data,\n  writeDir,\n  templateDir,\n  observer,\n}) => {\n  const string = await Read({\n    observer,\n    file: `${templateDir}/${task.template}`,\n  })\n\n  const template = await Process({\n    observer,\n    string,\n    sprout,\n    data,\n  })\n\n  const prettier = await Prettify({\n    observer,\n    string: template,\n    extension: task.path.split('.')[\n      task.path.split('.').length - 1\n    ],\n  })\n\n  const output = await Write({\n    observer,\n    string: prettier,\n    target: join(writeDir, task.path),\n  })\n\n  observer.next({status: output})\n  observer.complete()\n}\n\nexport default template","/* eslint-disable react/display-name */\n/* eslint-disable react/jsx-no-undef */\nimport {join, dirname} from 'path'\nimport React, {useState, useContext, useEffect} from 'react'\nimport {Box, Color, Text} from 'ink'\nimport {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/** application */\nimport {store} from './../../store'\n\n/** tasks */\nimport addDependencies from './tasks/addDependencies'\nimport install from './tasks/install'\nimport json from './tasks/json'\nimport scaffold from './tasks/scaffold'\nimport template from './tasks/template'\n\n/**\n * Runner\n *\n * @param {object}   data\n * @param {object}   sprout\n * @param {string}   templateDir\n */\nconst Runner = ({sprout, data, module}) => {\n  const {state} = useContext(store)\n\n  const [templateDir, setTemplateDir] = useState(null)\n  useEffect(() => {\n    module && setTemplateDir(\n      join(dirname(module), 'templates')\n    )\n  }, [module])\n\n  /**\n   * Set writeDir\n   */\n  const [writeDir, setWriteDir] = useState(state?.writeDir)\n  useEffect(() => {\n    state?.writeDir && setWriteDir(state.writeDir)\n  }, [state])\n\n  const jobs = {\n    addDependencies,\n    install,\n    json,\n    scaffold,\n    template,\n  }\n\n  const [status, setStatus] = useState(null)\n  const [error, setError] = useState(null)\n  const [complete, setComplete] = useState('')\n\n  useEffect(() => {\n    state && state.ready && sprout && sprout.actions && data && (\n      new Observable(observer =>\n        from(sprout.actions)\n        .pipe(\n          concatMap(task => {\n            return new Observable(async observer => {\n              try {\n                return jobs[task.action]({\n                  task,\n                  sprout,\n                  data,\n                  observer,\n                  templateDir,\n                  writeDir,\n                })\n              } catch (error) {\n                observer.error(\n                  `${task.action} handler error`\n                )\n              }\n            })\n          })\n        )\n        .subscribe({\n          next: next => observer.next(next),\n          error: error => observer.error(error),\n          complete: () => observer.complete(),\n        })\n      )\n      .subscribe({\n        next: next => setStatus(next.status),\n        error: error => setError(error),\n        complete: () => setComplete(true),\n      })\n    )\n  }, [state, sprout])\n\n  /**\n   * Render\n   */\n  return !complete ? (\n    <Box flexDirection=\"column\">\n      {status && (\n        <Box flexDirection=\"column\">\n          <Text>\n            <Color green>{status}</Color>\n          </Text>\n        </Box>\n      )}\n\n      {error && (\n        <Box flexDirection=\"column\">\n          <Text>\n            <Color red>{\n              typeof error !== 'string'\n                ? JSON.stringify(error)\n                : error\n            }</Color>\n          </Text>\n        </Box>\n      )}\n    </Box>\n  ) : (\n    <Box>\n      <Text><Color green>All done.</Color></Text>\n    </Box>\n  )\n}\n\nexport default Runner\n","import {useState, useEffect, useContext} from 'react'\nimport {useStdout} from 'ink'\nimport {prompt} from 'enquirer'\n\n/** application */\nimport {store} from '../store'\n\n/**\n * Prompts\n */\nconst Prompts = () => {\n  /** @see ink docs */\n  const {stdout} = useStdout()\n  const {state, dispatch} = useContext(store)\n\n  /**\n   * State tracking prompts listed in the\n   * generator file.\n   */\n  const [prompts, setPrompts] = useState(null)\n  useEffect(() => {\n    const prompts = state?.prompts\n    setPrompts(prompts ? prompts : null)\n  }, [state])\n\n  /**\n   * If there are prompts to run then do so\n   * and dispatch the results to the global store.\n   */\n  useEffect(() => {\n    prompts &&\n      prompt(prompts).then(data => {\n        /**\n         * Since enquirer is not\n         * ink-specific it causes duplication of the\n         * application components in stdout.\n         *\n         * This clears the console to mask that issue.\n         *\n         * @todo rewrite enquirer prompts with ink-specific\n         * componentry.\n         */\n        // stdout.write('\\x1B[2J\\x1B[0f')\n\n        /**\n         * Dispatch resultant data to the global store,\n         * to be merged with whatever is already there.\n         */\n        dispatch({\n          type: 'SET_DATA',\n          data,\n        })\n\n        /**\n         * Finally, tell the application that the prompts\n         * are finished and we're ready to build the\n         * requested component.\n         */\n        dispatch({\n          type: 'SET_READY',\n          ready: true,\n        })\n      })\n  }, [prompts])\n\n  return null\n}\n\nexport default Prompts\n","import React from 'react'\nimport propTypes from 'prop-types'\nimport {Box, Text, Color} from 'ink'\nimport Spinner from 'ink-spinner'\n\n/**\n * Status\n *\n * @prop {string} status\n * @prop {bool}   comp\n */\nconst Status = ({status, complete}) => (\n  <Box>\n    {status && !complete && (\n      <Text>\n        <Color green>\n          <Spinner type=\"dots\" />\n        </Color>\n        {` ${status}`}\n      </Text>\n    )}\n\n    {complete && (\n      <Text>\n        <Color green>⚡️ All set.</Color>\n      </Text>\n    )}\n  </Box>\n)\n\nStatus.propTypes = {\n  complete: propTypes.bool,\n}\n\nStatus.defaultProps = {\n  status: '',\n  complete: false,\n}\n\nexport default Status\n","import React from 'react'\nimport {Box, Color} from 'ink'\n\n/**\n * Error\n */\nconst Error = ({message}) =>\n  message ? (\n    <Box>\n      <Color red>💥 {message && message.code ? message.code : message}</Color>\n    </Box>\n  ) : []\n\nexport default Error\n","import {join} from 'path'\nimport React, {useState, useEffect, useContext} from 'react'\nimport {Box} from 'ink'\n\n/** application */\nimport {store} from './store'\nimport Runner from './containers/Runner'\nimport Prompts from './containers/Prompts'\nimport Status from './components/Status'\nimport Error from './components/Error'\n\n/**\n * Bud Application\n *\n * This container represents the main Bud application.\n *\n * It does not handle the initial command invocation or\n * routing. Rather, the  moduleReady and module props are supplied\n * by a command component, which are housed in the commands dir.\n *\n * @see ink (react cli framework)\n * @see pastel (ink project framework)\n *\n * @prop {bool}   moduleReady\n * @prop {string} module\n * @prop {string} outDirectory\n */\nconst Bud = ({moduleReady, module, outDir}) => {\n  const {state, dispatch} = useContext(store)\n\n  /**\n   * If the command specifies an output dir\n   * stash it to the store.\n   */\n  useEffect(() => {\n    outDir\n      && dispatch({\n        type: 'SET',\n        key: 'writeDir',\n        value: `${process.cwd()}/${outDir}`,\n      })\n  }, [outDir])\n\n  /**\n   * Load the \"sprout\" from the module file\n   * if the search has concluded.\n   */\n  const [sprout, setSprout] = useState(null)\n  useEffect(() => {\n    moduleReady && module &&\n      setSprout(require(module))\n  }, [moduleReady, module])\n\n  /**\n   * If the sprout has a description\n   * then update the application banner.\n   */\n  useEffect(() => {\n    sprout?.description &&\n      dispatch({\n        type: 'SET_LABEL',\n        label: sprout.description,\n      })\n  }, [sprout])\n\n  /**\n   * If the generator has prompts then update the\n   * store with those prompts.\n   */\n  useEffect(() => {\n    sprout?.prompts\n      ? dispatch({\n        type: 'SET_PROMPTS',\n        prompts: sprout.prompts,\n      })\n      : dispatch({\n        type: 'SET_READY',\n        ready: true,\n      })\n  }, [sprout])\n\n  /**\n   * Render the main app flow.\n   */\n  return (\n    <Box flexDirection=\"column\">\n      <Error message={state?.error} />\n\n      <Prompts />\n\n      <Runner\n        sprout={sprout}\n        data={state.data}\n        module={module}\n      />\n    </Box>\n  )\n}\n\nBud.defaultProps = {\n  outDir: null,\n  moduleReady: false,\n}\n\nexport default Bud\n","import React from 'react'\nimport propTypes from 'prop-types'\nimport {Box, Text, Color} from 'ink'\nimport Link from 'ink-link'\n\n/**\n * Banner\n *\n * @prop {string} label\n */\nconst Banner = ({label}) => (\n  <Box marginBottom={1} flexDirection=\"row\" justifyContent=\"space-between\">\n    <Box flexDirection=\"column\">\n      <Text>{label}</Text>\n    </Box>\n\n    <Box flexDirection=\"row\">\n      <Text>{`🌱`}</Text>\n      <Text bold>\n        <Link url=\"https://roots.io/bud\">\n          <Color green>{'  Bud'}</Color>\n        </Link>\n      </Text>\n    </Box>\n  </Box>\n)\n\nBanner.propTypes = {\n  label: propTypes.string,\n}\n\nexport default Banner\n","import {resolve} from 'path'\nimport React, {useContext, useEffect, useState} from 'react'\nimport {Box} from 'ink'\nimport PropTypes from 'prop-types'\n\n/** application */\nimport Bud from '../src/bud'\nimport {StateProvider, store} from '../src/bud/store'\nimport Banner from '../src/bud/components/Banner'\n\nconst initModule = resolve(__dirname, './../../src/budfiles/init/init.bud')\n\nconst strings = {\n  title: 'Bud: WordPress CLI generator tooling',\n}\n\n/** Command: bud init */\n/// Create a new project\nconst Init = ({projectDir}) => {\n  const {state} = useContext(store)\n  /**\n   * Update the generator label.\n   */\n  const [label, setLabel] = useState(strings.title)\n  useEffect(() => {\n    state?.label && setLabel(state.label)\n  }, [state?.label])\n\n  return (\n    <Box marginTop={1} flexDirection={'column'}>\n      <Banner label={label} />\n      <Box flexDirection={'column'} marginBottom={1}>\n        <Bud\n          outDir={projectDir}\n          module={initModule}\n          moduleReady={true}\n        />\n      </Box>\n    </Box>\n  )\n}\n\n/** Command: bud init */\n/// Initialize a Bud project\nconst InitCLI = props => {\n  return (\n    <StateProvider>\n      <Init {...props} />\n    </StateProvider>\n  )\n}\n\nInitCLI.propTypes = {\n  /// Output directory\n  projectDir: PropTypes.string,\n}\n\nInitCLI.positionalArgs = ['projectDir']\n\nexport default InitCLI\n"]}