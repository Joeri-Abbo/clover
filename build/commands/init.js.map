{"version":3,"sources":["../src/components/store.js","../src/components/containers/Prompts.js","../prettier.config.js","../src/bud/helpers.js","../src/bud/index.js","../src/components/containers/Runner.js","../src/components/components/Status.js","../src/components/components/Error.js","../src/components/Bud.js","../src/components/components/Banner.js","init.js"],"names":["store","label","prompts","data","status","error","complete","ready","search","core","results","plugins","project","Provider","StateProvider","children","state","dispatch","action","type","Prompts","stdout","setPrompts","length","then","write","module","exports","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","overrides","files","options","parser","helper","fn","Array","prototype","slice","call","arguments","object","component","indexOf","inverse","components","hasInstance","forEach","join","resolve","require","fs","fetch","execa","handlebars","prettier","globby","Observable","from","concatMap","basePrettierConfig","handlebarsHelpers","helpers","CWD","process","cwd","bud","init","sprout","templateDir","outDir","projectDir","execaOptions","registerActions","registerHelpers","getConfig","path","getData","setData","handle","callback","push","registerHelper","format","content","JSON","stringify","actions","observer","pipe","task","subscribe","next","scaffold","paths","mkDir","e","pathTemplate","compile","dirPath","ensureDir","getTemplate","template","contents","readFile","inferParser","file","ext","split","parserMap","js","jsx","graphql","css","json","md","html","htm","ts","tsx","yml","yaml","less","dest","replace","compiled","outputContents","outputFile","templateGlob","glob","templates","addDependencies","repo","pkgs","dev","installation","command","on","install","code","merge","output","err","Runner","subscription","setSubscription","BudEngine","setStatus","setError","setComplete","Status","propTypes","bool","defaultProps","Error","message","PropTypes","string","budConfig","Bud","moduleReady","setSprout","description","Banner","initModule","__dirname","strings","title","Init","props","setLabel","InitCLI","positionalArgs"],"mappings":"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","file":"init.js","sourceRoot":"../../commands","sourcesContent":["import React, {createContext, useReducer} from 'react'\n\nconst store = createContext({\n  label: 'Bud: a modern WordPress scaffolding utility',\n  prompts: [],\n  data: null,\n  status: null,\n  error: null,\n  complete: false,\n  ready: false,\n  search: {\n    core: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n    plugins: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n    project: {\n      results: null,\n      status: null,\n      complete: false,\n    },\n  },\n})\n\nconst {Provider} = store\n\nconst StateProvider = ({children}) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch(action.type) {\n      case 'SET_LABEL': {\n        const {label} = action\n        return {\n          ...state,\n          label,\n        }\n      }\n      case 'SET_PROMPTS': {\n        const {prompts} = action\n        return {\n          ...state,\n          prompts,\n        }\n      }\n      case 'SET_DATA': {\n        const {data} = action\n        return {\n          ...state,\n          data: {\n            ...state.data,\n            ...data,\n          },\n        }\n      }\n      case 'SET_READY': {\n        const {ready} = action\n        return {\n          ...state,\n          ready,\n        }\n      }\n      case 'SET_STATUS': {\n        const {status} = action\n        return {\n          ...state,\n          status,\n        }\n      }\n      case 'SET_ERROR': {\n        const {error} = action\n        return {\n          ...state,\n          error,\n        }\n      }\n      case 'SET_COMPLETE': {\n        const {complete} = action\n        return {\n          ...state,\n          complete,\n        }\n      }\n      case 'SEARCH_RESULTS': {\n        const {results, status, complete} = action\n        return {\n          ...state,\n          search: {\n            ...state.search,\n            [`${action.label}`]: {\n              results,\n              status,\n              complete,\n            },\n          },\n        }\n      }\n    }\n  }, store)\n\n  return (\n    <Provider value={{state, dispatch}}>\n      {children}\n    </Provider>\n  )\n}\n\nexport {store, StateProvider}","import {useState, useEffect, useContext} from 'react'\nimport {useStdout} from 'ink'\nimport {prompt} from 'enquirer'\n\n/** application */\nimport {store} from './../store'\n\n/**\n * Prompts\n */\nconst Prompts = () => {\n  /** @see ink docs */\n  const {stdout} = useStdout()\n  const {state, dispatch} = useContext(store)\n\n  /**\n   * State tracking prompts listed in the\n   * generator file.\n   */\n  const [prompts, setPrompts] = useState(null)\n  useEffect(() => {\n    const prompts = state?.prompts\n    setPrompts(prompts ? prompts : null)\n  }, [state])\n\n  /**\n   * If there are prompts to run then do so\n   * and dispatch the results to the global store.\n   */\n  useEffect(() => {\n    prompts?.length > 0\n      && prompt(prompts).then(data => {\n        /**\n         * Since enquirer is not\n         * ink-specific it causes duplication of the\n         * application components in stdout.\n         *\n         * This clears the console to mask that issue.\n         *\n         * @todo rewrite enquirer prompts with ink-specific\n         * componentry.\n         */\n        stdout.write('\\x1B[2J\\x1B[0f')\n\n        /**\n         * Dispatch resultant data to the global store,\n         * to be merged with whatever is already there.\n         */\n        dispatch({\n          type: 'SET_DATA',\n          data,\n        })\n\n        /**\n         * Finally, tell the application that the prompts\n         * are finished and we're ready to build the\n         * requested component.\n         */\n        dispatch({\n          type: 'SET_READY',\n          ready: true,\n        })\n      })\n  }, [prompts])\n\n  return null\n}\n\nexport default Prompts\n","module.exports = {\n  arrowParens: 'avoid',\n  bracketSpacing: false,\n  tabWidth: 2,\n  printWidth: 100,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: false,\n  trailingComma: 'all',\n  semi: false,\n  overrides: [\n    {\n      files: ['*.md'],\n      options: {\n        parser: 'markdown',\n      },\n    },\n    {\n      files: ['*.json'],\n      options: {\n        parser: 'json',\n      },\n    },\n  ],\n}\n","/**\n * Handlebars helpers\n */\nmodule.exports = data => {\n  return [\n    {\n      helper: 'array',\n      fn: function () {\n        return Array.prototype.slice.call(arguments, 0, -1)\n      },\n    },\n    {\n      helper: 'has',\n      fn: function (object, component, options) {\n        if (data[object].indexOf(component) > -1) {\n          return options.fn(this)\n        }\n\n        return options.inverse(this)\n      },\n    },\n    {\n      helper: 'hasAny',\n      fn: function (object, components, options) {\n        let hasInstance = false\n\n        if (components) {\n          components.forEach(component => {\n            if (data[object].indexOf(component) > -1) {\n              hasInstance = true\n            }\n          })\n        }\n\n        return hasInstance ? options.fn(this) : options.inverse(this)\n      },\n    },\n    {\n      helper: 'raw',\n      fn: function (options) {\n        return options.fn()\n      },\n    },\n  ]\n}\n","const {join, resolve} = require('path')\nconst fs = require('fs-extra')\nconst fetch = require('node-fetch')\nconst execa = require('execa')\nconst handlebars = require('handlebars')\nconst prettier = require('prettier')\nconst globby = require('globby')\nconst {Observable, from} = require('rxjs')\nconst {concatMap} = require('rxjs/operators')\n\nconst basePrettierConfig = require('./../../prettier.config.js')\nconst handlebarsHelpers = require('handlebars-helpers')\nconst helpers = require('./helpers')\n\nconst CWD = process.cwd()\n\n/**\n * Bud Core\n */\nexport const bud = {\n  fs,\n  fetch,\n  execa,\n  prettier,\n  handlebars,\n\n  /**\n   * Initialize\n   *\n   * @param {string} outDir\n   * @param {object} data\n   * @param {object} sprout\n   * @param {string} templateDir\n   * @param {bool}   skipInstall\n   */\n  init: function ({data = {}, sprout, templateDir, outDir}) {\n    this.data = data\n    this.sprout = sprout\n    this.projectDir = outDir ? join(CWD, outDir) : CWD\n    this.execaOptions = {cwd: this.projectDir}\n    this.templateDir = templateDir\n\n    this.registerActions()\n    this.registerHelpers()\n\n    return this\n  },\n\n  /**\n   * Get config.\n   *\n   * @return {object}\n   */\n  getConfig: function () {\n    return {\n      path: `${process.cwd()}/${this.projectDir}/.bud/bud.config.json`,\n      data: require(`${process.cwd()}/${this.projectDir}/.bud/bud.config.json`),\n    }\n  },\n\n  /**\n   * Get data.\n   *\n   * @return {object}\n   */\n  getData: function () {\n    return this.data\n  },\n\n  /**\n   * Set data.\n   *\n   * @param  {object} data\n   * @return {void}\n   */\n  setData: function (data) {\n    this.data = data\n  },\n\n  /**\n   * Register actions\n   */\n  registerActions: function () {\n    this.sprout.registerActions &&\n      this.sprout.registerActions.forEach(action => {\n        this[`${action.handle}`] = action.callback\n      })\n  },\n\n  /**\n   * Register helpers\n   */\n  registerHelpers: function () {\n    // lib helpers\n    handlebarsHelpers({handlebars: this.handlebars})\n\n    // plugin registered helpers\n    this.sprout.registerHelpers &&\n      this.sprout.registerHelpers.length > 0 &&\n      this.sprout.registerHelpers.forEach(helper => {\n        helpers.push(helper)\n      })\n\n    // roots/bud helpers\n    helpers(this.getData()).forEach(({helper, fn}) => {\n      this.handlebars.registerHelper(helper, fn)\n    })\n  },\n\n  /**\n   * Format\n   *\n   * @param  {object|string} content\n   * @param  {parser} string\n   * @return {string}\n   */\n  format: function (content, parser) {\n    return this.prettier.format(typeof content !== 'string' ? JSON.stringify(content) : content, {\n      ...basePrettierConfig,\n      parser: parser || 'babel',\n    })\n  },\n\n  /**\n   * Actions\n   *\n   * @return {Observable}\n   */\n  actions: function () {\n    const bud = {...this}\n\n    return new Observable(function (observer) {\n      from(bud.sprout.actions)\n        .pipe(\n          concatMap(function (task) {\n            return new Observable(async function (observer) {\n              return bud[task.action](task, observer, bud)\n            })\n          }),\n        )\n        .subscribe({\n          next: next => observer.next(next),\n          error: error => observer.error(error),\n          complete: complete => observer.complete(complete),\n        })\n    })\n  },\n\n  /**\n   * Scaffold directories\n   *\n   * @param  {array} paths\n   * @return {Observable}\n   */\n  scaffold: function ({paths}, observer) {\n    observer.next(`Creating directories`)\n\n    from(paths)\n      .pipe(\n        concatMap(path => {\n          return new Observable(async observer => {\n            try {\n              await this.mkDir({path}, observer)\n            } catch (e) {\n              observer.error(e)\n            }\n          })\n        }),\n      )\n      .subscribe({\n        next: next => observer.next(next),\n        error: error => observer.error(error),\n        complete: () => observer.complete(),\n      })\n  },\n\n  /**\n   * Make directory\n   *\n   * @param  {string}     path\n   * @param  {Observable} observer\n   * @return {Observable}\n   */\n  mkDir: async function ({path}, observer) {\n    const pathTemplate = this.handlebars.compile(path)\n    const dirPath = join(this.projectDir, pathTemplate(this.getData()))\n\n    try {\n      await fs.ensureDir(dirPath).then(() => {\n        observer.complete()\n      })\n    } catch (e) {\n      observer.error(e)\n    }\n  },\n\n  /**\n   * Get template contents.\n   *\n   * @param  {string} template\n   * @return {array}\n   */\n  getTemplate: async function (template) {\n    const path = join(this.templateDir, template)\n    const contents = await fs.readFile(path, 'utf8')\n\n    return {path, contents}\n  },\n\n  /**\n   * Infer parser\n   *\n   * @param  {string} file\n   * @return {string}\n   */\n  inferParser: async function (file) {\n    const ext = file.split('.')[file.split('.').length - 1]\n    const parserMap = {\n      js: 'babel',\n      jsx: 'babel',\n      graphql: 'graphql',\n      css: 'css',\n      json: 'json',\n      md: 'markdown',\n      html: 'html',\n      htm: 'html',\n      ts: 'typescript',\n      tsx: 'typescript',\n      yml: 'yaml',\n      yaml: 'yaml',\n      less: 'less',\n    }\n\n    return parserMap[`${ext}`] ?? null\n  },\n\n  /**\n   * Action: template\n   *\n   * @param  {string} parser\n   * @param  {string} path\n   * @param  {string} template\n   * @return {Observable}\n   */\n  template: async function ({parser, path, template}, observer) {\n    try {\n      const {contents} = await this.getTemplate(template)\n      const dest = join(\n        this.projectDir,\n        this.handlebars.compile(path)(this.getData()).replace('.hbs', ''),\n      )\n\n      observer.next(`Writing ${dest.split('/')[dest.split('/').length - 1]}`)\n\n      const compiled = this.handlebars.compile(contents)(this.getData())\n      const outputContents = parser ? this.format(compiled, parser) : compiled\n\n      fs.outputFile(dest, outputContents).then(() => observer.complete())\n    } catch (error) {\n      observer.error(error)\n    }\n  },\n\n  /**\n   * Action: template dir\n   *\n   * @param  {string} parser\n   * @param  {string} path\n   * @param  {string} templateDir\n   * @return {Observable}\n   */\n  templateGlob: async function ({glob}, observer) {\n    try {\n      const templates = await globby([resolve(this.templateDir, glob)])\n\n      from(templates)\n        .pipe(\n          concatMap(template => {\n            return new Observable(async observer => {\n              try {\n                const parser = await this.inferParser(template.replace('.hbs', ''))\n\n                await this.template(\n                  {\n                    parser,\n                    template: template.replace(this.templateDir, ''),\n                    path: template.replace(this.templateDir, '').replace('.hbs', ''),\n                  },\n                  observer,\n                )\n              } catch (error) {\n                observer.error(error)\n              }\n            })\n          }),\n        )\n        .subscribe({\n          next: next => observer.next(next),\n          error: error => observer.error(error),\n          complete: () => observer.complete(),\n        })\n    } catch (error) {\n      observer.error(error)\n    }\n  },\n\n  /**\n   * Action: Modules\n   *\n   * @param  {array} pkgs\n   * @param  {bool}  dev\n   * @return {Observable}\n   */\n  addDependencies: async function ({repo, pkgs, dev}, observer) {\n    let installation\n\n    observer.next(`Installing packages from ${repo}...`)\n\n    if (repo !== 'npm' && repo !== 'packagist') {\n      observer.error(`Incorrect package repo specified.`)\n    }\n\n    if (repo == 'npm') {\n      installation = this.execa.command(\n        `yarn add ${dev ? `-D` : ``} ${pkgs.join(' ')}`,\n        this.execaOptions,\n      )\n    }\n\n    if (repo == 'packagist') {\n      installation = this.execa.command(\n        `composer require ${pkgs.join(' ')} ${dev ? `--development` : ``}`,\n        this.execaOptions,\n      )\n    }\n\n    installation.stdout.on('data', status => {\n      observer.next(status)\n    })\n\n    installation.then(() => observer.complete())\n  },\n\n  /**\n   * Action: Install from package files\n   *\n   * @param  {string} repo\n   * @return {Observable}\n   */\n  install: async function ({repo}, observer) {\n    let installation\n\n    observer.next(`Installing packages from ${repo}...`)\n\n    if (repo !== 'npm' && repo !== 'packagist') {\n      observer.error(`Incorrect package repo specified.`)\n    }\n\n    if (repo == 'npm') {\n      installation = this.execa.command(`yarn`, this.execaOptions)\n    }\n\n    if (repo == 'packagist') {\n      installation = this.execa.command(`composer install`, this.execaOptions)\n    }\n\n    installation.stdout.on('data', status => {\n      observer.next(status.code)\n    })\n\n    installation.then(() => observer.complete())\n  },\n\n  /**\n   * Expose project JSON\n   */\n  json: async function ({file, merge}, observer) {\n    const json = require(`${this.projectDir}/${file}`)\n\n    observer.next('json-ish?')\n    observer.next(`Writing JSON to ${file}`)\n    observer.next('json-ish?')\n    const output = merge(json)\n\n    try {\n      await fs.outputFile(\n        `${this.projectDir}/${file}`,\n        this.format(output, 'json')\n      )\n\n      observer.complete()\n    } catch (err) {\n      observer.error(`There was a problem writing to ${file}`)\n    }\n  },\n}\n","import {join, dirname} from 'path'\nimport {useState, useEffect, useContext} from 'react'\n\n/** application */\nimport {bud as BudEngine} from '../../bud'\nimport {store} from '../store'\n\n/**\n * Runner\n *\n * @prop {bool}   ready\n * @prop {object} data\n * @prop {object} sprout\n * @prop {string} module\n */\nconst Runner = ({ready, data, sprout, module, outDir}) => {\n  const {dispatch} = useContext(store)\n\n  /**\n   * When the store ready boolean is flipped\n   * then initialize the BudEngine and return\n   * the observable to be subscribed to.\n   */\n  const [subscription, setSubscription] = useState()\n  useEffect(() => {\n    ready && setSubscription(\n      BudEngine.init({\n        sprout,\n        data,\n        outDir: outDir ? outDir : null,\n        templateDir: join(\n          dirname(module),\n          'templates',\n        ),\n      })\n      .actions()\n    )\n  }, [ready])\n\n  /**\n   * Once there is something to subscribe to\n   * subscribe to it and use what it emits as component\n   * state.\n   */\n  const [status, setStatus] = useState(null)\n  const [error, setError] = useState(null)\n  const [complete, setComplete] = useState(null)\n  useEffect(() => {\n    subscription?.subscribe({\n      next: next => setStatus(next),\n      error: error => setError(error),\n      complete: () => setComplete(true),\n    })\n  }, [subscription])\n\n  /**\n   * Handle status emittences.\n   */\n  useEffect(() => {\n    status && dispatch({\n      type: 'SET_STATUS',\n      status,\n    })\n  }, [status])\n\n  /**\n   * Handle error emittences.\n   */\n  useEffect(() => {\n    error && dispatch({\n      type: 'SET_ERROR',\n      error,\n    })\n  }, [error])\n\n  /**\n   * Handle the completion emittence.\n   */\n  useEffect(() => {\n    complete && dispatch({\n      type: 'SET_COMPLETE',\n      complete,\n    })\n  }, [complete])\n\n  return null\n}\n\nexport default Runner","import React from 'react'\nimport propTypes from 'prop-types'\nimport {Box, Text, Color} from 'ink'\nimport Spinner from 'ink-spinner'\n\n/**\n * Status\n *\n * @prop {string} status\n * @prop {bool}   comp\n */\nconst Status = ({status, complete}) =>\n  <Box>\n    {status && ! complete && (\n      <Text>\n        <Color green>\n          <Spinner type=\"dots\" />\n        </Color>\n        {` ${status}`}\n      </Text>\n    )}\n\n    {complete && (\n      <Text>\n        <Color green>\n          ⚡️ All set.\n        </Color>\n      </Text>\n    )}\n  </Box>\n\nStatus.propTypes = {\n  complete: propTypes.bool,\n}\n\nStatus.defaultProps = {\n  status: '',\n  complete: false,\n}\n\nexport default Status\n","import React from 'react'\nimport {Box, Color} from 'ink'\nimport PropTypes from 'prop-types'\n\n/**\n * Error\n */\nconst Error = ({message}) =>\n  message ? (\n    <Box>\n      <Color red>💥 {JSON.stringify(message)}</Color>\n    </Box>\n  ) : []\n\n\nError.propTypes = {\n  message: PropTypes.string,\n}\n\nexport default Error\n","import React, {useState, useEffect, useContext} from 'react'\nimport {Box} from 'ink'\n\n/** application */\nimport {store} from './store'\nimport Prompts from './containers/Prompts'\nimport Runner from './containers/Runner'\nimport Status from './components/Status'\nimport Error from './components/Error'\nconst budConfig = require(`${process.cwd()}/.bud/bud.config.json`)\n\n/**\n * Bud Application\n *\n * This container represents the main Bud application.\n *\n * It does not handle the initial command invocation or\n * routing. Rather, the  moduleReady and module props are supplied\n * by a command component, which are housed in the commands dir.\n *\n * @see ink (react cli framework)\n * @see pastel (ink project framework)\n *\n * @prop {bool}   moduleReady\n * @prop {string} module\n * @prop {string} outDirectory\n */\nconst Bud = ({moduleReady, module, outDir}) => {\n  const {state, dispatch} = useContext(store)\n\n  /**\n   * Load the \"sprout\" from the module file\n   * if the search has concluded.\n   */\n  const [sprout, setSprout] = useState(null)\n  useEffect(() => {\n    moduleReady\n      && module\n      && setSprout(require(module))\n  }, [moduleReady, module])\n\n  /**\n   * If the sprout has a description\n   * then update the application banner.\n   */\n  useEffect(() => {\n    sprout?.description && dispatch({\n      type: 'SET_LABEL',\n      label: sprout.description,\n    })\n  }, [sprout])\n\n  /**\n   * Load the config's project key into the store\n   * so that generators can use it as a fallback.\n   */\n  useEffect(() => {\n    budConfig && dispatch({\n      type: 'SET_DATA',\n      data: budConfig.project,\n    })\n  }, [budConfig])\n\n  /**\n   * If the generator has prompts then update the\n   * store with those prompts.\n   */\n  useEffect(() => {\n    sprout && (() => {\n      sprout.prompts\n      && sprout.prompts.length > 0\n        ? dispatch({\n          type: 'SET_PROMPTS',\n          prompts: sprout.prompts,\n        })\n        : dispatch({\n          type: 'SET_READY',\n          ready: true,\n        })\n    })()\n  }, [sprout])\n\n  /**\n   * Render the main app flow.\n   */\n  return (\n    <Box flexDirection=\"column\">\n      <Error message={state?.error} />\n\n      <Status\n        status={state?.status}\n        complete={state?.complete}\n      />\n\n      <Prompts />\n\n      <Runner\n        ready={state?.ready}\n        data={state?.data}\n        module={module}\n        sprout={sprout}\n        outDir={outDir}\n      />\n    </Box>\n  )\n}\n\nBud.defaultProps = {\n  outDir: null,\n  ready: false,\n}\n\nexport default Bud\n","import React from 'react'\nimport propTypes from 'prop-types'\nimport {Box, Text, Color} from 'ink'\nimport Link from 'ink-link'\n\n/**\n * Banner\n *\n * @prop {string} label\n */\nconst Banner = ({label}) => (\n  <Box marginBottom={1} flexDirection=\"row\" justifyContent=\"space-between\">\n    <Box flexDirection=\"column\">\n      <Text>{label}</Text>\n    </Box>\n\n    <Box flexDirection=\"row\">\n      <Text>{`🌱`}</Text>\n      <Text bold>\n        <Link url=\"https://roots.io/bud\">\n          <Color green>{'  Bud'}</Color>\n        </Link>\n      </Text>\n    </Box>\n  </Box>\n)\n\nBanner.propTypes = {\n  label: propTypes.string,\n}\n\nexport default Banner\n","import {resolve} from 'path'\nimport React, {useContext, useEffect, useState} from 'react'\nimport {Box} from 'ink'\nimport PropTypes from 'prop-types'\n\n/** application */\nimport Bud from '../src/components/Bud'\nimport {StateProvider, store} from '../src/components/store'\nimport Banner from '../src/components/components/Banner'\n\nconst initModule = resolve(__dirname, './../../src/budfiles/init/init.bud')\n\nconst strings = {\n  title: 'Bud: WordPress CLI generator tooling',\n}\n\n/** Command: bud init */\n/// Create a new project\nconst Init = props => {\n  const {state} = useContext(store)\n  /**\n   * Update the generator label.\n   */\n  const [label, setLabel] = useState(strings.title)\n  useEffect(() => {\n    state?.label && setLabel(state.label)\n  }, [state?.label])\n\n  return (\n    <Box marginTop={1} flexDirection={'column'}>\n      <Banner label={label} />\n      <Box flexDirection={'column'} marginBottom={1}>\n        <Bud\n          outDir={props.projectDir}\n          module={initModule}\n          moduleReady={true}\n        />\n      </Box>\n    </Box>\n  )\n}\n\n/** Command: bud init */\n/// Initialize a Bud project\nconst InitCLI = props => {\n  return (\n    <StateProvider>\n      <Init {...props} />\n    </StateProvider>\n  )\n}\n\nInitCLI.propTypes = {\n  /// Output directory\n  projectDir: PropTypes.string,\n}\n\nInitCLI.positionalArgs = ['projectDir']\n\nexport default InitCLI\n"]}