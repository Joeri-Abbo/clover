{"version":3,"sources":["../src/bud/compiler/helpers/index.js","../src/bud/compiler/index.js","../src/bud/config/index.js","../src/bud/data/index.js","../src/bud/util/command.js","../src/bud/util/index.js","../src/bud/actions/addDependencies.js","../src/bud/actions/compile.js","../src/bud/actions/copy.js","../src/bud/actions/install.js","../src/bud/actions/json.js","../src/bud/actions/mkDir.js","../src/bud/actions/scaffold.js","../src/bud/actions/index.js","../src/bud/prettier/inferParser.js","../prettier.config.js","../src/bud/prettier/format.js","../src/bud/prettier/index.js","../src/bud/index.js","../src/components/Banner.js","../src/components/Tasks.js","../src/components/Error.js","../src/components/App.js","init.js"],"names":["helpers","data","helper","fn","Array","prototype","slice","call","arguments","object","component","options","indexOf","inverse","components","hasInstance","forEach","makeCompiler","sprout","handlebars","registerHelpers","push","registerHelper","compiler","make","path","compile","makeConfig","projectDir","templateDir","config","execa","cwd","makeData","setData","key","value","project","command","cmd","makeUtil","addDependencies","task","observer","util","installation","next","repo","error","dev","pkgs","join","stdout","on","status","then","complete","prettier","src","dest","template","parser","format","copy","install","json","require","file","output","merge","err","mkDir","JSON","stringify","scaffold","actions","paths","pipe","Observable","subscribe","register","action","handle","callback","parsers","js","jsx","graphql","css","md","html","htm","ts","tsx","yml","yaml","less","inferParser","ext","split","length","module","exports","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","overrides","files","content","bud","props","registerActions","tasks","Banner","label","Tasks","noClear","write","Error","message","process","App","outDir","configFile","prompts","setPrompts","setStatus","setError","setComplete","subscription","setSubscription","exit","unsubscribe","propTypes","PropTypes","string","bool","defaultProps","budfileDir","__dirname","Init","budfile","setBudfile","setTemplateDir","setSprout","setLabel","positionalArgs"],"mappings":"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","file":"init.js","sourceRoot":"../../commands","sourcesContent":["/**\n * Templating helpers\n */\nconst helpers = data => [\n  {\n    helper: 'array',\n    fn: function () {\n      return Array.prototype.slice.call(arguments, 0, -1)\n    },\n  },\n  {\n    helper: 'has',\n    fn: function (object, component, options) {\n      if (data[object].indexOf(component) > -1) {\n        return options.fn(this)\n      }\n\n      return options.inverse(this)\n    },\n  },\n  {\n    helper: 'hasAny',\n    fn: function (object, components, options) {\n      let hasInstance = false\n\n      if (components) {\n        components.forEach(component => {\n          if (data[object].indexOf(component) > -1) {\n            hasInstance = true\n          }\n        })\n      }\n\n      return hasInstance ? options.fn(this) : options.inverse(this)\n    },\n  },\n  {\n    helper: 'raw',\n    fn: function (options) {\n      return options.fn()\n    },\n  },\n]\n\nexport default helpers\n","import handlebars from 'handlebars'\nimport helpers from './helpers'\nimport handlebarsHelpers from 'handlebars-helpers'\n\n/**\n * Compiler.\n *\n * @param {handlebars} handlebars\n */\nconst makeCompiler = ({sprout, data}) => {\n  handlebarsHelpers({handlebars})\n\n  sprout.registerHelpers &&\n    sprout.registerHelpers.forEach(helper => {\n      helpers.push(helper)\n    })\n\n  helpers(data).forEach(({helper, fn}) => {\n    handlebars.registerHelper(helper, fn)\n  })\n\n  return {\n    compiler: handlebars,\n\n    /**\n     * Make template.\n     *\n     * @param {string} path\n     */\n    make: function (path) {\n      return this.compiler.compile(path)\n    },\n  }\n}\n\nexport default makeCompiler\n","/**\n * Config\n *\n * @param {string} projectDir\n */\nconst makeConfig = ({projectDir, templateDir, config}) => ({\n  projectDir,\n  templateDir,\n  ...config,\n  execa: {\n    cwd: projectDir,\n  },\n})\n\nexport default makeConfig\n","/**\n * Make data\n *\n * @type   {func}\n * @prop   {object} data\n * @return {object}\n */\nconst makeData = ({config, data}) => {\n  const setData = ({key, value}) => {\n    data[`${key}`] = value\n  }\n\n  return {\n    ...(config ? config.project : []),\n    ...data,\n    setData,\n  }\n}\n\nexport default makeData\n","import execa from 'execa'\n\n/**\n * Task runner\n *\n * @param  {object} config\n *\n * @return {func}\n */\nconst command = config => {\n  return cmd => execa.command(cmd, config.execa)\n}\n\nexport default command\n","import command from './command'\n\n/**\n * Make util\n *\n * @prop   {object} config\n * @return {object}\n */\nconst makeUtil = ({config}) => ({\n  command: command(config),\n})\n\nexport default makeUtil\n","/**\n * Action: Add dependencies\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   util\n *\n * @return {void}\n */\nconst addDependencies = async ({task, observer, util}) => {\n  let installation\n\n  observer.next(`Installing packages from ${task.repo}...`)\n\n  if (task.repo !== 'npm' && task.repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (task.repo == 'npm') {\n    installation = util.command(\n      `yarn add ${task.dev ? `-D` : ``} ${task.pkgs.join(' ')}`,\n    )\n  }\n\n  if (task.repo == 'packagist') {\n    installation = util.command(\n      `composer require ${task.pkgs.join(' ')} ${\n        task.dev ? `--development` : ``\n      }`,\n    )\n  }\n\n  installation.stdout.on('data', status => {\n    observer.next(status)\n  })\n\n  installation.then(() => observer.complete())\n}\n\nexport default addDependencies\n","import {join} from 'path'\nimport {outputFile, readFile} from 'fs-extra'\n\n/**\n * Action: template\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   data\n * @param  {object}   config\n * @param  {object}   util\n * @param  {object}   prettier\n * @param  {object}   compiler\n * @return {void}\n */\nconst compile = async ({task, observer, data, config, prettier, compiler}) => {\n  const src = await readFile(join(config.templateDir, task.src), 'utf8')\n  const dest = compiler.make(task.dest)(data)\n  const template = compiler.make(src)(data)\n\n  await outputFile(\n    ...[\n      join(config.projectDir, dest),\n      task.parser ? prettier.format(template, task.parser) : template,\n    ],\n  )\n\n  observer.complete()\n}\n\nexport default compile\n","import {join} from 'path'\nimport {copy as fsCopy} from 'fs-extra'\n\n/**\n * Action: copy\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n *\n * @return {void}\n */\nconst copy = async ({task, observer, config}) => {\n  const src = join(config.templateDir, task.src)\n  const dest = join(config.projectDir, task.dest)\n\n  await fsCopy(src, dest)\n\n  observer.complete()\n}\n\nexport default copy\n","/**\n * Action: Install from package files\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n *\n * @return {Observable}\n */\nconst install = async ({task, observer, util}) => {\n  let installation\n\n  observer.next(`Installing packages from ${task.repo}...`)\n\n  if (task.repo !== 'npm' && task.repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (task.repo == 'npm') {\n    installation = util.command(`yarn`)\n  }\n\n  if (task.repo == 'packagist') {\n    installation = util.command(`composer install`)\n  }\n\n  installation.stdout.on('data', status => {\n    observer.next(status)\n  })\n\n  installation.then(() => observer.complete())\n}\n\nexport default install\n","import {outputFile} from 'fs-extra'\n\n/**\n * Action: Manipulate project JSON\n *\n * @prop {object}   task\n * @prop {Observer} observer\n * @prop {Prettier} prettier\n */\nconst json = async function ({task, observer, prettier, config}) {\n  const json = require(`${config.projectDir}/${task.file}`)\n  observer.next(`Writing JSON to ${task.file}`)\n\n  try {\n    const output = task.merge(json)\n    await outputFile(\n      `${config.projectDir}/${task.file}`,\n      prettier.format(output, 'json'),\n    )\n\n    observer.complete()\n  } catch (err) {\n    observer.error(`There was a problem writing to ${task.file}`)\n  }\n}\n\nexport default json\n","import {join} from 'path'\nimport {ensureDir} from 'fs-extra'\n\n/**\n * Make directory\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n * @param  {object}   data\n * @param  {object}   compiler\n *\n * @return {void}\n */\nconst mkDir = async ({task, observer, config, data, compiler}) => {\n  const path = join(config.projectDir, compiler.make(task.path)(data))\n\n  try {\n    await ensureDir(path).then(() => {\n      observer.next()\n    })\n  } catch (error) {\n    observer.error(`actions.mkDir: ${JSON.stringify(error)}`)\n  }\n}\n\nexport default mkDir\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Scaffold directories\n *\n * @param  {array} paths\n * @return {Observable}\n */\nconst scaffold = ({task, observer, config, data, compiler, actions}) => {\n  observer.next(`Creating directories`)\n\n  return from(task.paths)\n    .pipe(\n      concatMap(path => {\n        return new Observable(async observer => {\n          try {\n            await actions.mkDir({\n              task: {path},\n              config,\n              data,\n              compiler,\n              observer,\n            })\n\n            observer.complete()\n          } catch (error) {\n            observer.error(`error: thrown in actions.scaffold`)\n          }\n        })\n      }),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default scaffold\n","import addDependencies from './addDependencies'\nimport compile from './compile'\nimport copy from './copy'\nimport install from './install'\nimport json from './json'\nimport mkDir from './mkDir'\nimport scaffold from './scaffold'\n\n/**\n * Actions\n */\nconst actions = {\n  addDependencies,\n  compile,\n  copy,\n  install,\n  json,\n  mkDir,\n  scaffold,\n  register: function (action) {\n    this[`${action.handle}`] = action.callback\n  },\n}\n\nexport default actions\n","/**\n * Prettier parsers.\n * @type {object}\n */\nconst parsers = {\n  js: 'babel',\n  jsx: 'babel',\n  graphql: 'graphql',\n  css: 'css',\n  json: 'json',\n  md: 'markdown',\n  html: 'html',\n  htm: 'html',\n  ts: 'typescript',\n  tsx: 'typescript',\n  yml: 'yaml',\n  yaml: 'yaml',\n  less: 'less',\n}\n\n/**\n * Infer parser.\n *\n * @type  {async func}\n * @param {string} file\n */\nconst inferParser = async function (file) {\n  const ext = file.split('.')[file.split('.').length - 1]\n\n  return parsers[`${ext}`] ?? null\n}\n\nexport default inferParser\n","module.exports = {\n  arrowParens: 'avoid',\n  bracketSpacing: false,\n  tabWidth: 2,\n  printWidth: 80,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: false,\n  trailingComma: 'all',\n  semi: false,\n  overrides: [\n    {\n      files: ['*.md'],\n      options: {\n        parser: 'markdown',\n      },\n    },\n    {\n      files: ['*.json'],\n      options: {\n        parser: 'json',\n      },\n    },\n  ],\n}\n","import prettier from 'prettier'\nconst config = require('../../../prettier.config.js')\n\n/**\n * Format\n *\n * @type   {func}\n * @param  {object|string} content\n * @param  {parser} string\n * @return {string}\n */\nconst format = (content, parser) => {\n  content = typeof content !== 'string' ? JSON.stringify(content) : content\n\n  return prettier.format(content, {\n    ...config,\n    parser: parser || 'babel',\n  })\n}\n\nexport default format\n","import inferParser from './inferParser'\nimport format from './format'\n\n/**\n * Prettier\n */\nconst prettier = {\n  format,\n  inferParser,\n}\n\nexport default prettier\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\nimport makeCompiler from './compiler'\nimport makeConfig from './config'\nimport makeData from './data'\nimport makeUtil from './util'\nimport actions from './actions'\nimport prettier from './prettier'\n\n/**\n * 🌱 bud starter\n *\n * @prop {string} projectDir\n * @prop {object} projectConfig\n * @prop {object} data\n * @prop {object} sprout\n * @prop {string} templateDir\n *\n * @return {Observable}\n */\nconst bud = props => {\n  const config = makeConfig({...props})\n  const data = makeData({...props})\n\n  const {sprout} = props\n  const util = makeUtil({config})\n  const compiler = makeCompiler({sprout, data})\n\n  sprout.registerActions &&\n    sprout.registerActions.forEach(action => {\n      actions.register(action)\n    })\n\n  return new Observable(observer => {\n    from(sprout.tasks)\n      .pipe(\n        concatMap(function (task) {\n          return new Observable(async observer => {\n            observer.next(task.action)\n\n            actions[task.action]({\n              task,\n              observer,\n              config,\n              data,\n              actions,\n              compiler,\n              prettier,\n              util,\n            })\n          })\n        }),\n      )\n      .subscribe({\n        next: next => observer.next(next),\n        error: error => observer.error(error),\n        complete: complete => observer.complete(complete),\n      })\n  })\n}\n\nexport default bud\n","import React from 'react'\nimport {Box, Color, Text} from 'ink'\nimport Link from 'ink-link'\n\n/**\n * Banner component.\n *\n * @prop {string} label\n */\nconst Banner = ({label}) => (\n  <Box marginBottom={1} flexDirection=\"row\" justifyContent=\"space-between\">\n    {label && <Text>{label}</Text>}\n    <Box flexDirection=\"row\">\n      <Text>{`🌱`}</Text>\n      <Text bold>\n        <Link url=\"https://roots.io/bud\">\n          <Color green>{'  Bud'}</Color>\n        </Link>\n      </Text>\n    </Box>\n  </Box>\n)\n\nexport default Banner\n","import React, {useEffect} from 'react'\nimport {Box, Color, Text, useStdout} from 'ink'\nimport Spinner from 'ink-spinner'\n\n/**\n * Tasks\n *\n * @prop {object} data\n * @prop {object} status\n * @prop {bool}   complete\n * @prop {bool}   noClear\n */\nconst Tasks = ({data, status, complete, noClear}) => {\n  const {stdout} = useStdout()\n  useEffect(() => {\n    data && !noClear && stdout.write('\\x1B[2J\\x1B[0f')\n  }, [data])\n\n  return status ? (\n    <Box>\n      {complete ? (\n        <Color green>⚡️ All set.</Color>\n      ) : (\n        <Text>\n          <Color green>\n            <Spinner type=\"dots\" />\n          </Color>\n          {` ${status}`}\n        </Text>\n      )}\n    </Box>\n  ) : null\n}\n\nexport default Tasks\n","import React from 'react'\nimport {Box, Color} from 'ink'\n\n/**\n * Error\n */\nconst Error = ({message}) => (\n  <Box>\n    <Color red>💥 {JSON.stringify(message)}</Color>\n  </Box>\n)\n\nexport default Error\n","import {join} from 'path'\nimport {existsSync} from 'fs'\nimport React, {useState, useEffect} from 'react'\nimport {Box, useApp} from 'ink'\nimport PropTypes from 'prop-types'\nimport {prompt} from 'enquirer'\nimport bud from '../bud'\n\nimport Banner from './Banner'\nimport Tasks from './Tasks'\nimport Error from './Error'\n\nconst cwd = process.cwd()\n\n/**\n * App\n *\n * @prop {string} label\n * @prop {string} templateDir\n * @prop {object} sprout\n * @prop {string} outDir\n * @prop {object} values\n * @prop {object} children\n * @prop {bool}   noClear\n */\nconst App = ({label, templateDir, sprout, outDir, noClear}) => {\n  /**\n   * source bud.config.json\n   */\n  const configFile = join(cwd, '.bud/bud.config.json')\n  const [config] = useState(existsSync(configFile) ? require(configFile) : null)\n\n  /**\n   * Assemble data from prompts\n   */\n  const [data, setData] = useState(null)\n  const [prompts, setPrompts] = useState(sprout.prompts ? sprout.prompts : null)\n  useEffect(() => {\n    if (prompts) {\n      prompt(prompts).then(data => {\n        setPrompts(null)\n        setData(data)\n      })\n    } else {\n      setPrompts(null)\n      setData({})\n    }\n  }, [])\n\n  /**\n   * Observer subscribe\n   */\n  const [status, setStatus] = useState(null)\n  const [error, setError] = useState(null)\n  const [complete, setComplete] = useState(false)\n  const [subscription, setSubscription] = useState(false)\n  useEffect(() => {\n    data &&\n      !subscription &&\n      setSubscription(\n        bud({\n          sprout,\n          data,\n          config,\n          templateDir,\n          projectDir: join(cwd, outDir),\n        }).subscribe({\n          next: next => setStatus(next),\n          error: error => setError(error),\n          complete: () => setComplete(true),\n        }),\n      )\n  }, [config, data, status])\n\n  /**\n   * Observer unsubscribe.\n   */\n  const {exit} = useApp()\n  useEffect(() => {\n    const unsubscribe = async () => {\n      await subscription.unsubscribe()\n      exit()\n    }\n\n    complete && unsubscribe()\n  }, [complete, subscription])\n\n  /**\n   * Render observable updates and errors\n   */\n  return (\n    <Box flexDirection=\"column\" justifyContent=\"flex-start\" padding={1}>\n      <Banner label={label} />\n      <Tasks\n        data={data}\n        status={status}\n        complete={complete}\n        noClear={noClear}\n      />\n      {error && <Error message={error} />}\n    </Box>\n  )\n}\n\nApp.propTypes = {\n  label: PropTypes.string,\n  sprout: PropTypes.object,\n  noClear: PropTypes.bool,\n}\n\nApp.defaultProps = {\n  sprout: {\n    actions: [],\n    label: 'Bud',\n    prompts: [],\n  },\n  noClear: false,\n}\n\nexport default App\n","import {resolve} from 'path'\nimport React, {useState, useEffect} from 'react'\nimport {Box} from 'ink'\nimport PropTypes from 'prop-types'\nimport Spinner from 'ink-spinner'\n\nimport App from './../src/components/App'\n\n/** Constants */\nconst budfileDir = resolve(__dirname, './../../src/budfiles/init')\n\n/** Command: bud init */\n/// Create a new project\nconst Init = props => {\n  /**\n   * Directories\n   */\n  const [projectDir] = useState(props.projectDir)\n  const [budfile, setBudfile] = useState(null)\n  const [templateDir, setTemplateDir] = useState(null)\n  useEffect(() => {\n    if (budfileDir) {\n      setBudfile(`${budfileDir}/init.bud`)\n      setTemplateDir(`${budfileDir}/templates`)\n    }\n  }, [budfileDir])\n\n  /**\n   * Sprout.\n   */\n  const [sprout, setSprout] = useState(null)\n  useEffect(() => {\n    budfile && setSprout(require(budfile))\n  }, [budfile])\n\n  /**\n   * Label.\n   */\n  const [label, setLabel] = useState('Bud CLI')\n  useEffect(() => {\n    sprout && setLabel(sprout.label)\n  }, [sprout])\n\n  /**\n   * Render.\n   */\n  return sprout ? (\n    <App\n      label={label}\n      outDir={projectDir || ''}\n      sprout={sprout}\n      templateDir={templateDir}\n    />\n  ) : (\n    <Box>\n      <Spinner /> Loading\n    </Box>\n  )\n}\n\nInit.propTypes = {\n  /// Output directory\n  projectDir: PropTypes.string,\n}\n\nInit.defaultProps = {\n  budfileDir: budfileDir,\n}\n\nInit.positionalArgs = ['projectDir']\n\nexport default Init\n"]}