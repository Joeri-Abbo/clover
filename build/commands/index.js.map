{"version":3,"sources":["../prettier.config.js","../src/bud/helpers.js","../src/bud/index.js","../src/components/BudCLI.js","index.js"],"names":["module","exports","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","overrides","files","options","parser","data","helper","fn","Array","prototype","slice","call","arguments","object","component","indexOf","inverse","components","hasInstance","forEach","join","require","fs","fetch","execa","handlebars","prettier","Observable","from","concatMap","basePrettierConfig","handlebarsHelpers","helpers","bud","init","outDir","sprout","templateDir","projectDir","execaOptions","cwd","registerActions","registerHelpers","getConfig","path","process","getData","setData","getTemplate","template","contents","readFile","action","handle","callback","length","push","registerHelper","format","content","JSON","stringify","actions","observer","pipe","task","subscribe","next","error","complete","scaffold","paths","mkDir","pathTemplate","compile","dirPath","ensureDir","then","dest","split","compiled","outputContents","outputFile","addDependencies","repo","pkgs","dev","installation","command","stdout","on","status","install","json","file","merge","output","err","DEFAULT_BUDFILE","label","prompts","BudCLI","values","inert","children","config","configData","setPrompts","exit","setStatus","setComplete","budSubscription","setBudSubscription","project","BudCore","unsubscribe","Tasks","write","Bud"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["module.exports = {\n  arrowParens: 'avoid',\n  bracketSpacing: false,\n  tabWidth: 2,\n  printWidth: 80,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: false,\n  trailingComma: 'all',\n  semi: false,\n  overrides: [\n    {\n      files: ['*.md'],\n      options: {\n        parser: 'markdown',\n      },\n    },\n    {\n      files: ['*.json'],\n      options: {\n        parser: 'json',\n      },\n    },\n  ],\n}\n","/**\n * Handlebars helpers\n */\nmodule.exports = data => {\n  return [\n    {\n      helper: 'array',\n      fn: function () {\n        return Array.prototype.slice.call(arguments, 0, -1)\n      },\n    },\n    {\n      helper: 'has',\n      fn: function (object, component, options) {\n        if (data[object].indexOf(component) > -1) {\n          return options.fn(this)\n        }\n\n        return options.inverse(this)\n      },\n    },\n    {\n      helper: 'hasAny',\n      fn: function (object, components, options) {\n        let hasInstance = false\n\n        if (components) {\n          components.forEach(component => {\n            if (data[object].indexOf(component) > -1) {\n              hasInstance = true\n            }\n          })\n        }\n\n        return hasInstance ? options.fn(this) : options.inverse(this)\n      },\n    },\n    {\n      helper: 'raw',\n      fn: function (options) {\n        return options.fn()\n      },\n    },\n  ]\n}\n","const {join} = require('path')\nconst fs = require('fs-extra')\nconst fetch = require('node-fetch')\nconst execa = require('execa')\nconst handlebars = require('handlebars')\nconst prettier = require('prettier')\nconst {Observable, from} = require('rxjs')\nconst {concatMap} = require('rxjs/operators')\n\nconst basePrettierConfig = require('./../../prettier.config.js')\nconst handlebarsHelpers = require('handlebars-helpers')\nconst helpers = require('./helpers')\n\n/**\n * Bud Core\n */\nexport const bud = {\n  fs,\n  fetch,\n  execa,\n  prettier,\n  handlebars,\n\n  /**\n   * Initialize\n   *\n   * @param {string} outDir\n   * @param {object} data\n   * @param {object} sprout\n   * @param {string} templateDir\n   * @param {bool}   skipInstall\n   */\n  init: function ({outDir = './', data = {}, sprout, templateDir}) {\n    this.data = data\n    this.sprout = sprout\n    this.projectDir = outDir\n    this.execaOptions = {cwd: this.projectDir}\n    this.templateDir = templateDir\n\n    this.registerActions()\n    this.registerHelpers()\n\n    return this\n  },\n\n  /**\n   * Get config.\n   *\n   * @return {object}\n   */\n  getConfig: function () {\n    return {\n      path: `${process.cwd()}/${this.projectDir}/.bud/bud.config.json`,\n      data: require(`${process.cwd()}/${this.projectDir}/.bud/bud.config.json`),\n    }\n  },\n\n  /**\n   * Get data.\n   *\n   * @return {object}\n   */\n  getData: function () {\n    return this.data\n  },\n\n  /**\n   * Set data.\n   *\n   * @param  {object} data\n   * @return {void}\n   */\n  setData: function (data) {\n    this.data = data\n  },\n\n  /**\n   * Get template contents.\n   *\n   * @param  {string} template\n   * @return {array}\n   */\n  getTemplate: async function (template) {\n    const path = join(this.templateDir, template)\n    const contents = await fs.readFile(path, 'utf8')\n\n    return {path, contents}\n  },\n\n  /**\n   * Register actions\n   */\n  registerActions: function () {\n    this.sprout.registerActions &&\n      this.sprout.registerActions.forEach(action => {\n        this[`${action.handle}`] = action.callback\n      })\n  },\n\n  /**\n   * Register helpers\n   */\n  registerHelpers: function () {\n    // lib helpers\n    handlebarsHelpers({handlebars: this.handlebars})\n\n    // plugin registered helpers\n    this.sprout.registerHelpers &&\n      this.sprout.registerHelpers.length > 0 &&\n      this.sprout.registerHelpers.forEach(helper => {\n        helpers.push(helper)\n      })\n\n    // roots/bud helpers\n    helpers(this.getData()).forEach(({helper, fn}) => {\n      this.handlebars.registerHelper(helper, fn)\n    })\n  },\n\n  /**\n   * Format\n   *\n   * @param  {object|string} content\n   * @param  {parser} string\n   * @return {string}\n   */\n  format: function (content, parser) {\n    return this.prettier.format(\n      typeof content !== 'string' ? JSON.stringify(content) : content,\n      {\n        ...basePrettierConfig,\n        parser: parser || 'babel',\n      },\n    )\n  },\n\n  /**\n   * Actions\n   *\n   * @return {Observable}\n   */\n  actions: function () {\n    const bud = {...this}\n\n    return new Observable(function (observer) {\n      from(bud.sprout.actions)\n        .pipe(\n          concatMap(function (task) {\n            return new Observable(async function (observer) {\n              return bud[task.action](task, observer, bud)\n            })\n          }),\n        )\n        .subscribe({\n          next: next => observer.next(next),\n          error: error => observer.error(error),\n          complete: complete => observer.complete(complete),\n        })\n    })\n  },\n\n  /**\n   * Scaffold directories\n   *\n   * @param  {array} paths\n   * @return {Observable}\n   */\n  scaffold: function ({paths}, observer) {\n    observer.next(`Creating directories`)\n\n    from(paths)\n      .pipe(\n        concatMap(path => {\n          return new Observable(async observer => {\n            await this.mkDir({path}, observer)\n          })\n        }),\n      )\n      .subscribe({\n        next: next => observer.next(next),\n        complete: () => observer.complete(),\n      })\n  },\n\n  /**\n   * Make directory\n   *\n   * @param  {string}     path\n   * @param  {Observable} observer\n   * @return {Observable}\n   */\n  mkDir: async function ({path}, observer) {\n    const pathTemplate = this.handlebars.compile(path)\n    const dirPath = join(this.projectDir, pathTemplate(this.getData()))\n\n    await fs.ensureDir(dirPath).then(() => {\n      observer.complete()\n    })\n  },\n\n  /**\n   * Action: template\n   *\n   * @param  {string} parser\n   * @param  {string} path\n   * @param  {string} template\n   * @return {Observable}\n   */\n  template: async function ({parser, path, template}, observer) {\n    const {contents} = await this.getTemplate(template)\n    const dest = join(\n      this.projectDir,\n      this.handlebars.compile(path)(this.getData()),\n    )\n\n    observer.next(`Writing ${dest.split('/')[dest.split('/').length - 1]}`)\n\n    const compiled = this.handlebars.compile(contents)(this.getData())\n    const outputContents = parser ? this.format(compiled, parser) : compiled\n\n    fs.outputFile(dest, outputContents).then(() => observer.complete())\n  },\n\n  /**\n   * Action: Modules\n   *\n   * @param  {array} pkgs\n   * @param  {bool}  dev\n   * @return {Observable}\n   */\n  addDependencies: async function ({repo, pkgs, dev}, observer) {\n    let installation\n    observer.next(`Installing packages from ${repo}...`)\n\n    if (repo !== 'npm' && repo !== 'packagist') {\n      observer.error(`Incorrect package repo specified.`)\n    }\n\n    if (repo == 'npm') {\n      installation = this.execa.command(\n        `yarn add ${dev ? `-D` : ``} ${pkgs.join(' ')}`,\n        this.execaOptions,\n      )\n    }\n\n    if (repo == 'packagist') {\n      installation = this.execa.command(\n        `composer require ${pkgs.join(' ')} ${dev ? `--development` : ``}`,\n        this.execaOptions,\n      )\n    }\n\n    installation.stdout.on('data', status => {\n      observer.next(status)\n    })\n\n    installation.then(() => observer.complete())\n  },\n\n  /**\n   * Action: Install from package files\n   *\n   * @param  {string} repo\n   * @return {Observable}\n   */\n  install: async function ({repo}, observer) {\n    let installation\n\n    observer.next(`Installing packages from ${repo}...`)\n\n    if (repo !== 'npm' && repo !== 'packagist') {\n      observer.error(`Incorrect package repo specified.`)\n    }\n\n    if (repo == 'npm') {\n      installation = this.execa.command(`yarn`, this.execaOptions)\n    }\n\n    if (repo == 'packagist') {\n      installation = this.execa.command(`composer install`, this.execaOptions)\n    }\n\n    installation.stdout.on('data', status => {\n      observer.next(status)\n    })\n\n    installation.then(() => observer.complete())\n  },\n\n  /**\n   * Expose project JSON\n   */\n  json: async function ({file, merge}, observer) {\n    const json = require(`${this.projectDir}/${file}`)\n    observer.next(`Writing JSON to ${file}`)\n\n    try {\n      const output = merge(json)\n\n      await fs.outputFile(\n        `${this.projectDir}/${file}`,\n        this.format(output, 'json'),\n      )\n\n      observer.complete()\n    } catch (err) {\n      observer.error(`There was a problem writing to ${file}`)\n    }\n  },\n}\n","import {join} from 'path'\nimport {existsSync} from 'fs'\nimport React, {useState, useEffect} from 'react'\nimport {Box, Color, Text, useApp, useStdout} from 'ink'\nimport Link from 'ink-link'\nimport Spinner from 'ink-spinner'\nimport {prompt} from 'enquirer'\nimport {bud as BudCore} from './../bud'\n\nconst DEFAULT_BUDFILE = {\n  actions: [],\n  label: 'Budfile',\n  prompts: [],\n}\n\n/**\n * Bud CLI\n *\n * @prop {string} label\n * @prop {string} budFile\n * @prop {string} outDir\n * @prop {object} values\n * @prop {object} children\n */\nconst BudCLI = ({\n  label,\n  templateDir,\n  sprout = DEFAULT_BUDFILE,\n  outDir,\n  values = null,\n  inert = false,\n  children,\n}) => {\n  /**\n   * Parse values from .bud/bud.config.json\n   */\n  const config = join(process.cwd(), '.bud/bud.config.json')\n  const [configData] = useState(existsSync(config) ? require(config) : null)\n\n  /**\n   * Parse values from prompt\n   */\n  const [prompts, setPrompts] = useState(\n    !values && sprout.prompts ? sprout.prompts : null,\n  )\n\n  const {exit} = useApp()\n  const [data, setData] = useState(null)\n  const [status, setStatus] = useState(null)\n  const [complete, setComplete] = useState(false)\n  const [budSubscription, setBudSubscription] = useState(false)\n\n  /**\n   * Assemble data from config files, prompt & cli args/flags.\n   */\n  useEffect(() => {\n    prompts\n      ? prompt(prompts).then(data => {\n          setPrompts(null)\n          setData({\n            ...(configData && configData.project ? configData.project : []),\n            ...(configData && configData.dev ? configData.dev : []),\n            ...data,\n            ...(values ? values : []),\n          })\n        })\n      : (() => {\n          setPrompts(null)\n          setData({\n            ...(configData && configData.project ? configData.project : []),\n            ...(configData && configData.dev ? configData.dev : []),\n            ...(values ? values : []),\n          })\n        })()\n  }, [])\n\n  /**\n   * Run the budfile actions\n   */\n  useEffect(() => {\n    data &&\n      !inert &&\n      !budSubscription &&\n      setBudSubscription(\n        BudCore.init({\n          data,\n          templateDir,\n          sprout,\n          outDir,\n        })\n          .actions()\n          .subscribe({\n            next: next => setStatus(next),\n            complete: () => setComplete(true),\n          }),\n      )\n  }, [data, status])\n\n  useEffect(() => {\n    complete &&\n      (async () => {\n        await budSubscription.unsubscribe()\n        exit()\n      })()\n  }, [complete, budSubscription])\n\n  /**\n   * Render TTY\n   */\n  return (\n    <Box flexDirection=\"column\" justifyContent=\"flex-start\" padding={1}>\n      <Box marginBottom={1} flexDirection=\"row\" justifyContent=\"space-between\">\n        {label && <Text>{label}</Text>}\n        <Box flexDirection=\"row\">\n          <Text>{`🌱`}</Text>\n          <Text bold>\n            <Link url=\"https://roots.io/bud\">\n              <Color green>{'  Bud'}</Color>\n            </Link>\n          </Text>\n        </Box>\n      </Box>\n\n      <Tasks data={data} status={status} complete={complete} />\n\n      {children && children}\n    </Box>\n  )\n}\n\nconst Tasks = ({data, status, complete}) => {\n  const {stdout} = useStdout()\n  useEffect(() => {\n    data && stdout.write('\\x1B[2J\\x1B[0f')\n  }, [data])\n\n  return status ? (\n    <Box>\n      {complete ? (\n        <Color green>⚡️ All set.</Color>\n      ) : (\n        <Text>\n          <Color green>\n            <Spinner type=\"dots\" />\n          </Color>\n          {` ${status}`}\n        </Text>\n      )}\n    </Box>\n  ) : (\n    []\n  )\n}\n\nexport default BudCLI\n","import React from 'react'\nimport {Box, Color, Text} from 'ink'\nimport BudCLI from './../src/components/BudCLI'\n\n/** Command: bud */\n/// Bud information\nconst Bud = () => (\n  <BudCLI label={'Bud: Modern WordPress Scaffolding'} inert={true}>\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text>\n          To get started run <Color green>npx @roots/bud init {`{project-dir}`}</Color>\n        </Text>\n      </Box>\n    </Box>\n  </BudCLI>\n)\n\nexport default Bud\n"]}